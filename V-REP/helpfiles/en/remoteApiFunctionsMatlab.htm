<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Strict//EN">
<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<title>Remote API functions (Matlab)</title>
<link rel="stylesheet" type="text/css" href="../style.css">
</head>

<body>

<div align="center">
<table class=allEncompassingTable >
 <tr>
  <td >
<p><a href="../index.html" TARGET="_top"><img src="images/homeImg.png"></a></p>



<h1><a href="remoteApiOverview.htm">Remote API</a> functions (Matlab)</h1>

<h3 class=subsectionBar><a name="simxAddStatusbarMessage" id="simxAddStatusbarMessage"></a>simxAddStatusbarMessage (regular API equivalent: <a href="regularApi/simAddStatusbarMessage.htm">sim.addStatusbarMessage</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Adds a message to the status bar.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode]=simxAddStatusbarMessage(number clientID,string message,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>message</strong>: the message to display</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxAddStatusbarMessage">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxAddStatusbarMessage">Python</a>, <a href="remoteApiFunctionsJava.htm#simxAddStatusbarMessage">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxAddStatusbarMessage">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxAddStatusbarMessage">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxAppendStringSignal" id="simxAppendStringSignal"></a>simxAppendStringSignal</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>DEPRECATED. Refer to <a href="#simxWriteStringStream">simxWriteStringStream</a> instead.<br><br>Appends a string to a string signal. If that signal is not yet present, it is added. To pack/unpack integers/floats into/from a string, refer to <a href="#simxPackInts">simxPackInts</a>, <a href="#simxPackFloats">simxPackFloats</a>, <a href="#simxUnpackInts">simxUnpackInts</a> and <a href="#simxUnpackFloats">simxUnpackFloats</a>. See also <a href="#simxSetStringSignal">simxSetStringSignal</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode]=simxAppendStringSignal(number clientID,string signalName,string signalValueToAppend,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>signalName</strong>: name of the signal</div>
<div><strong>signalValueToAppend</strong>: value to append to the  signal. That value may contain any value, including embedded zeros.</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxAppendStringSignal">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxAppendStringSignal">Python</a>, <a href="remoteApiFunctionsJava.htm#simxAppendStringSignal">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxAppendStringSignal">Octave</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxAuxiliaryConsoleClose" id="simxAuxiliaryConsoleClose"></a>simxAuxiliaryConsoleClose (regular API equivalent: <a href="regularApi/simAuxiliaryConsoleClose.htm">sim.auxiliaryConsoleClose</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Closes an auxiliary console window. See also <a href="#simxAuxiliaryConsoleOpen">simxAuxiliaryConsoleOpen</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode]=simxAuxiliaryConsoleClose(number clientID,number consoleHandle,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>consoleHandle</strong>: the handle of the console window, previously returned by the <a href="#simxAuxiliaryConsoleOpen">simxAuxiliaryConsoleOpen</a> command</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxAuxiliaryConsoleClose">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxAuxiliaryConsoleClose">Python</a>, <a href="remoteApiFunctionsJava.htm#simxAuxiliaryConsoleClose">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxAuxiliaryConsoleClose">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxAuxiliaryConsoleClose">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxAuxiliaryConsoleOpen" id="simxAuxiliaryConsoleOpen"></a>simxAuxiliaryConsoleOpen (regular API equivalent: <a href="regularApi/simAuxiliaryConsoleOpen.htm">sim.auxiliaryConsoleOpen</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Opens an auxiliary console window for text display. This console window is different from the application main console window. Console window handles are shared across all simulator scenes. See also <a href="#simxAuxiliaryConsolePrint">simxAuxiliaryConsolePrint</a>, <a href="#simxAuxiliaryConsoleShow">simxAuxiliaryConsoleShow</a> and <a href="#simxAuxiliaryConsoleClose">simxAuxiliaryConsoleClose</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode,number consoleHandle]=simxAuxiliaryConsoleOpen(number clientID,string title,number maxLines,number mode,array position,array size,array textColor,array backgroundColor,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>title</strong>: the title of the console window</div>
<div><strong>maxLines</strong>: the number of text lines that can be displayed and buffered</div>
<div><strong>mode</strong>: bit-coded value. Bit0 set indicates that the console window will   automatically close at simulation end, bit1 set   indicates that lines will be wrapped, bit2 set indicates that the user   can close the console window, bit3 set indicates that the console will   automatically be hidden during simulation pause, bit4 set indicates that   the console will not automatically hide when the user switches to   another scene.</div>
<div><strong>position</strong>: the initial position of the console window (x and y value). Can be [] for default values</div>
<div><strong>size</strong>: the initial size of the console window (x and y value). Can be [] for default values</div>
<div><strong>textColor</strong>: the color of the text (rgb values, 0-1). Can be [] for default values</div>
<div><strong>backgroundColor</strong>: the background color of the console window (rgb values, 0-1). Can be [] for default values</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_blocking
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
<div><strong>consoleHandle</strong>: the handle of the created console</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxAuxiliaryConsoleOpen">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxAuxiliaryConsoleOpen">Python</a>, <a href="remoteApiFunctionsJava.htm#simxAuxiliaryConsoleOpen">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxAuxiliaryConsoleOpen">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxAuxiliaryConsoleOpen">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxAuxiliaryConsolePrint" id="simxAuxiliaryConsolePrint"></a>simxAuxiliaryConsolePrint (regular API equivalent: <a href="regularApi/simAuxiliaryConsolePrint.htm">sim.auxiliaryConsolePrint</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Prints to an auxiliary console window. See also <a href="#simxAuxiliaryConsoleOpen">simxAuxiliaryConsoleOpen</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode]=simxAuxiliaryConsolePrint(number clientID,number consoleHandle,string txt,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>consoleHandle</strong>: the handle of the console window, previously returned by the <a href="#simxAuxiliaryConsoleOpen">simxAuxiliaryConsoleOpen</a> command</div>
<div><strong>txt</strong>: the text to append, or [] to clear the console window</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_blocking
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxAuxiliaryConsolePrint">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxAuxiliaryConsolePrint">Python</a>, <a href="remoteApiFunctionsJava.htm#simxAuxiliaryConsolePrint">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxAuxiliaryConsolePrint">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxAuxiliaryConsolePrint">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxAuxiliaryConsoleShow" id="simxAuxiliaryConsoleShow"></a>simxAuxiliaryConsoleShow (regular API equivalent: <a href="regularApi/simAuxiliaryConsoleShow.htm">sim.auxiliaryConsoleShow</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Shows or hides an auxiliary console window. See also <a href="#simxAuxiliaryConsoleOpen">simxAuxiliaryConsoleOpen</a> and <a href="#simxAuxiliaryConsoleClose">simxAuxiliaryConsoleClose</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode]=simxAuxiliaryConsoleShow(number clientID,number consoleHandle,boolean showState,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>consoleHandle</strong>: the handle of the console window, previously returned by the <a href="#simxAuxiliaryConsoleOpen">simxAuxiliaryConsoleOpen</a> command</div>
<div><strong>showState</strong>: indicates whether the console should be hidden (false) or shown (true)</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_blocking
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxAuxiliaryConsoleShow">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxAuxiliaryConsoleShow">Python</a>, <a href="remoteApiFunctionsJava.htm#simxAuxiliaryConsoleShow">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxAuxiliaryConsoleShow">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxAuxiliaryConsoleShow">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxBreakForceSensor" id="simxBreakForceSensor"></a>simxBreakForceSensor (regular API equivalent: <a href="regularApi/simBreakForceSensor.htm">sim.breakForceSensor</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Allows breaking a force sensor during simulation. A broken force sensor will lose its positional and orientational constraints. See also <a href="#simxReadForceSensor">simxReadForceSensor</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode]=simxBreakForceSensor(number clientID,number forceSensorHandle,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>forceSensorHandle</strong>: handle of the force sensor</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxBreakForceSensor">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxBreakForceSensor">Python</a>, <a href="remoteApiFunctionsJava.htm#simxBreakForceSensor">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxBreakForceSensor">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxBreakForceSensor">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar>
<a name="simxCallScriptFunction" id="simxCallScriptFunction"></a>simxCallScriptFunction (regular API equivalent: <a href="regularApi/simCallScriptFunction.htm">sim.callScriptFunction</a>) 
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Remotely calls a V-REP script function. When calling <a href="simulationScripts.htm">simulation scripts</a>, then simulation must be running (and threaded scripts must still be running, i.e. not ended yet). Refer to <a href="remoteApiExtension.htm">this section</a> for additional details.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode,array outInts,array outFloats,string outStrings,array outBuffer]=simxCallScriptFunction(number clientID,string scriptDescription,number scriptHandleOrType,string functionName,array inInts,array inFloats,string inStrings,array inBuffer,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>scriptDescription</strong>: the name of the scene object where the script is attached to, or an empty string if the script has no associated scene object.</div>
<div><strong>scriptHandleOrType</strong>: the handle of the script, otherwise the type of the script:</div>
<div class=tab><em>sim_scripttype_mainscript</em> (0): the <a href="mainScript.htm">main script</a> will be called.</div>
<div class=tab><em>sim_scripttype_childscript</em> (1): a <a href="childScripts.htm">child script</a> will be called.</div>
<div class=tab><em>sim_scripttype_customizationscript</em> (6): a <a href="customizationScripts.htm">customization script</a> will be called.</div>
<div><strong>functionName</strong>: the name of the Lua function to call in the specified script.</div>

<div><strong>inInts</strong>: the input integer values that are handed over to the script function. Can be [].</div>
<div><strong>inFloats</strong>: the input floating-point values that are handed over to the script function. Can be [].</div>
<div><strong>inStrings</strong>: the input strings that are handed over to the script function. Each string should be terminated with a zero char, e.g. ['Hello' 0 'world!' 0]. Can be an empty string.</div>
<div><strong>inBuffer</strong>: the input buffer that is handed over to the script function. Can be [].</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_blocking</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
<div><strong>outInts</strong>: the returned integer values.</div>
<div><strong>outFloats</strong>: the returned floating-point values.</div>
<div><strong>outStrings</strong>: the returned strings. Each string is terminated with a zero char.</div>
<div><strong>outBuffer</strong>: the returned buffer.</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxCallScriptFunction">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxCallScriptFunction">Python</a>, <a href="remoteApiFunctionsJava.htm#simxCallScriptFunction">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxCallScriptFunction">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxCallScriptFunction">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxClearFloatSignal" id="simxClearFloatSignal"></a>simxClearFloatSignal (regular API equivalent: <a href="regularApi/simClearDoubleSignal.htm">sim.clearDoubleSignal</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Clears a float signal (removes it). See also <a href="#simxSetFloatSignal">simxSetFloatSignal</a>, <a href="#simxClearIntegerSignal">simxClearIntegerSignal</a> and <a href="#simxClearStringSignal">simxClearStringSignal</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode]=simxClearFloatSignal(number clientID,string signalName,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>signalName</strong>: name of the signal or an empty string to clear all float signals</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxClearFloatSignal">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxClearFloatSignal">Python</a>, <a href="remoteApiFunctionsJava.htm#simxClearFloatSignal">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxClearFloatSignal">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxClearFloatSignal">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxClearIntegerSignal" id="simxClearIntegerSignal"></a>simxClearIntegerSignal (regular API equivalent: <a href="regularApi/simClearIntegerSignal.htm">sim.clearIntegerSignal</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Clears an integer signal (removes it). See also <a href="#simxSetIntegerSignal">simxSetIntegerSignal</a>, <a href="#simxClearFloatSignal">simxClearFloatSignal</a> and <a href="#simxClearStringSignal">simxClearStringSignal</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode]=simxClearIntegerSignal(number clientID,string signalName,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>signalName</strong>: name of the signal or an empty string to clear all integer signals</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxClearIntegerSignal">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxClearIntegerSignal">Python</a>, <a href="remoteApiFunctionsJava.htm#simxClearIntegerSignal">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxClearIntegerSignal">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxClearIntegerSignal">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxClearStringSignal" id="simxClearStringSignal"></a>simxClearStringSignal (regular API equivalent: <a href="regularApi/simClearStringSignal.htm">sim.clearStringSignal</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Clears a string signal (removes it). See also <a href="#simxSetStringSignal">simxSetStringSignal</a>, <a href="#simxClearIntegerSignal">simxClearIntegerSignal</a> and <a href="#simxClearFloatSignal">simxClearFloatSignal</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode]=simxClearStringSignal(number clientID,string signalName,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>signalName</strong>: name of the signal or an empty string to clear all string signals</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxClearStringSignal">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxClearStringSignal">Python</a>, <a href="remoteApiFunctionsJava.htm#simxClearStringSignal">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxClearStringSignal">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxClearStringSignal">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxCloseScene" id="simxCloseScene"></a>simxCloseScene (regular API equivalent: <a href="regularApi/simCloseScene.htm">simCloseScene</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Closes current scene, and switches to another open scene. If there is no other open scene, a new scene is then created. Should only be called when simulation is not running and is only executed by <a href="remoteApiServerSide.htm#continuousRemoteApiService">continuous remote API server services</a>. See also <a href="#simxLoadScene">simxLoadScene</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode]=simxCloseScene(number clientID,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_blocking
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxCloseScene">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxCloseScene">Python</a>, <a href="remoteApiFunctionsJava.htm#simxCloseScene">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxCloseScene">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxCloseScene">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxCopyPasteObjects" id="simxCopyPasteObjects"></a>simxCopyPasteObjects (regular API equivalent: <a href="regularApi/simCopyPasteObjects.htm">sim.copyPasteObjects</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Copies and pastes objects, together with all their associated calculation objects and child scripts. To copy and paste whole models, you can simply copy and paste the model base object.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode,array newObjectHandles]=simxCopyPasteObjects(number clientID,array objectHandles,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>objectHandles</strong>: an array containing the handles of the objects to copy</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_blocking
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
<div><strong>newObjectHandles</strong>: an array of handles of newly created objects. Individual objects of a new model are not returned, but only the model base.</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxCopyPasteObjects">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxCopyPasteObjects">Python</a>, <a href="remoteApiFunctionsJava.htm#simxCopyPasteObjects">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxCopyPasteObjects">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxCopyPasteObjects">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxCreateBuffer" id="simxCreateBuffer"></a>simxCreateBuffer (regular API equivalent: <a href="regularApi/simCreateBuffer.htm">simCreateBuffer</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Creates a buffer. The buffer needs to be released with <a href="#simxReleaseBuffer">simxReleaseBuffer</a> except otherwise explicitly specified. This is a remote API helper function.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[libpointer buffer]=simxCreateBuffer(number bufferSize)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>bufferSize</strong>: size of the buffer in bytes</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>buffer</strong>: a pointer to the created buffer</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxCreateBuffer">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxCreateBuffer">Python</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar>
<a name="simxCreateDummy" id="simxCreateDummy"></a>simxCreateDummy (regular API equivalent: <a href="regularApi/simCreateDummy.htm">sim.createDummy</a>)
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Creates a <a href="dummies.htm">dummy</a> in the scene.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode,number dummyHandle]=simxCreateDummy(number clientID,number size,array colors,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>size</strong>: the size of the dummy.</div>
<div><strong>colors</strong>: 4*3 bytes (0-255) for ambient_diffuse RGB, 3 reserved values (set to zero), specular RGB and emissive RGB. Can be [] for default colors.</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_blocking
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return value
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
<div><strong>dummyHandle</strong>: handle of the created dummy.</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxCreateDummy">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxCreateDummy">Python</a>, <a href="remoteApiFunctionsJava.htm#simxCreateDummy">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxCreateDummy">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxCreateDummy">Lua</a></td> 
</tr> 
</table> 
<br>















<h3 class=subsectionBar><a name="simxDisplayDialog" id="simxDisplayDialog"></a>simxDisplayDialog (regular API equivalent: <a href="regularApi/simDisplayDialog.htm">sim.displayDialog</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Displays a generic dialog box during simulation (and only during simulation!). Use in conjunction with <a href="#simxGetDialogResult">simxGetDialogResult</a>, <a href="#simxGetDialogInput">simxGetDialogInput</a> and <a href="#simxEndDialog">simxEndDialog</a>. Use <a href="customUIPlugin.htm">custom user interfaces</a> instead if a higher customization level is required.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode,number dialogHandle,number uiHandle]=simxDisplayDialog(number clientID,string titleText,string mainText,number dialogType,string initialText,array titleColors,array dialogColors,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>titleText</strong>: Title bar text</div>
<div><strong>mainText</strong>: Information text</div>
<div><strong>dialogType</strong>: a <a href="apiConstants.htm#genericDialogStyles">generic dialog style</a></div>
<div><strong>initialText</strong>: Initial text in the edit box if the dialog is of type sim_dlgstyle_input. </div>
<div><strong>titleColors</strong>: Title bar color (6 number values for RGB for background and foreground), can be [] for default colors</div>
<div><strong>dialogColors</strong>: Dialog color (6 number values for RGB for background and foreground), can be [] for default colors</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_blocking
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
<div><strong>dialogHandle</strong>: handle of the generic dialog (different from an OpenGl-based custom UI handle!! (see hereafter)). This handle should be used with the following functions: <a href="#simxGetDialogResult">simxGetDialogResult</a>, <a href="#simxGetDialogInput">simxGetDialogInput</a> and <a href="#simxEndDialog">simxEndDialog</a>.</div>
<div><strong>uiHandle</strong>: the handle of the corresponding OpenGl-based custom UI.</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxDisplayDialog">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxDisplayDialog">Python</a>, <a href="remoteApiFunctionsJava.htm#simxDisplayDialog">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxDisplayDialog">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxDisplayDialog">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxEndDialog" id="simxEndDialog"></a>simxEndDialog (regular API equivalent: <a href="regularApi/simEndDialog.htm">sim.endDialog</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Closes and releases resource from a previous call to <a href="#simxDisplayDialog">simxDisplayDialog</a>. Even if the dialog is not visible anymore, you should release resources by using this function (however at the end of a simulation, all dialog resources are automatically released).</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode]=simxEndDialog(number clientID,number dialogHandle,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>dialogHandle</strong>: handle of generic dialog (return value of <a href="#simxDisplayDialog">simxDisplayDialog</a>)</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxEndDialog">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxEndDialog">Python</a>, <a href="remoteApiFunctionsJava.htm#simxEndDialog">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxEndDialog">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxEndDialog">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxEraseFile" id="simxEraseFile"></a>simxEraseFile</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Erases a file on the server side. This function is used by several other functions internally (e.g. <a href="#simxLoadModel">simxLoadModel</a>). See also <a href="#simxTransferFile">simxTransferFile</a>. This is a remote API helper function.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode]=simxEraseFile(number clientID,string fileName_serverSide,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>fileName_serverSide</strong>: the file to erase on the server side. For now, do not specify a path (the file will be erased in the remote API plugin directory)</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxEraseFile">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxEraseFile">Python</a>, <a href="remoteApiFunctionsJava.htm#simxEraseFile">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxEraseFile">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxEraseFile">Lua</a></td> 
</tr> 
</table> 
<br>







<h3 class=subsectionBar><a name="simxFinish" id="simxFinish"></a>simxFinish</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Ends the communication thread. This should be the very last remote API function called on the client side. simxFinish should only be called after a successfull call to <a href="#simxStart">simxStart</a>. This is a remote API helper function.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>simxFinish(number clientID)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>. Can be -1 to end all running communication threads.</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div>none</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxFinish">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxFinish">Python</a>, <a href="remoteApiFunctionsJava.htm#simxFinish">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxFinish">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxFinish">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxGetAndClearStringSignal" id="simxGetAndClearStringSignal"></a>simxGetAndClearStringSignal</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>DEPRECATED. Refer to <a href="#simxReadStringStream">simxReadStringStream</a> instead.<br><br>Gets the value of a string signal, then clears it.  Useful to retrieve continuous data from the server. To pack/unpack integers/floats into/from a string, refer to <a href="#simxPackInts">simxPackInts</a>, <a href="#simxPackFloats">simxPackFloats</a>, <a href="#simxUnpackInts">simxUnpackInts</a> and <a href="#simxUnpackFloats">simxUnpackFloats</a>. See also <a href="#simxGetStringSignal">simxGetStringSignal</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode,string signalValue]=simxGetAndClearStringSignal(number clientID,string signalName,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>signalName</strong>: name of the signal</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Since this function will clear a read signal, and we cannot afford to wait for a reply (well, we could, but that would mean a blocking operation), the function operates in a special mode and should be used as in following example:</div>

<br>
<pre class=lightPurpleBoxNoMarginAndSmall>
% Initialization phase:
[err,signal]=vrep.simxGetAndClearStringSignal(clientID,'sig',
        vrep.simx_opmode_streaming);
% while we are connected:
while (vrep.simxGetConnectionId(clientID)~=-1) 
  [err,signal]=vrep.simxGetAndClearStringSignal(clientID,'sig',
        vrep.simx_opmode_buffer);
  if (err==vrep.simx_return_ok)
    % A signal was retrieved.
    % Enable streaming again (was automatically disabled with the positive event):
    [err,signal]=vrep.simxGetAndClearStringSignal(clientID,'sig',
        vrep.simx_opmode_streaming);
  end

  ..

end</pre>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
<div><strong>signalValue</strong>: the signal data (that may contain any value, including embedded zeros).</div>

</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxGetAndClearStringSignal">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxGetAndClearStringSignal">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetAndClearStringSignal">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxGetAndClearStringSignal">Octave</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxGetArrayParameter" id="simxGetArrayParameter"></a>simxGetArrayParameter (regular API equivalent: <a href="regularApi/simGetArrayParameter.htm">sim.getArrayParameter</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves 3 values from an array. See the <a href="apiConstants.htm#arrayParameters">array parameter identifiers</a>. See also <a href="#simxSetArrayParameter">simxSetArrayParameter</a>, <a href="#simxGetBooleanParameter">simxGetBooleanParameter</a>, <a href="#simxGetIntegerParameter">simxGetIntegerParameter</a>, <a href="#simxGetFloatingParameter">simxGetFloatingParameter</a> and <a href="#simxGetStringParameter">simxGetStringParameter</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode,array paramValues]=simxGetArrayParameter(number clientID,number paramIdentifier,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>paramIdentifier</strong>: an <a href="apiConstants.htm#arrayParameters">array parameter identifier</a></div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_blocking (if not called on a regular basis)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
<div><strong>paramValues</strong>: 3 values representing the array parameter</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxGetArrayParameter">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxGetArrayParameter">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetArrayParameter">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxGetArrayParameter">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxGetArrayParameter">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxGetBooleanParameter" id="simxGetBooleanParameter"></a>simxGetBooleanParameter (regular API equivalent: <a href="regularApi/simGetBoolParameter.htm">sim.getBoolParameter</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves a boolean value. See the <a href="apiConstants.htm#booleanParameters">Boolean parameter identifiers</a>. See also <a href="#simxSetBooleanParameter">simxSetBooleanParameter</a>, <a href="#simxGetIntegerParameter">simxGetIntegerParameter</a>, <a href="#simxGetFloatingParameter">simxGetFloatingParameter</a>, <a href="#simxGetArrayParameter">simxGetArrayParameter</a> and <a href="#simxGetStringParameter">simxGetStringParameter</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode,boolean paramValue]=simxGetBooleanParameter(number clientID,number paramIdentifier,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>paramIdentifier</strong>: a <a href="apiConstants.htm#booleanParameters">Boolean parameter identifier</a></div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_blocking (if not called on a regular basis)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
<div><strong>paramValue</strong>: the parameter value</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxGetBooleanParameter">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxGetBooleanParameter">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetBooleanParameter">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxGetBooleanParameter">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxGetBooleanParameter">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxGetCollectionHandle" id="simxGetCollectionHandle"></a>simxGetCollectionHandle (regular API equivalent: <a href="regularApi/simGetCollectionHandle.htm">sim.getCollectionHandle</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves a collection handle based on its name. If the client application is launched from a <a href="childScripts.htm">child script</a>, then you could also let the child script figure out what handle correspond to what collection, and send the handles as additional arguments to the client application during its launch. See also <a href="#simxGetObjectGroupData">simxGetObjectGroupData</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode,number handle]=simxGetCollectionHandle(number clientID,string collectionName,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>collectionName</strong>: name of the collection. If possibe, don't rely on the <a href="accessingGeneralObjects.htm">automatic name adjustment mechanism</a>, and always specify the full collection name, including the #: if the collection is 'myCollection', specify 'myCollection#', if the collection is 'myCollection#0', specify 'myCollection#0', etc.</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_blocking
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
<div><strong>handle</strong>: the handle</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxGetCollectionHandle">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxGetCollectionHandle">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetCollectionHandle">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxGetCollectionHandle">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxGetCollectionHandle">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxGetCollisionHandle" id="simxGetCollisionHandle"></a>simxGetCollisionHandle (regular API equivalent: <a href="regularApi/simGetCollisionHandle.htm">sim.getCollisionHandle</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves a collision  object handle based on its name. If the client application is launched from a <a href="childScripts.htm">child script</a>, then you could also let the child script figure out what handle correspond to what collision object, and send the handles as additional arguments to the client application during its launch. See also <a href="#simxGetObjectGroupData">simxGetObjectGroupData</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode,number handle]=simxGetCollisionHandle(number clientID,string collisionObjectName,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>collisionObjectName</strong>: name of the collision object. If possibe, don't rely on the <a href="accessingGeneralObjects.htm">automatic name adjustment mechanism</a>, and always specify the full collision object name, including the #: if the collision object is 'myCollision', specify 'myCollision#', if the collision object is 'myCollision#0', specify 'myCollision#0', etc.</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_blocking
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
<div><strong>handle</strong>: the handle</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxGetCollisionHandle">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxGetCollisionHandle">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetCollisionHandle">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxGetCollisionHandle">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxGetCollisionHandle">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxGetConnectionId" id="simxGetConnectionId"></a>simxGetConnectionId</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Returns the ID of the current connection. Use this function to track the connection state to the server. See also <a href="#simxStart">simxStart</a>. This is a remote API helper function.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number connectionId]=simxGetConnectionId(number clientID)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>connectionId</strong>: a connection ID, or -1 if the client is not connected to the server. Different connection IDs indicate temporary disconections in-between.</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxGetConnectionId">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxGetConnectionId">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetConnectionId">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxGetConnectionId">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxGetConnectionId">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxGetDialogInput" id="simxGetDialogInput"></a>simxGetDialogInput (regular API equivalent: <a href="regularApi/simGetDialogInput.htm">sim.getDialogInput</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Queries the text the user entered into a  generic dialog box of style sim_dlgstyle_input. To be used after <a href="#simxDisplayDialog">simxDisplayDialog</a> was called and after <a href="#simxGetDialogResult">simxGetDialogResult</a> returned sim_dlgret_ok.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode,string inputText]=simxGetDialogInput(number clientID,number dialogHandle,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>dialogHandle</strong>: handle of generic dialog (return value of <a href="#simxDisplayDialog">simxDisplayDialog</a>)</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_blocking 
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
<div><strong>inputText</strong>: the string the user entered. </div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxGetDialogInput">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxGetDialogInput">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetDialogInput">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxGetDialogInput">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxGetDialogInput">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxGetDialogResult" id="simxGetDialogResult"></a>simxGetDialogResult (regular API equivalent: <a href="regularApi/simGetDialogResult.htm">sim.getDialogResult</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Queries the result of a dialog box. To be used after <a href="#simxDisplayDialog">simxDisplayDialog</a> was called.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode,number result]=simxGetDialogResult(number clientID,number dialogHandle,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>dialogHandle</strong>: handle of generic dialog (return value of <a href="#simxDisplayDialog">simxDisplayDialog</a>)</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot 
</div>
</td> 
</tr> 

<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
<div><strong>result</strong>: the <a href="apiConstants.htm#genericDialogReturnValues">result value</a>. </div>
<br>
<div>Note. If the return value is sim_dlgret_still_open, the dialog was not closed and no button was pressed. Otherwise, you should free resources with <a href="#simxEndDialog">simxEndDialog</a> (the dialog might not be visible anymore, but is still present)</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxGetDialogResult">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxGetDialogResult">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetDialogResult">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxGetDialogResult">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxGetDialogResult">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxGetDistanceHandle" id="simxGetDistanceHandle"></a>simxGetDistanceHandle (regular API equivalent: <a href="regularApi/simGetDistanceHandle.htm">sim.getDistanceHandle</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves a distance  object handle based on its name. If the client application is launched from a <a href="childScripts.htm">child script</a>, then you could also let the child script figure out what handle correspond to what distance object, and send the handles as additional arguments to the client application during its launch. See also <a href="#simxGetObjectGroupData">simxGetObjectGroupData</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode,number handle]=simxGetDistanceHandle(number clientID,string distanceObjectName,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>distanceObjectName</strong>: name of the distance object. If possibe, don't rely on the <a href="accessingGeneralObjects.htm">automatic name adjustment mechanism</a>, and always specify the full distance object name, including the #: if the distance object is 'myDistance', specify 'myDistance#', if the distance object is 'myDistance#0', specify 'myDistance#0', etc.</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_blocking
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
<div><strong>handle</strong>: the handle</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxGetDistanceHandle">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxGetDistanceHandle">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetDistanceHandle">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxGetDistanceHandle">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxGetDistanceHandle">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxGetFloatingParameter" id="simxGetFloatingParameter"></a>simxGetFloatingParameter (regular API equivalent: <a href="regularApi/simGetFloatParameter.htm">sim.getFloatParameter</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves a floating point value. See the <a href="apiConstants.htm#floatingParameters">floating-point parameter identifiers</a>. See also <a href="#simxSetFloatingParameter">simxSetFloatingParameter</a>, <a href="#simxGetBooleanParameter">simxGetBooleanParameter</a>, <a href="#simxGetIntegerParameter">simxGetIntegerParameter</a>, <a href="#simxGetArrayParameter">simxGetArrayParameter</a> and <a href="#simxGetStringParameter">simxGetStringParameter</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode,number paramValue]=simxGetFloatingParameter(number clientID,number paramIdentifier,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>paramIdentifier</strong>: a <a href="apiConstants.htm#floatingParameters">floating parameter identifier</a></div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_blocking (if not called on a regular basis)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
<div><strong>paramValue</strong>: the parameter value</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxGetFloatingParameter">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxGetFloatingParameter">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetFloatingParameter">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxGetFloatingParameter">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxGetFloatingParameter">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxGetFloatSignal" id="simxGetFloatSignal"></a>simxGetFloatSignal (regular API equivalent: <a href="regularApi/simGetDoubleSignal.htm">sim.getDoubleSignal</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Gets the value of a float signal. Signals are cleared at simulation start. See also <a href="#simxSetFloatSignal">simxSetFloatSignal</a>, <a href="#simxClearFloatSignal">simxClearFloatSignal</a>, <a href="#simxGetIntegerSignal">simxGetIntegerSignal</a> and <a href="#simxGetStringSignal">simxGetStringSignal</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode,number signalValue]=simxGetFloatSignal(number clientID,string signalName,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>signalName</strong>: name of the signal</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming (the first call) and simx_opmode_buffer (the following calls)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
<div><strong>signalValue</strong>: the value of the signal</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxGetFloatSignal">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxGetFloatSignal">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetFloatSignal">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxGetFloatSignal">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxGetFloatSignal">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxGetInMessageInfo" id="simxGetInMessageInfo"></a>simxGetInMessageInfo</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr><div>Retrieves information about the last received message from the server. This is a remote API helper function. See also <a href="#simxGetOutMessageInfo">simxGetOutMessageInfo</a>.</div>
<br>
<div>If the client didn't receive any command reply from the server for a while, the data retrieved with this function won't be up-to-date. In order to avoid this, you should start at least one streaming command, which will guarantee regular message income.</div>
</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number result,number info]=simxGetInMessageInfo(number clientID,number infoType)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>infoType</strong>: an <a href="remoteApiConstants.htm#inboxMessageInfoType">inbox message info type</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>result</strong>: -1 in case of an error</div>
<div><strong>info</strong>: the requested information</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxGetInMessageInfo">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxGetInMessageInfo">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetInMessageInfo">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxGetInMessageInfo">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxGetInMessageInfo">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxGetIntegerParameter" id="simxGetIntegerParameter"></a>simxGetIntegerParameter (regular API equivalent: <a href="regularApi/simGetInt32Parameter.htm">sim.getInt32Parameter</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves an integer value. See the <a href="apiConstants.htm#integerParameters">integer parameter identifiers</a>. See also <a href="#simxSetIntegerParameter">simxSetIntegerParameter</a>, <a href="#simxGetBooleanParameter">simxGetBooleanParameter</a>, <a href="#simxGetFloatingParameter">simxGetFloatingParameter</a>, <a href="#simxGetArrayParameter">simxGetArrayParameter</a> and <a href="#simxGetStringParameter">simxGetStringParameter</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode,number paramValue]=simxGetIntegerParameter(number clientID,number paramIdentifier,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>paramIdentifier</strong>: an <a href="apiConstants.htm#integerParameters">integer parameter identifier</a></div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_blocking (if not called on a regular basis)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
<div><strong>paramValue</strong>: the parameter value</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxGetIntegerParameter">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxGetIntegerParameter">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetIntegerParameter">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxGetIntegerParameter">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxGetIntegerParameter">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxGetIntegerSignal" id="simxGetIntegerSignal"></a>simxGetIntegerSignal (regular API equivalent: <a href="regularApi/simGetIntegerSignal.htm">sim.getIntegerSignal</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Gets the value of an integer signal. Signals are cleared at simulation start. See also <a href="#simxSetIntegerSignal">simxSetIntegerSignal</a>, <a href="#simxClearIntegerSignal">simxClearIntegerSignal</a>, <a href="#simxGetFloatSignal">simxGetFloatSignal</a> and <a href="#simxGetStringSignal">simxGetStringSignal</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode,number signalValue]=simxGetIntegerSignal(number clientID,string signalName,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>signalName</strong>: name of the signal</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming (the first call) and simx_opmode_buffer (the following calls)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
<div><strong>signalValue</strong>: the value of the signal</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxGetIntegerSignal">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxGetIntegerSignal">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetIntegerSignal">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxGetIntegerSignal">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxGetIntegerSignal">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxGetJointForce" id="simxGetJointForce"></a>simxGetJointForce (regular API equivalent: <a href="regularApi/simGetJointForce.htm">sim.getJointForce</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves the force or torque applied to a joint  along/about its active axis. This function retrieves meaningful information only if the joint is prismatic or revolute, and is dynamically enabled. With the <a href="dynamicsModule.htm#bullet">Bullet</a> engine, this function returns the force or torque applied to the joint motor  (torques from joint limits are not taken into account). With the <a href="dynamicsModule.htm#ode">ODE</a> or <a href="dynamicsModule.htm#vortex">Vortex</a> engine, this function returns the total force or torque applied to a joint  along/about its z-axis. See also <a href="#simxSetJointForce">simxSetJointForce</a>,  <a href="#simxReadForceSensor">simxReadForceSensor</a> and <a href="#simxGetObjectGroupData">simxGetObjectGroupData</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode,number force]=simxGetJointForce(number clientID,number jointHandle,number operationMode)<br></td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>jointHandle</strong>: handle of the joint</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming (the first call) and simx_opmode_buffer (the following calls)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
<div><strong>force</strong>: the force or the torque applied to the joint  along/about its z-axis
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxGetJointForce">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxGetJointForce">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetJointForce">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxGetJointForce">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxGetJointForce">Lua</a></td> 
</tr> 
</table> 
<br>
















<h3 class=subsectionBar><a name="simxGetJointMatrix" id="simxGetJointMatrix"></a>simxGetJointMatrix (regular API equivalent: <a href="regularApi/simGetJointMatrix.htm">sim.getJointMatrix</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves the intrinsic transformation matrix of a joint (the transformation caused by the joint movement). See also <a href="#simxSetSphericalJointMatrix">simxSetSphericalJointMatrix</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode,array matrix]=simxGetJointMatrix(number clientID,number jointHandle,number operationMode)<br></td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>jointHandle</strong>: handle of the joint</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming (the first call) and simx_opmode_buffer (the following calls)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
<div><strong>matrix</strong>: 12 number values. See the regular API equivalent function for details
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxGetJointMatrix">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxGetJointMatrix">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetJointMatrix">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxGetJointMatrix">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxGetJointMatrix">Lua</a></td> 
</tr> 
</table> 
<br>










<h3 class=subsectionBar><a name="simxGetJointPosition" id="simxGetJointPosition"></a>simxGetJointPosition (regular API equivalent: <a href="regularApi/simGetJointPosition.htm">sim.getJointPosition</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves the intrinsic position of a joint. This function cannot be used with spherical joints (use <a href="#simxGetJointMatrix">simxGetJointMatrix</a> instead). See also <a href="#simxSetJointPosition">simxSetJointPosition</a> and <a href="#simxGetObjectGroupData">simxGetObjectGroupData</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode,number position]=simxGetJointPosition(number clientID,number jointHandle,number operationMode)<br></td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>jointHandle</strong>: handle of the joint</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming (the first call) and simx_opmode_buffer (the following calls)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
<div><strong>position</strong>: intrinsic position of the joint. This is a one-dimensional value: if the joint is revolute, the rotation angle is returned, if the joint is prismatic, the translation amount is returned, etc.
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxGetJointPosition">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxGetJointPosition">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetJointPosition">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxGetJointPosition">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxGetJointPosition">Lua</a></td> 
</tr> 
</table> 
<br>












<h3 class=subsectionBar><a name="simxGetLastCmdTime" id="simxGetLastCmdTime"></a>simxGetLastCmdTime</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr><div>Retrieves the simulation time of the last fetched command (i.e. when the last fetched command was processed on the server side). The function can be used to verify how <em>fresh</em> a command reply is, or whether a command reply was recently updated. For example:</div>
<br>

<pre class=lightPurpleBoxNoMarginAndSmall>
[err,res,img]=vrep.simxGetVisionSensorImage(clientID,handle,0,vrep.simx_opmode_buffer);
if (err==vrep.simx_return_ok)
    imageAcquisitionTime=vrep.simxGetLastCmdTime(clientID);
end
</pre>

<br>
<div>If some streaming commands are running, simxGetLastCmdTime will always retrieve the current simulation time, otherwise, only the simulation time of the last command that retrieved data from V-REP. This is a remote API helper function.</div></td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number cmdTime]=simxGetLastCmdTime(number clientID)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>cmdTime</strong>: the simulation time in milliseconds when the command reply was generated, or 0 if simulation was not running.</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxGetLastCmdTime">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxGetLastCmdTime">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetLastCmdTime">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxGetLastCmdTime">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxGetLastCmdTime">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxGetLastErrors" id="simxGetLastErrors"></a>simxGetLastErrors (regular API equivalent: <a href="regularApi/simGetLastError.htm">sim.getLastError</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves the last 50 errors that occured on the server side, and clears the error buffer there. Only errors that occured because of this client will be reported.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode,cell errorStrings]=simxGetLastErrors(number clientID,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming (the first call) and simx_opmode_buffer (the following calls) when not debugging. For debugging purposes, use simx_opmode_blocking.
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
<div><strong>errorStrings</strong>: all error strings</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxGetLastErrors">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxGetLastErrors">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetLastErrors">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxGetLastErrors">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxGetLastErrors">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxGetModelProperty" id="simxGetModelProperty"></a>simxGetModelProperty (regular API equivalent: <a href="regularApi/simGetModelProperty.htm">sim.getModelProperty</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves the properties of a model. See also <a href="#simxSetModelProperty">simxSetModelProperty</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode,number prop]=simxGetModelProperty(number clientID,number objectHandle,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>objectHandle</strong>: handle of the object</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming (the first call) and simx_opmode_buffer (the following calls), or simx_opmode_blocking (depending on the intended usage)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
<div><strong>prop</strong>: the <a href="apiConstants.htm#modelProperties">model property value</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxGetModelProperty">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxGetModelProperty">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetModelProperty">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxGetModelProperty">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxGetModelProperty">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxGetObjectChild" id="simxGetObjectChild"></a>simxGetObjectChild (regular API equivalent: <a href="regularApi/simGetObjectChild.htm">sim.getObjectChild</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves the handle of an object's child object. See also <a href="#simxGetObjectParent">simxGetObjectParent</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode,number childObjectHandle]=simxGetObjectChild(number clientID,number parentObjectHandle,number childIndex,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>parentObjectHandle</strong>: handle of the object</div>
<div><strong>childIndex</strong>: zero-based index of the child's position. To retrieve all children of an object, call the function by increasing the index until the child handle is  -1</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_blocking
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
<div><strong>childObjectHandle</strong>: the handle of the child object. If the value is -1, there is no child at the given index</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxGetObjectChild">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxGetObjectChild">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetObjectChild">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxGetObjectChild">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxGetObjectChild">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxGetObjectFloatParameter" id="simxGetObjectFloatParameter"></a>simxGetObjectFloatParameter (regular API equivalent: <a href="regularApi/simGetObjectFloatParameter.htm">sim.getObjectFloatParameter</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves a floating-point parameter of a object. See also <a href="#simxSetObjectFloatParameter">simxSetObjectFloatParameter</a> and <a href="#simxGetObjectIntParameter">simxGetObjectIntParameter</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode,number parameterValue]=simxGetObjectFloatParameter(number clientID,number objectHandle,number parameterID,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>objectHandle</strong>: handle of the object</div>
<div><strong>parameterID</strong>: identifier of the parameter to retrieve. See the <a href="objectParameterIDs.htm">list of all possible object parameter identifiers</a></div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming (the first call) and simx_opmode_buffer (the following calls), or simx_opmode_blocking (depending on the intended usage)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
<div><strong>parameterValue</strong>: the value of the parameter</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxGetObjectFloatParameter">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxGetObjectFloatParameter">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetObjectFloatParameter">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxGetObjectFloatParameter">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxGetObjectFloatParameter">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxGetObjectGroupData" id="simxGetObjectGroupData"></a>simxGetObjectGroupData</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Simultaneously retrieves data of various objects in a V-REP scene.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode,array handles,array intData,array floatData,array stringData]=simxGetObjectGroupData(number clientID,number objectType,number dataType,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>objectType</strong>: a <a href="apiConstants.htm#sceneObjectTypes">scene object type</a>, sim_appobj_object_type for all <a href="objects.htm">scene objects</a>, or a <a href="#simxGetCollectionHandle">collection</a> handle.</div>
<div><strong>dataType</strong>: the type of data that is desired: </div>
<div class=tab>0: retrieves the object names (in stringData.)</div>
<div class=tab>1: retrieves the <a href="apiConstants.htm#sceneObjectTypes">object types</a> (in intData)</div>
<div class=tab>2: retrieves the parent object handles (in intData)</div>
<div class=tab>3: retrieves the absolute object positions (in floatData. There are 3 values for each object (x,y,z))</div>
<div class=tab>4: retrieves the local object positions (in floatData. There are 3 values for each object (x,y,z))</div>
<div class=tab>5: retrieves the absolute object orientations as <a href="eulerAngles.htm">Euler angles</a> (in floatData. There are 3 values for each object (alpha,beta,gamma))</div>
<div class=tab>6: retrieves the local object orientations as <a href="eulerAngles.htm">Euler angles</a> (in floatData. There are 3 values for each object (alpha,beta,gamma))</div>
<div class=tab>7: retrieves the absolute object orientations as quaternions (in floatData. There are 4 values for each object (qx,qy,qz,qw))</div>
<div class=tab>8: retrieves the local object orientations as quaternions (in floatData. There are 4 values for each object (qx,qy,qz,qw))</div>
<div class=tab>9: retrieves the absolute object positions and orientations (as <a href="eulerAngles.htm">Euler angles</a>) (in floatData. There are 6 values for each object (x,y,z,alpha,beta,gamma))</div>
<div class=tab>10: retrieves the local object positions and orientations (as <a href="eulerAngles.htm">Euler angles</a>) (in floatData. There are 6 values for each object (x,y,z,alpha,beta,gamma))</div>
<div class=tab>11: retrieves the absolute object positions and orientations (as quaternions) (in floatData. There are 7 values for each object (x,y,z,qx,qy,qz,qw))</div>
<div class=tab>12: retrieves the local object positions and orientations (as quaternions) (in floatData. There are 7 values for each object (x,y,z,qx,qy,qz,qw))</div>
<div class=tab>13: retrieves proximity sensor data (in intData (2 values): detection state, detected object handle. In floatData (6 values): detected point (x,y,z) and detected surface normal (nx,ny,nz))</div>
<div class=tab>14: retrieves force sensor data (in intData (1 values): force sensor state. In floatData (6 values): force (fx,fy,fz) and torque (tx,ty,tz))</div>
<div class=tab>15: retrieves joint state data (in floatData (2 values): position, force/torque)</div>
<div class=tab>16: retrieves joint properties data (in intData (2 values): joint type, joint mode (bit16=hybid operation). In floatData (2 values): joint limit low, joint range (-1.0 if joint is cyclic))</div>
<div class=tab>17: retrieves the object linear velocity (in floatData. There are 3 values for each object (vx,vy,vz))</div>
<div class=tab>18: retrieves the object angular velocity as <a href="eulerAngles.htm">Euler angles</a> per seconds (in floatData. There are 3 values for each object (dAlpha,dBeta,dGamma))</div>
<div class=tab>19: retrieves the object linear and angular velocity (in floatData. There are 6 values for each object (vx,vy,vz,dAlpha,dBeta,dGamma))</div>

<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_blocking or simx_opmode_streaming.</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
<div><strong>handles</strong>: the object handles.</div>
<div><strong>intData</strong>: the integer values.</div>
<div><strong>floatData</strong>: the float values.</div>
<div><strong>stringData</strong>: the string values.</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxGetObjectGroupData">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxGetObjectGroupData">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetObjectGroupData">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxGetObjectGroupData">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxGetObjectGroupData">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxGetObjectHandle" id="simxGetObjectHandle"></a>simxGetObjectHandle (regular API equivalent: <a href="regularApi/simGetObjectHandle.htm">sim.getObjectHandle</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves an object handle based on its name. If the client application is launched from a <a href="childScripts.htm">child script</a>, then you could also let the child script figure out what handle correspond to what objects, and send the handles as additional arguments to the client application during its launch. See also <a href="#simxGetObjectGroupData">simxGetObjectGroupData</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode,number handle]=simxGetObjectHandle(number clientID,string objectName,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>objectName</strong>: name of the object. If possibe, don't rely on the <a href="accessingGeneralObjects.htm">automatic name adjustment mechanism</a>, and always specify the full object name, including the #: if the object is 'myJoint', specify 'myJoint#', if the object is 'myJoint#0', specify 'myJoint#0', etc.</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_blocking
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
<div><strong>handle</strong>: the handle</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxGetObjectHandle">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxGetObjectHandle">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetObjectHandle">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxGetObjectHandle">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxGetObjectHandle">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxGetObjectIntParameter" id="simxGetObjectIntParameter"></a>simxGetObjectIntParameter (regular API equivalent: <a href="regularApi/simGetObjectInt32Parameter.htm">sim.getObjectInt32Parameter</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves an integer parameter of a object. See also <a href="#simxSetObjectIntParameter">simxSetObjectIntParameter</a> and <a href="#simxGetObjectFloatParameter">simxGetObjectFloatParameter</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode,number parameterValue]=simxGetObjectIntParameter(number clientID,number objectHandle,number parameterID,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>objectHandle</strong>: handle of the object</div>
<div><strong>parameterID</strong>: identifier of the parameter to retrieve. See the <a href="objectParameterIDs.htm">list of all possible object parameter identifiers</a></div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming (the first call) and simx_opmode_buffer (the following calls), or simx_opmode_blocking (depending on the intended usage)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
<div><strong>parameterValue</strong>: the value of the parameter</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxGetObjectIntParameter">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxGetObjectIntParameter">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetObjectIntParameter">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxGetObjectIntParameter">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxGetObjectIntParameter">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxGetObjectOrientation" id="simxGetObjectOrientation"></a>simxGetObjectOrientation (regular API equivalent: <a href="regularApi/simGetObjectOrientation.htm">sim.getObjectOrientation</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves the orientation (<a href="eulerAngles.htm">Euler angles</a>) of an object. See also <a href="#simxSetObjectOrientation">simxSetObjectOrientation, <a href="#simxGetObjectQuaternion">simxGetObjectQuaternion</a>, <a href="#simxGetObjectPosition">simxGetObjectPosition</a> and <a href="#simxGetObjectGroupData">simxGetObjectGroupData</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode,array eulerAngles]=simxGetObjectOrientation(number clientID,number objectHandle,number relativeToObjectHandle,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>objectHandle</strong>: handle of the object</div>
<div><strong>relativeToObjectHandle</strong>: indicates relative to which reference frame we want the orientation.   Specify -1 to retrieve the absolute orientation, sim_handle_parent to   retrieve the orientation relative to the object's parent, or an object   handle relative to whose reference frame you want the orientation</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming (the first call) and simx_opmode_buffer (the following calls)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
<div><strong>eulerAngles</strong>: 3 values representing the Euler angles (alpha, beta and gamma)</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxGetObjectOrientation">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxGetObjectOrientation">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetObjectOrientation">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxGetObjectOrientation">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxGetObjectOrientation">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxGetObjectParent" id="simxGetObjectParent"></a>simxGetObjectParent (regular API equivalent: <a href="regularApi/simGetObjectParent.htm">sim.getObjectParent</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves the handle of an object's parent object. See also <a href="#simxGetObjectChild">simxGetObjectChild</a> and <a href="#simxGetObjectGroupData">simxGetObjectGroupData</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode,number parentObjectHandle]=simxGetObjectParent(number clientID,number objectHandle,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>objectHandle</strong>: handle of the object</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_blocking
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
<div><strong>parentObjectHandle</strong>: the handle of the parent object. If the value is -1, the object has no parent</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxGetObjectParent">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxGetObjectParent">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetObjectParent">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxGetObjectParent">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxGetObjectParent">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxGetObjectPosition" id="simxGetObjectPosition"></a>simxGetObjectPosition (regular API equivalent: <a href="regularApi/simGetObjectPosition.htm">sim.getObjectPosition</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves the position  of an object. See also <a href="#simxSetObjectPosition">simxSetObjectPosition,</a> <a href="#simxGetObjectOrientation">simxGetObjectOrientation</a>, <a href="#simxGetObjectQuaternion">simxGetObjectQuaternion</a> and <a href="#simxGetObjectGroupData">simxGetObjectGroupData</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode,array position]=simxGetObjectPosition(number clientID,number objectHandle,number relativeToObjectHandle,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>objectHandle</strong>: handle of the object</div>
<div><strong>relativeToObjectHandle</strong>: indicates relative to which reference frame we want the position.   Specify -1 to retrieve the absolute position, sim_handle_parent to   retrieve the position relative to the object's parent, or an object   handle relative to whose reference frame you want the position</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming (the first call) and simx_opmode_buffer (the following calls)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
<div><strong>position</strong>: 3 values representing the position</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxGetObjectPosition">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxGetObjectPosition">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetObjectPosition">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxGetObjectPosition">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxGetObjectPosition">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxGetObjectQuaternion" id="simxGetObjectQuaternion"></a>simxGetObjectQuaternion (regular API equivalent: <a href="regularApi/simGetObjectQuaternion.htm">sim.getObjectQuaternion</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves the quaternion  of an object. See also <a href="#simxSetObjectQuaternion">simxSetObjectQuaternion.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode,array quat]=simxGetObjectQuaternion(number clientID,number objectHandle,number relativeToObjectHandle,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>objectHandle</strong>: handle of the object</div>
<div><strong>relativeToObjectHandle</strong>: indicates relative to which reference frame we want the quaternion.   Specify -1 to retrieve the absolute quaternion, sim_handle_parent to   retrieve the quaternion relative to the object's parent, or an object   handle relative to whose reference frame you want the quaternion</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming (the first call) and simx_opmode_buffer (the following calls)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
<div><strong>quat</strong>: 4 values representing the quaternion (x, y, z, w)</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxGetObjectQuaternion">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxGetObjectQuaternion">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetObjectQuaternion">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxGetObjectQuaternion">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxGetObjectQuaternion">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxGetObjects" id="simxGetObjects"></a>simxGetObjects (regular API equivalent: <a href="regularApi/simGetObjects.htm">sim.getObjects</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves object handles of a given type, or of all types (i.e. all object handles). See also <a href="#simxGetObjectGroupData">simxGetObjectGroupData</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode,array objectHandles]=simxGetObjects(number clientID,number objectType,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>objectType</strong>: <a href="apiConstants.htm#sceneObjectTypes">object type</a> (sim_object_shape_type, sim_object_joint_type, etc., or sim_handle_all for any type of object</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_blocking
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
<div><strong>objectHandles</strong>: an array containing object handles.</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxGetObjects">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxGetObjects">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetObjects">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxGetObjects">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxGetObjects">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxGetObjectSelection" id="simxGetObjectSelection"></a>simxGetObjectSelection (regular API equivalent: <a href="regularApi/simGetObjectSelection.htm">sim.getObjectSelection</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves all selected object's handles. See also <a href="#simxSetObjectSelection">simxSetObjectSelection</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode,array objectHandles]=simxGetObjectSelection(number clientID,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming (the first call) and simx_opmode_buffer (the following calls), or simx_opmode_blocking depending on the intent.
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
<div><strong>objectHandles</strong>: an array containing the handles of all selected objects</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxGetObjectSelection">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxGetObjectSelection">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetObjectSelection">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxGetObjectSelection">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxGetObjectSelection">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxGetObjectVelocity" id="simxGetObjectVelocity"></a>simxGetObjectVelocity (regular API equivalent: <a href="regularApi/simGetObjectVelocity.htm">sim.getObjectVelocity</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves the linear and angular velocity of an object. See also <a href="#simxGetObjectPosition">simxGetObjectPosition,</a> <a href="#simxGetObjectOrientation">simxGetObjectOrientation</a> and <a href="#simxGetObjectGroupData">simxGetObjectGroupData</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode,array linearVelocity,array angularVelocity]=simxGetObjectVelocity(number clientID,number objectHandle,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>objectHandle</strong>: handle of the object</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming (the first call) and simx_opmode_buffer (the following calls)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
<div><strong>linearVelocity</strong>: 3 values representing the linear velocity (vx, vy, vz).</div>
<div><strong>angularVelocity</strong>: 3 values representing the angular velocity (dAlpha, dBeta, dGamma).</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxGetObjectVelocity">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxGetObjectVelocity">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetObjectVelocity">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxGetObjectVelocity">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxGetObjectVelocity">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxGetOutMessageInfo" id="simxGetOutMessageInfo"></a>simxGetOutMessageInfo</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr><div>Retrieves information about the next message to send to the server. This is a remote API helper function. See also <a href="#simxGetInMessageInfo">simxGetInMessageInfo</a>.</div></td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number result,number info]=simxGetOutMessageInfo(number clientID,number infoType)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>infoType</strong>: an <a href="remoteApiConstants.htm#outboxMessageInfoType">outbox message info type</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>result</strong>: -1 in case of an error</div>
<div><strong>info</strong>: the requested information
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxGetOutMessageInfo">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxGetOutMessageInfo">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetOutMessageInfo">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxGetOutMessageInfo">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxGetOutMessageInfo">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxGetPingTime" id="simxGetPingTime"></a>simxGetPingTime</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves the time needed for a command to be sent to the server, executed, and sent back. That time depends on various factors like the client settings, the network load, whether a simulation is running, whether the simulation is real-time, the simulation time step, etc. The function is blocking. This is a remote API helper function.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode,number pingTime]=simxGetPingTime(number clientID)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
<div><strong>pingTime</strong>: the ping time in milliseconds.</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxGetPingTime">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxGetPingTime">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetPingTime">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxGetPingTime">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxGetPingTime">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxGetStringParameter" id="simxGetStringParameter"></a>simxGetStringParameter (regular API equivalent: <a href="regularApi/simGetStringParameter.htm">sim.getStringParameter</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves a string value. See the <a href="apiConstants.htm#stringParameters">string parameter identifiers</a>. See also <a href="#simxGetBooleanParameter">simxGetBooleanParameter</a>, <a href="#simxGetIntegerParameter">simxGetIntegerParameter</a>, <a href="#simxGetArrayParameter">simxGetArrayParameter</a> and <a href="#simxGetFloatingParameter">simxGetFloatingParameter</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode,string paramValue]=simxGetStringParameter(number clientID,number paramIdentifier,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>paramIdentifier</strong>: a <a href="apiConstants.htm#stringParameters">string parameter identifier</a></div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_blocking (if not called on a regular basis)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
<div><strong>paramValue</strong>: the parameter value (a string)</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxGetStringParameter">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxGetStringParameter">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetStringParameter">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxGetStringParameter">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxGetStringParameter">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxGetStringSignal" id="simxGetStringSignal"></a>simxGetStringSignal (regular API equivalent: <a href="regularApi/simGetStringSignal.htm">sim.getStringSignal</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Gets the value of a string signal. Signals are cleared at simulation start. To pack/unpack integers/floats into/from a string, refer to <a href="#simxPackInts">simxPackInts</a>, <a href="#simxPackFloats">simxPackFloats</a>, <a href="#simxUnpackInts">simxUnpackInts</a> and <a href="#simxUnpackFloats">simxUnpackFloats</a>. See also <a href="#simxSetStringSignal">simxSetStringSignal</a>, <a href="#simxReadStringStream">simxReadStringStream</a>, <a href="#simxClearStringSignal">simxClearStringSignal</a>, <a href="#simxGetIntegerSignal">simxGetIntegerSignal</a> and <a href="#simxGetFloatSignal">simxGetFloatSignal</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode,string signalValue]=simxGetStringSignal(number clientID,string signalName,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>signalName</strong>: name of the signal</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming (the first call) and simx_opmode_buffer (the following calls)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
<div><strong>signalValue</strong>: the signal data (that may contain any value, including embedded zeros).</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxGetStringSignal">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxGetStringSignal">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetStringSignal">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxGetStringSignal">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxGetStringSignal">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxGetUIButtonProperty" id="simxGetUIButtonProperty"></a>simxGetUIButtonProperty (DEPRECATED)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>DEPRECATED. Use the <a href="customUIPlugin.htm">Qt-based custom user interfaces</a>, via <a href="#simxCallScriptFunction">simxCallScriptFunction</a> instead.</td>
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxGetUIEventButton" id="simxGetUIEventButton"></a>simxGetUIEventButton (DEPRECATED)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>DEPRECATED. Use the <a href="customUIPlugin.htm">Qt-based custom user interfaces</a>, via <a href="#simxCallScriptFunction">simxCallScriptFunction</a> instead.</td>
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxGetUIHandle" id="simxGetUIHandle"></a>simxGetUIHandle (DEPRECATED)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>DEPRECATED. Use the <a href="customUIPlugin.htm">Qt-based custom user interfaces</a>, via <a href="#simxCallScriptFunction">simxCallScriptFunction</a> instead.</td>
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxGetUISlider" id="simxGetUISlider"></a>simxGetUISlider (DEPRECATED)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>DEPRECATED. Use the <a href="customUIPlugin.htm">Qt-based custom user interfaces</a>, via <a href="#simxCallScriptFunction">simxCallScriptFunction</a> instead.</td>
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxGetVisionSensorDepthBuffer" id="simxGetVisionSensorDepthBuffer"></a>simxGetVisionSensorDepthBuffer (regular API equivalent: <a href="regularApi/simGetVisionSensorDepthBuffer.htm">sim.getVisionSensorDepthBuffer</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves the depth buffer of a vision sensor as a pointer. The returned data doesn't make sense if <a href="regularApi/simHandleVisionSensor.htm">sim.handleVisionSensor</a> wasn't called previously (sim.handleVisionSensor is called by default in the main script if the vision sensor is not tagged as explicit handling). Use the <a href="#simxGetLastCmdTime">simxGetLastCmdTime</a> function to verify the <em>freshness</em> of the retrieved data. See also <a href="#simxGetVisionSensorDepthBuffer2">simxGetVisionSensorDepthBuffer2</a> and <a href="#simxGetVisionSensorImage">simxGetVisionSensorImage</a>.</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode,array resolution,libpointer buffer]=simxGetVisionSensorDepthBuffer(number clientID,number sensorHandle,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>sensorHandle</strong>: handle of the vision sensor</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming (the first call) and simx_opmode_buffer (the following calls)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
<div><strong>resolution</strong>: 2 number values representing the resolution of the image</div>
<div><strong>buffer</strong>: a libpointer object to the data. To access individual depth buffer pixels, use following code:</div>

<br>
<pre class=lightPurpleBoxNoMarginAndSmall>
buffer.setDataType('singlePtr',1,resolution(1)*resolution(2));
buffer.value(pixelIndex);</pre>


<div>Values are in the range of 0-1 (0=closest to sensor, 1=farthest from sensor). The buffer remains valid until next call to a simx-function.</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxGetVisionSensorDepthBuffer">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxGetVisionSensorDepthBuffer">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetVisionSensorDepthBuffer">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxGetVisionSensorDepthBuffer">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxGetVisionSensorDepthBuffer">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxGetVisionSensorDepthBuffer2" id="simxGetVisionSensorDepthBuffer2"></a>simxGetVisionSensorDepthBuffer2 (regular API equivalent: <a href="regularApi/simGetVisionSensorDepthBuffer.htm">sim.getVisionSensorDepthBuffer</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves the depth buffer of a vision sensor as an image array. The returned data doesn't make sense if <a href="regularApi/simHandleVisionSensor.htm">sim.handleVisionSensor</a> wasn't called previously (sim.handleVisionSensor is called by default in the main script if the vision sensor is not tagged as explicit handling). Use the <a href="#simxGetLastCmdTime">simxGetLastCmdTime</a> function to verify the <em>freshness</em> of the retrieved data. This function is much slower than <a href="#simxGetVisionSensorDepthBuffer">simxGetVisionSensorDepthBuffer</a>. See also <a href="#simxGetVisionSensorImage">simxGetVisionSensorImage</a>.</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode,array resolution,matrix buffer]=simxGetVisionSensorDepthBuffer2(number clientID,number sensorHandle,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>sensorHandle</strong>: handle of the vision sensor</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming (the first call) and simx_opmode_buffer (the following calls)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
<div><strong>resolution</strong>: 2 number values representing the resolution of the image</div>
<div><strong>buffer</strong>: the depth buffer data.  Values are in the range of 0-1 (0=closest to sensor, 1=farthest from sensor).</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxGetVisionSensorDepthBuffer">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxGetVisionSensorDepthBuffer">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetVisionSensorDepthBuffer">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxGetVisionSensorDepthBuffer">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxGetVisionSensorDepthBuffer">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxGetVisionSensorImage" id="simxGetVisionSensorImage"></a>simxGetVisionSensorImage (regular API equivalent: <a href="regularApi/simGetVisionSensorImage.htm">sim.getVisionSensorImage</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves the image of a vision sensor as a pointer. The returned data doesn't make sense if <a href="regularApi/simHandleVisionSensor.htm">sim.handleVisionSensor</a> wasn't called previously (sim.handleVisionSensor is called by default in the main script if the vision sensor is not tagged as explicit handling). Use the <a href="#simxGetLastCmdTime">simxGetLastCmdTime</a> function to verify the <em>freshness</em> of the retrieved data. See also <a href="#simxGetVisionSensorImage2">simxGetVisionSensorImage2</a>, <a href="#simxSetVisionSensorImage">simxSetVisionSensorImage</a>, <a href="#simxGetVisionSensorDepthBuffer">simxGetVisionSensorDepthBuffer</a> and <a href="#simxReadVisionSensor">simxReadVisionSensor</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode,array resolution,libpointer image]=simxGetVisionSensorImage(number clientID,number sensorHandle,number options,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>sensorHandle</strong>: handle of the vision sensor</div>
<div><strong>options</strong>: image options, bit-coded:</div>
<div class=tab>bit0 set: each image pixel is a byte (greyscale image), otherwise each image pixel is a rgb byte-triplet</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming (the first call) and simx_opmode_buffer (the following calls)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
<div><strong>resolution</strong>: 2 number values representing the resolution of the image</div>
<div><strong>image</strong>: a libpointer object to the data. To access individual pixels, use following code:</div>

<br>
<pre class=lightPurpleBoxNoMarginAndSmall>
image.setDataType('uint8Ptr',1,resolution(1)*resolution(2)*bytesPerPixel);
image.value(pixelIndex);</pre>


<div>Values are in the range of 0-255. The buffer remains valid until next call to a simx-function.</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxGetVisionSensorImage">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxGetVisionSensorImage">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetVisionSensorImage">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxGetVisionSensorImage">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxGetVisionSensorImage">Lua</a></td> 
</tr> 
</table> 
<br>














<h3 class=subsectionBar><a name="simxGetVisionSensorImage2" id="simxGetVisionSensorImage2"></a>simxGetVisionSensorImage2 (regular API equivalent: <a href="regularApi/simGetVisionSensorImage.htm">sim.getVisionSensorImage</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves the image of a vision sensor as an image array. The returned data doesn't make sense if <a href="regularApi/simHandleVisionSensor.htm">sim.handleVisionSensor</a> wasn't called previously (sim.handleVisionSensor is called by default in the main script if the vision sensor is not tagged as explicit handling). Use the <a href="#simxGetLastCmdTime">simxGetLastCmdTime</a> function to verify the <em>freshness</em> of the retrieved data. See also <a href="#simxGetVisionSensorImage">simxGetVisionSensorImage</a>, <a href="#simxSetVisionSensorImage">simxSetVisionSensorImage</a>, <a href="#simxGetVisionSensorDepthBuffer">simxGetVisionSensorDepthBuffer</a> and <a href="#simxReadVisionSensor">simxReadVisionSensor</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode,array resolution,matrix image]=simxGetVisionSensorImage2(number clientID,number sensorHandle,number options,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>sensorHandle</strong>: handle of the vision sensor</div>
<div><strong>options</strong>: image options, bit-coded:</div>
<div class=tab>bit0 set: each image pixel is a byte (greyscale image), otherwise each image pixel is a rgb byte-triplet</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming (the first call) and simx_opmode_buffer (the following calls)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
<div><strong>resolution</strong>: 2 number values representing the resolution of the image</div>
<div><strong>image</strong>: the image data. Values are in the range of 0-255.</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxGetVisionSensorImage">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxGetVisionSensorImage">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetVisionSensorImage">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxGetVisionSensorImage">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxGetVisionSensorImage">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxJointGetForce" id="simxJointGetForce"></a>simxJointGetForce (REPRECATED)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>DEPRECATED. See <a href="#simxGetJointForce">simxGetJointForce</a> instead.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode,number force]=simxJointGetForce(number clientID,number jointHandle,number operationMode)<br></td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>jointHandle</strong>: handle of the joint</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming (the first call) and simx_opmode_buffer (the following calls)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
<div><strong>force</strong>: the force or the torque applied to the joint  along/about its z-axis
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxGetJointForce">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxGetJointForce">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetJointForce">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxGetJointForce">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxGetJointForce">Lua</a></td> 
</tr> 
</table> 
<br>
















<h3 class=subsectionBar><a name="simxLoadModel" id="simxLoadModel"></a>simxLoadModel (regular API equivalent: <a href="regularApi/simLoadModel.htm">sim.loadModel</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Loads a previously saved model. See also <a href="#simxLoadScene">simxLoadScene</a> and <a href="#simxTransferFile">simxTransferFile</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode,number baseHandle]=simxLoadModel(number clientID,string modelPathAndName,number options,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>modelPathAndName</strong>: the model filename, including the path and extension ('ttm'). The file is relative to the client or server system depending on the <strong>options</strong> value (see next argument)</div>
<div><strong>options</strong>: options, bit-coded:</div>
<div class=tab>bit0 set: the specified file is located on the client side (in that case the function will be blocking since the model first has to be transferred to the server). Otherwise it is located on the server side</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_blocking
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
<div><strong>baseHandle</strong>: the loaded model base. </div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxLoadModel">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxLoadModel">Python</a>, <a href="remoteApiFunctionsJava.htm#simxLoadModel">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxLoadModel">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxLoadModel">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxLoadScene" id="simxLoadScene"></a>simxLoadScene (regular API equivalent: <a href="regularApi/simLoadScene.htm">sim.loadScene</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Loads a previously saved scene. Should only be called when simulation is not running and is only executed by <a href="remoteApiServerSide.htm#continuousRemoteApiService">continuous remote API server services</a>. See also <a href="#simxCloseScene">simxCloseScene</a>, <a href="#simxLoadModel">simxLoadModel</a>, and <a href="#simxTransferFile">simxTransferFile</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode]=simxLoadScene(number clientID,string scenePathAndName,number options,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>scenePathAndName</strong>: the scene filename, including the path and extension ('ttt'). The file is relative to the client or server system depending on the <strong>options</strong> value (see next argument)</div>
<div><strong>options</strong>: options, bit-coded:</div>
<div class=tab>bit0 set: the specified file is located on the client side (in that case the function will be blocking since the scene first has to be transferred to the server). Otherwise it is located on the server side</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_blocking
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxLoadScene">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxLoadScene">Python</a>, <a href="remoteApiFunctionsJava.htm#simxLoadScene">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxLoadScene">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxLoadScene">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxLoadUI" id="simxLoadUI"></a>simxLoadUI (DEPRECATED)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>DEPRECATED. Use the <a href="customUIPlugin.htm">Qt-based custom user interfaces</a>, via <a href="#simxCallScriptFunction">simxCallScriptFunction</a> instead.</td>
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxPackFloats" id="simxPackFloats"></a>simxPackFloats</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Packs an array of floats into a string.  This is a remote API helper function. See also <a href="#simxUnpackFloats">simxUnpackFloats</a> and <a href="#simxPackInts">simxPackInts</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[string packedData]=simxPackFloats(array floatValues)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>floatValues</strong>: an array of numbers we wish to pack as floats</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>packedData</strong>: a string that contains the packed values. Each values takes exactly 4 bytes in the string.</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsJava.htm#FloatWA">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxPackFloats">Octave</a>, <a href="remoteApiFunctionsPython.htm#simxPackFloats">Python</a>, <a href="remoteApiFunctionsLua.htm#simxPackFloats">Lua</a></td> 
</tr> 
</table> 
<br>





















<h3 class=subsectionBar><a name="simxPackInts" id="simxPackInts"></a>simxPackInts</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Packs an array of integers into a string.  This is a remote API helper function. See also <a href="#simxUnpackInts">simxUnpackInts</a> and <a href="#simxPackFloats">simxPackFloats</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[string packedData]=simxPackInts(array intValues)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>intValues</strong>: an array of numbers we wish to pack as integers</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values </td> 
<td class=remApiTableRightCRet>
<div><strong>packedData</strong>: a string that contains the packed values. Each values takes exactly 4 bytes in the string.</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsJava.htm#IntWA">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxPackInts">Octave</a>, <a href="remoteApiFunctionsPython.htm#simxPackInts">Python</a>, <a href="remoteApiFunctionsLua.htm#simxPackInts">Lua</a></td> 
</tr> 
</table> 
<br>





















<h3 class=subsectionBar><a name="simxPauseCommunication" id="simxPauseCommunication"></a>simxPauseCommunication</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Allows to temporarily halt the communication thread from sending data. This can be useful if you need to send several values to V-REP that should be received and evaluated at the same time. This is a remote API helper function.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode]=simxPauseCommunication(number clientIDboolean pause)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>pause</strong>: whether the communication thread should pause or run normally.
</div>
<br>
<div>Usage example:</div>
<pre class=lightPurpleBoxNoMarginAndSmall>
vrep.simxPauseCommunication(clientID,1);
vrep.simxSetJointPosition(clientID,joint1Handle,joint1Value,vrep.simx_opmode_oneshot);
vrep.simxSetJointPosition(clientID,joint2Handle,joint2Value,vrep.simx_opmode_oneshot);
vrep.simxSetJointPosition(clientID,joint3Handle,joint3Value,vrep.simx_opmode_oneshot);
vrep.simxPauseCommunication(clientID,0);

% Above's 3 joints will be received and set on the V-REP side at the same time</pre>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: 0 in case of operation success.<a href="remoteApiConstants.htm#functionErrorCodes"></a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxPauseCommunication">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxPauseCommunication">Python</a>, <a href="remoteApiFunctionsJava.htm#simxPauseCommunication">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxPauseCommunication">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxPauseCommunication">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxPauseSimulation" id="simxPauseSimulation"></a>simxPauseSimulation (regular API equivalent: <a href="regularApi/simPauseSimulation.htm">sim.pauseSimulation</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Requests a pause of a simulation. See also <a href="#simxStartSimulation">simxStartSimulation</a> and <a href="#simxStopSimulation">simxStopSimulation</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode]=simxPauseSimulation(number clientID,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function is simx_opmode_oneshot.
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxPauseSimulation">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxPauseSimulation">Python</a>, <a href="remoteApiFunctionsJava.htm#simxPauseSimulation">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxPauseSimulation">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxPauseSimulation">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar>
<a name="simxQuery" id="simxQuery"></a>simxQuery
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>DEPRECATED. Refer to <a href="#simxCallScriptFunction">simxCallScriptFunction</a> instead.<br><br>Sends a query string to V-REP, and waits for a reply string. Query and reply strings can be accessed via string signals<a href="#simxGetFloatSignal"></a>. This function allows for instance to have a <a href="childScripts.htm">child script</a>, another remote API client or a <a href="rosInterfaces.htm">ROS node</a> handle special requests coming from this remote API client, then send a reply back. To pack/unpack integers/floats into/from a string, refer to <a href="#simxPackInts">simxPackInts</a>, <a href="#simxPackFloats">simxPackFloats</a>, <a href="#simxUnpackInts">simxUnpackInts</a> and <a href="#simxUnpackFloats">simxUnpackFloats</a>.
<br>
<br>

<div>Usage example where a child script handles a request:</div>
<pre class=lightPurpleBoxNoMarginAndSmall>
% Following is the remote API client side:
[res,replyData]=vrep.simxQuery(clientID,'request','send me a 42','reply',5000)
if (res==vrep.simx_return_ok)
    fprintf('The reply is: %s\n',replyData);
end</pre>

<br>
<pre class=lightRedBoxNoMarginAndSmall>
-- This is the child script side. The child script is non-threaded and
-- following part executed at each simulation pass:
req=sim.getStringSignal('request')
if (req) then
    sim.clearStringSignal('request')
    if (req=='send me a 42') then
        sim.setStringSignal('reply','42\0') -- will be automatically cleared by the client
    end
end
</pre>


</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode string retSignalValue]=simxQuery(number clientID,string signalName,string signalValue,string retSignalName,number timeOutInMs)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>signalName</strong>: name of the signal that contains the request string</div>
<div><strong>signalValue</strong>: the request string. </div>
<div><strong>retSignalName</strong>: name of the signal that contains the reply string</div>
<div><strong>timeOutInMs</strong>: the maximum time in milliseconds that the function will wait for a reply.
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return value
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
<div><strong>retSignalValue</strong>: the reply string</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxQuery">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxQuery">Python</a>, <a href="remoteApiFunctionsJava.htm#simxQuery">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxQuery">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxQuery">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxReadCollision" id="simxReadCollision"></a>simxReadCollision (regular API equivalent: <a href="regularApi/simReadCollision.htm">sim.readCollision</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Reads the collision state of a registered collision object. This function doesn't perform collision detection, it merely reads the result from a previous call to <a href="regularApi/simHandleCollision.htm">sim.handleCollision</a> (sim.handleCollision is called in the default main script). See also <a href="#simxGetObjectGroupData">simxGetObjectGroupData</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode,boolean collisionState]=simxReadCollision(number clientID,number collisionObjectHandle,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>collisionObjectHandle</strong>: handle of the collision object</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming (the first call) and simx_opmode_buffer (the following calls)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
<div><strong>collisionState</strong>: the collision state (false: not colliding)</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxReadCollision">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxReadCollision">Python</a>, <a href="remoteApiFunctionsJava.htm#simxReadCollision">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxReadCollision">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxReadCollision">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxReadDistance" id="simxReadDistance"></a>simxReadDistance (regular API equivalent: <a href="regularApi/simReadDistance.htm">sim.readDistance</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Reads the distance that a  registered distance object measured. This function doesn't perform minimum distance calculation, it merely reads the result from a previous call to <a href="regularApi/simHandleDistance.htm">sim.handleDistance</a> (sim.handleDistance is called in the default main script). See also <a href="#simxGetObjectGroupData">simxGetObjectGroupData</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode,number minimumDistance]=simxReadDistance(number clientID,number distanceObjectHandle,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>distanceObjectHandle</strong>: handle of the distance object</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming (the first call) and simx_opmode_buffer (the following calls)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
<div><strong>minimumDistance</strong>: the minimum distance.  If the distance object wasn't handled yet, the distance value will be larger than 1e36.</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxReadDistance">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxReadDistance">Python</a>, <a href="remoteApiFunctionsJava.htm#simxReadDistance">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxReadDistance">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxReadDistance">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxReadForceSensor" id="simxReadForceSensor"></a>simxReadForceSensor (regular API equivalent: <a href="regularApi/simReadForceSensor.htm">sim.readForceSensor</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Reads the force and torque applied to a force sensor (filtered values are read), and its current state ('unbroken' or 'broken'). See also <a href="#simxBreakForceSensor">simxBreakForceSensor</a>, <a href="#simxGetJointForce">simxGetJointForce</a> and <a href="#simxGetObjectGroupData">simxGetObjectGroupData</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode,number state,array forceVector,array torqueVector]=simxReadForceSensor(number clientID,number forceSensorHandle,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>forceSensorHandle</strong>: handle of the force sensor</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming (the first call) and simx_opmode_buffer (the following calls)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
<div><strong>state</strong>: the state of the force sensor:</div>
<div class=tab>bit 0 set: force and torque data is available, otherwise it is not (yet) available (e.g. when not enough values are present for the filter)</div>
<div class=tab>bit 1 set: force sensor is broken, otherwise it is still intact ('unbroken')</div>
<div><strong>forceVector</strong>: 3 values representing the force vector</div>
<div><strong>torqueVector</strong>: 3 values representing the torque vector</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxReadForceSensor">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxReadForceSensor">Python</a>, <a href="remoteApiFunctionsJava.htm#simxReadForceSensor">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxReadForceSensor">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxReadForceSensor">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxReadProximitySensor" id="simxReadProximitySensor"></a>simxReadProximitySensor (regular API equivalent: <a href="regularApi/simReadProximitySensor.htm">sim.readProximitySensor</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Reads the state of a proximity sensor. This function doesn't perform detection, it merely reads the result from a previous call to <a href="regularApi/simHandleProximitySensor.htm">sim.handleProximitySensor</a> (sim.handleProximitySensor is called in the default main script). See also <a href="#simxGetObjectGroupData">simxGetObjectGroupData</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode,boolean detectionState,array detectedPoint,number detectedObjectHandle,array detectedSurfaceNormalVector]=simxReadProximitySensor(number clientID,number sensorHandle,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>sensorHandle</strong>: handle of the proximity sensor</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming (the first call) and simx_opmode_buffer (the following calls)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
<div><strong>detectionState</strong>: the detection state (false=no detection)</div>
<div><strong>detectedPoint</strong>: the detected point coordinates (relative to the sensor reference frame)</div>
<div><strong>detectedObjectHandle</strong>: the handle of the detected object</div>
<div><strong>detectedSurfaceNormalVector</strong>: the normal vector (normalized) of the detected surface. Relative to the sensor reference frame</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxReadProximitySensor">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxReadProximitySensor">Python</a>, <a href="remoteApiFunctionsJava.htm#simxReadProximitySensor">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxReadProximitySensor">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxReadProximitySensor">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxReadStringStream" id="simxReadStringStream"></a>simxReadStringStream</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Gets the value of a string signal, then clears it.  Useful to retrieve continuous data from the server. To pack/unpack integers/floats into/from a string, refer to <a href="#simxPackInts">simxPackInts</a>, <a href="#simxPackFloats">simxPackFloats</a>, <a href="#simxUnpackInts">simxUnpackInts</a> and <a href="#simxUnpackFloats">simxUnpackFloats</a>. See also <a href="#simxWriteStringStream">simxWriteStringStream</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode,string signalValue]=simxReadStringStream(number clientID,string signalName,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>signalName</strong>: name of the signal</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming (the first call) and simx_opmode_buffer (the following calls). simx_opmode_blocking is forbidden. Use a construction like following in order to continuously exchange data with V-REP:</div>

<br>
Remote API client side:
<pre class=lightPurpleBoxNoMarginAndSmall>
% Initialization phase:
[err,signal]=vrep.simxReadStringStream(clientID,'toClient',
        vrep.simx_opmode_streaming);
% while we are connected:
while (vrep.simxGetConnectionId(clientID)~=-1) 
  [err,signal]=vrep.simxReadStringStream(clientID,'toClient',
        vrep.simx_opmode_buffer);
  if (err==vrep.simx_return_ok)
    % Data produced by the child script was retrieved! Send it back to the child script:
    vrep.simxWriteStringStream(clientID,'fromClient',signal,
        vrep.simx_opmode_oneshot);
  end
end</pre>

<br>
Server side (V-REP), from a non-threaded child script:
<pre class=lightRedBoxNoMarginAndSmall>
function sysCall_init()
    -- initialization phase:
    i=0
    lastReceived=-1
end

function sysCall_actuation()
    -- First send a stream of integers that count up:
    dat=sim.getStringSignal('toClient')
    if not dat then
        dat=''
    end
    dat=dat..sim.packInt32Table({i})
    i=i+1
    sim.setStringSignal('toClient',dat)

    -- Here receive the integer stream in return and check if each number is correct:
    dat=sim.getStringSignal('fromClient')
    if dat then
        sim.clearStringSignal('fromClient')
        dat=sim.unpackInt32Table(dat)
        for j=1,#dat,1 do
            if (dat[j]~=lastReceived+1) then
                print('Error')
            else
                io.write('.')
                lastReceived=dat[j]
            end
        end
    end
end</pre>



</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
<div><strong>signalValue</strong>: the signal data (that may contain any value, including embedded zeros)</div>

</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxReadStringStream">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxReadStringStream">Python</a>, <a href="remoteApiFunctionsJava.htm#simxReadStringStream">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxReadStringStream">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxReadStringStream">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxReadVisionSensor" id="simxReadVisionSensor"></a>simxReadVisionSensor (regular API equivalent: <a href="regularApi/simReadVisionSensor.htm">sim.readVisionSensor</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Reads the state of a vision sensor. This function doesn't perform detection, it merely reads the result from a previous call to <a href="regularApi/simHandleVisionSensor.htm">sim.handleVisionSensor</a> (sim.handleVisionSensor is called in the default main script). See also <a href="#simxGetVisionSensorImage">simxGetVisionSensorImage</a> and <a href="#simxGetObjectGroupData">simxGetObjectGroupData</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode,boolean detectionState,array auxData,array auxPacketInfo]=simxReadVisionSensor(number clientID,number sensorHandle,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>sensorHandle</strong>: handle of the vision sensor</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming (the first call) and simx_opmode_buffer (the following calls)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
<div><strong>detectionState</strong>: the detection state (i.e. the trigger state)</div>
<div><strong>auxData</strong>: all auxiliary values returned from the <a href="visionSensorFilterComposition.htm">applied filters</a>. By default V-REP returns one packet of 15 auxiliary values:the minimum of {intensity, red, green, blue, depth value}, the maximum of {intensity, red, green, blue, depth value}, and the average of {intensity, red, green, blue, depth value}. If additional filter components return values, then they will be appended as packets after the first packet.</div>
<div><strong>auxPacketInfo</strong>: an array containing an entry for each returned packet. Each entry represents the number of values in each packets. Use this info to extract individual packets from <strong>auxData</strong>.</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxReadVisionSensor">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxReadVisionSensor">Python</a>, <a href="remoteApiFunctionsJava.htm#simxReadVisionSensor">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxReadVisionSensor">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxReadVisionSensor">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxReleaseBuffer" id="simxReleaseBuffer"></a>simxReleaseBuffer (regular API equivalent: <a href="regularApi/simReleaseBuffer.htm">simReleaseBuffer</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Releases a buffer previously created with <a href="#simxCreateBuffer">simxCreateBuffer</a> or a buffer returned by a remote API function. This is a remote API helper function.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>simxReleaseBuffer(libpointer buffer)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>buffer</strong>: buffer to be released</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div>none<a href="remoteApiConstants.htm#functionErrorCodes"></a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxReleaseBuffer">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxReleaseBuffer">Python</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxRemoveModel" id="simxRemoveModel"></a>simxRemoveModel (regular API equivalent: <a href="regularApi/simRemoveModel.htm">sim.removeModel</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Removes a model from the scene. See also <a href="#simxRemoveObject">simxRemoveObject</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode]=simxRemoveModel(number clientID,number objectHandle,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>objectHandle</strong>: handle of the model to remove (object should be flagged as <em>model base</em>).</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot (or simx_opmode_blocking)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxRemoveModel">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxRemoveModel">Python</a>, <a href="remoteApiFunctionsJava.htm#simxRemoveModel">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxRemoveModel">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxRemoveModel">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxRemoveObject" id="simxRemoveObject"></a>simxRemoveObject (regular API equivalent: <a href="regularApi/simRemoveObject.htm">sim.removeObject</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Removes a scene object. See also <a href="#simxRemoveModel">simxRemoveModel</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode]=simxRemoveObject(number clientID,number objectHandle,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>objectHandle</strong>: handle of the object to remove</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot (or simx_opmode_blocking)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxRemoveObject">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxRemoveObject">Python</a>, <a href="remoteApiFunctionsJava.htm#simxRemoveObject">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxRemoveObject">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxRemoveObject">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxRemoveUI" id="simxRemoveUI"></a>simxRemoveUI (DEPRECATED)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>DEPRECATED. Use the <a href="customUIPlugin.htm">Qt-based custom user interfaces</a>, via <a href="#simxCallScriptFunction">simxCallScriptFunction</a> instead.</td>
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxSetArrayParameter" id="simxSetArrayParameter"></a>simxSetArrayParameter (regular API equivalent: <a href="regularApi/simSetArrayParameter.htm">sim.setArrayParameter</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Sets 3 values of an <a href="apiConstants.htm#arrayParameters">array parameter</a>. See also <a href="#simxGetArrayParameter">simxGetArrayParameter</a>, <a href="#simxSetBooleanParameter">simxSetBooleanParameter</a>, <a href="#simxSetIntegerParameter">simxSetIntegerParameter</a> and <a href="#simxSetFloatingParameter">simxSetFloatingParameter</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode]=simxSetArrayParameter(number clientID,number paramIdentifier,array paramValues,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>paramIdentifier</strong>: an <a href="apiConstants.htm#arrayParameters">array parameter identifier</a></div>
<div><strong>paramValues</strong>: the array containing the 3 values to set</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxSetArrayParameter">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxSetArrayParameter">Python</a>, <a href="remoteApiFunctionsJava.htm#simxSetArrayParameter">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxSetArrayParameter">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxSetArrayParameter">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxSetBooleanParameter" id="simxSetBooleanParameter"></a>simxSetBooleanParameter (regular API equivalent: <a href="regularApi/simSetBoolParameter.htm">sim.setBoolParameter</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Sets a <a href="apiConstants.htm#booleanParameters">boolean parameter</a>. See also <a href="#simxGetBooleanParameter">simxGetBooleanParameter</a>, <a href="#simxSetIntegerParameter">simxSetIntegerParameter</a>, <a href="#simxSetArrayParameter">simxSetArrayParameter</a> and <a href="#simxSetFloatingParameter">simxSetFloatingParameter</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode]=simxSetBooleanParameter(number clientID,number paramIdentifier,boolean paramValue,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>paramIdentifier</strong>: a <a href="apiConstants.htm#booleanParameters">Boolean parameter identifier</a></div>
<div><strong>paramValue</strong>: the parameter value</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxSetBooleanParameter">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxSetBooleanParameter">Python</a>, <a href="remoteApiFunctionsJava.htm#simxSetBooleanParameter">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxSetBooleanParameter">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxSetBooleanParameter">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxSetFloatingParameter" id="simxSetFloatingParameter"></a>simxSetFloatingParameter (regular API equivalent: <a href="regularApi/simSetFloatParameter.htm">sim.setFloatParameter</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Sets a <a href="apiConstants.htm#floatingParameters">floating point parameter</a>. See also <a href="#simxGetFloatingParameter">simxGetFloatingParameter</a>, <a href="#simxSetBooleanParameter">simxSetBooleanParameter</a>, <a href="#simxSetArrayParameter">simxSetArrayParameter</a> and <a href="#simxSetIntegerParameter">simxSetIntegerParameter</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode]=simxSetFloatingParameter(number clientID,number paramIdentifier,number paramValue,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>paramIdentifier</strong>: a <a href="apiConstants.htm#floatingParameters">floating parameter identifier</a></div>
<div><strong>paramValue</strong>: the parameter value</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxSetFloatingParameter">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxSetFloatingParameter">Python</a>, <a href="remoteApiFunctionsJava.htm#simxSetFloatingParameter">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxSetFloatingParameter">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxSetFloatingParameter">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxSetFloatSignal" id="simxSetFloatSignal"></a>simxSetFloatSignal (regular API equivalent: <a href="regularApi/simSetDoubleSignal.htm">sim.setDoubleSignal</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Sets the value of a float signal. If that signal is not yet present, it is added. See also <a href="#simxGetFloatSignal">simxGetFloatSignal</a>, <a href="#simxClearFloatSignal">simxClearFloatSignal</a>, <a href="#simxSetIntegerSignal">simxSetIntegerSignal</a> and <a href="#simxSetStringSignal">simxSetStringSignal</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode]=simxSetFloatSignal(number clientID,string signalName,number signalValue,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>signalName</strong>: name of the signal</div>
<div><strong>signalValue</strong>: value of the signal</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxSetFloatSignal">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxSetFloatSignal">Python</a>, <a href="remoteApiFunctionsJava.htm#simxSetFloatSignal">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxSetFloatSignal">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxSetFloatSignal">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxSetIntegerParameter" id="simxSetIntegerParameter"></a>simxSetIntegerParameter (regular API equivalent: <a href="regularApi/simSetInt32Parameter.htm">sim.setInt32Parameter</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Sets an <a href="apiConstants.htm#integerParameters">integer parameter</a>. See also <a href="#simxGetIntegerParameter">simxGetIntegerParameter</a>, <a href="#simxSetBooleanParameter">simxSetBooleanParameter</a>, <a href="#simxSetArrayParameter">simxSetArrayParameter</a> and <a href="#simxSetFloatingParameter">simxSetFloatingParameter</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode]=simxSetIntegerParameter(number clientID,number paramIdentifier,number paramValue,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>paramIdentifier</strong>: an <a href="apiConstants.htm#integerParameters">integer parameter identifier</a></div>
<div><strong>paramValue</strong>: the parameter value</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxSetIntegerParameter">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxSetIntegerParameter">Python</a>, <a href="remoteApiFunctionsJava.htm#simxSetIntegerParameter">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxSetIntegerParameter">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxSetIntegerParameter">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxSetIntegerSignal" id="simxSetIntegerSignal"></a>simxSetIntegerSignal (regular API equivalent: <a href="regularApi/simSetIntegerSignal.htm">sim.setIntegerSignal</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Sets the value of an integer signal. If that signal is not yet present, it is added. See also <a href="#simxGetIntegerSignal">simxGetIntegerSignal</a>, <a href="#simxClearIntegerSignal">simxClearIntegerSignal</a>, <a href="#simxSetFloatSignal">simxSetFloatSignal</a> and <a href="#simxSetStringSignal">simxSetStringSignal</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode]=simxSetIntegerSignal(number clientID,string signalName,number signalValue,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>signalName</strong>: name of the signal</div>
<div><strong>signalValue</strong>: value of the signal</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxSetIntegerSignal">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxSetIntegerSignal">Python</a>, <a href="remoteApiFunctionsJava.htm#simxSetIntegerSignal">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxSetIntegerSignal">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxSetIntegerSignal">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxSetJointForce" id="simxSetJointForce"></a>simxSetJointForce (regular API equivalent: <a href="regularApi/simSetJointForce.htm">sim.setJointForce</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Sets the maximum force or torque that a joint can exert. This function has no effect when the joint is not dynamically enabled, or when it is a spherical joint. See also <a href="#simxGetJointForce">simxGetJointForce</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode]=simxSetJointForce(number clientID,number jointHandle,number force,number operationMode)<br></td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>jointHandle</strong>: handle of the joint</div>
<div><strong>force</strong>: the maximum force or torque that the joint can exert
</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxSetJointForce">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxSetJointForce">Python</a>, <a href="remoteApiFunctionsJava.htm#simxSetJointForce">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxSetJointForce">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxSetJointForce">Lua</a></td> 
</tr> 
</table> 
<br>























<h3 class=subsectionBar><a name="simxSetJointPosition" id="simxSetJointPosition"></a>simxSetJointPosition (regular API equivalent: <a href="regularApi/simSetJointPosition.htm">sim.setJointPosition</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Sets the intrinsic position of a joint. May have no effect depending on the joint mode. This function cannot be used with spherical joints (use <a href="#simxSetSphericalJointMatrix">simxSetSphericalJointMatrix</a> instead). If you want to set several joints that should be applied at the exact same time on the V-REP side, then use <a href="#simxPauseCommunication">simxPauseCommunication</a>. See also <a href="#simxGetJointPosition">simxGetJointPosition</a> and <a href="#simxSetJointTargetPosition">simxSetJointTargetPosition</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode]=simxSetJointPosition(number clientID,number jointHandle,number position,number operationMode)<br></td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>jointHandle</strong>: handle of the joint</div>
<div><strong>position</strong>: position of the joint (angular or linear value depending on the joint type)
</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_oneshot or 
simx_opmode_streaming</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxSetJointPosition">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxSetJointPosition">Python</a>, <a href="remoteApiFunctionsJava.htm#simxSetJointPosition">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxSetJointPosition">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxSetJointPosition">Lua</a></td> 
</tr> 
</table> 
<br>











<h3 class=subsectionBar><a name="simxSetJointTargetPosition" id="simxSetJointTargetPosition"></a>simxSetJointTargetPosition (regular API equivalent: <a href="regularApi/simSetJointTargetPosition.htm">sim.setJointTargetPosition</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Sets the target position of a joint if the joint is in torque/force mode (also make sure that the joint's motor and position control are enabled). See also <a href="#simxSetJointPosition">simxSetJointPosition</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode]=simxSetJointTargetPosition(number clientID,number jointHandle,number targetPosition,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>jointHandle</strong>: handle of the joint</div>
<div><strong>targetPosition</strong>: target position of the joint (angular or linear value depending on the joint type)</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_oneshot or 
simx_opmode_streaming
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxSetJointTargetPosition">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxSetJointTargetPosition">Python</a>, <a href="remoteApiFunctionsJava.htm#simxSetJointTargetPosition">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxSetJointTargetPosition">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxSetJointTargetPosition">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxSetJointTargetVelocity" id="simxSetJointTargetVelocity"></a>simxSetJointTargetVelocity (regular API equivalent: <a href="regularApi/simSetJointTargetVelocity.htm">sim.setJointTargetVelocity</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Sets the intrinsic target velocity of a non-spherical joint. This command makes only sense when the joint mode is in torque/force mode: the dynamics functionality and the joint motor have to be enabled (position control should however be disabled)</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode]=simxSetJointTargetVelocity(number clientID,number jointHandle,number targetVelocity,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>jointHandle</strong>: handle of the joint</div>
<div><strong>targetVelocity</strong>: target velocity of the joint (linear or angular velocity depending on the joint-type)</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_oneshot or 
simx_opmode_streaming
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxSetJointTargetVelocity">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxSetJointTargetVelocity">Python</a>, <a href="remoteApiFunctionsJava.htm#simxSetJointTargetVelocity">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxSetJointTargetVelocity">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxSetJointTargetVelocity">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxSetModelProperty" id="simxSetModelProperty"></a>simxSetModelProperty (regular API equivalent: <a href="regularApi/simSetModelProperty.htm">sim.setModelProperty</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Sets the properties of a model. See also <a href="#simxGetModelProperty">simxGetModelProperty</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode]=simxSetModelProperty(number clientID,number objectHandle,number prop,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>objectHandle</strong>: handle of the object</div>
<div><strong>prop</strong>: a <a href="apiConstants.htm#modelProperties">model property value</a></div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxSetModelProperty">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxSetModelProperty">Python</a>, <a href="remoteApiFunctionsJava.htm#simxSetModelProperty">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxSetModelProperty">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxSetModelProperty">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxSetObjectFloatParameter" id="simxSetObjectFloatParameter"></a>simxSetObjectFloatParameter (regular API equivalent: <a href="regularApi/simSetObjectFloatParameter.htm">sim.setObjectFloatParameter</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Sets a floating-point parameter of a object. See also <a href="#simxGetObjectFloatParameter">simxGetObjectFloatParameter</a> and <a href="#simxSetObjectIntParameter">simxSetObjectIntParameter</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode]=simxSetObjectFloatParameter(number clientID,number objectHandle,number parameterID,number parameterValue,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>objectHandle</strong>: handle of the object</div>
<div><strong>parameterID</strong>: identifier of the parameter to set. See the <a href="objectParameterIDs.htm">list of all possible object parameter identifiers</a></div>
<div><strong>parameterValue</strong>: the desired value of the parameter</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxSetObjectFloatParameter">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxSetObjectFloatParameter">Python</a>, <a href="remoteApiFunctionsJava.htm#simxSetObjectFloatParameter">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxSetObjectFloatParameter">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxSetObjectFloatParameter">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxSetObjectIntParameter" id="simxSetObjectIntParameter"></a>simxSetObjectIntParameter (regular API equivalent: <a href="regularApi/simSetObjectInt32Parameter.htm">sim.setObjectInt32Parameter</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Sets an integer parameter of a object. See also <a href="#simxGetObjectIntParameter">simxGetObjectIntParameter</a> and <a href="#simxSetObjectFloatParameter">simxSetObjectFloatParameter</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode]=simxSetObjectIntParameter(number clientID,number objectHandle,number parameterID,number parameterValue,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>objectHandle</strong>: handle of the object</div>
<div><strong>parameterID</strong>: identifier of the parameter to set. See the <a href="objectParameterIDs.htm">list of all possible object parameter identifiers</a></div>
<div><strong>parameterValue</strong>: the desired value of the parameter</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxSetObjectIntParameter">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxSetObjectIntParameter">Python</a>, <a href="remoteApiFunctionsJava.htm#simxSetObjectIntParameter">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxSetObjectIntParameter">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxSetObjectIntParameter">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxSetObjectOrientation" id="simxSetObjectOrientation"></a>simxSetObjectOrientation (regular API equivalent: <a href="regularApi/simSetObjectOrientation.htm">sim.setObjectOrientation</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Sets the orientation (<a href="eulerAngles.htm">Euler angles</a>) of an object. Dynamically simulated objects will implicitely be reset before the command is applied (i.e. similar to calling <a href="regularApi/simResetDynamicObject.htm">sim.resetDynamicObject</a> just before). See also <a href="#simxGetObjectOrientation">simxGetObjectOrientation</a>, <a href="#simxSetObjectQuaternion">simxSetObjectQuaternion</a> and <a href="#simxSetObjectPosition">simxSetObjectPosition</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode]=simxSetObjectOrientation(number clientID,number objectHandle,number relativeToObjectHandle,array eulerAngles,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>objectHandle</strong>: handle of the object</div>
<div><strong>relativeToObjectHandle</strong>: indicates relative to which reference frame the orientation is specified. Specify -1 to set the absolute orientation, sim_handle_parent to set the orientation relative to the object's parent, or an object handle relative to whose reference frame the orientation is specified.</div>
<div><strong>eulerAngles</strong>: Euler angles (alpha, beta and gamma)</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxSetObjectOrientation">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxSetObjectOrientation">Python</a>, <a href="remoteApiFunctionsJava.htm#simxSetObjectOrientation">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxSetObjectOrientation">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxSetObjectOrientation">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxSetObjectParent" id="simxSetObjectParent"></a>simxSetObjectParent (regular API equivalent: <a href="regularApi/simSetObjectParent.htm">sim.setObjectParent</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Sets an object's parent object. See also <a href="#simxGetObjectParent">simxGetObjectParent</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode]=simxSetObjectParent(number clientID,number objectHandle,number parentObject,boolean keepInPlace,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>objectHandle</strong>: handle of the object that will become child of the parent object.  Can be combined with <a href="apiConstants.htm#specialHandleFlags">sim_handleflag_assembly</a>, if the two objects can be assembled via a predefined assembly transformation (refer to the <strong>assembling</strong> option in the <a href="commonPropertiesDialog.htm">object common properties</a>). In that case, <strong>parentObject</strong> can't be -1, and <strong>keepInPlace</strong> should be set to false.</div>
<div><strong>parentObject</strong>: handle of the object that will become parent, or -1 if the object should become parentless</div>
<div><strong>keepInPlace</strong>: indicates whether the object's absolute position and orientation should stay same</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot or simx_opmode_blocking depending on the intent
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxSetObjectParent">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxSetObjectParent">Python</a>, <a href="remoteApiFunctionsJava.htm#simxSetObjectParent">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxSetObjectParent">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxSetObjectParent">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxSetObjectPosition" id="simxSetObjectPosition"></a>simxSetObjectPosition (regular API equivalent: <a href="regularApi/simSetObjectPosition.htm">sim.setObjectPosition</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Sets the position of an object. Dynamically simulated objects will implicitely be reset before the command is applied (i.e. similar to calling  <a href="regularApi/simResetDynamicObject.htm">sim.resetDynamicObject</a> just before). See also <a href="#simxGetObjectPosition">simxGetObjectPosition</a>, <a href="#simxSetObjectQuaternion">simxSetObjectQuaternion</a> and <a href="#simxSetObjectOrientation">simxSetObjectOrientation</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode]=simxSetObjectPosition(number clientID,number objectHandle,number relativeToObjectHandle,array position,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>objectHandle</strong>: handle of the object</div>
<div><strong>relativeToObjectHandle</strong>: indicates relative to which reference frame the position is specified. Specify -1 to set the absolute position, sim_handle_parent to set the position relative to the object's parent, or an object handle relative to whose reference frame the position is specified.</div>
<div><strong>position</strong>: the position values (x, y and z)</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxSetObjectPosition">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxSetObjectPosition">Python</a>, <a href="remoteApiFunctionsJava.htm#simxSetObjectPosition">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxSetObjectPosition">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxSetObjectPosition">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxSetObjectQuaternion" id="simxSetObjectQuaternion"></a>simxSetObjectQuaternion (regular API equivalent: <a href="regularApi/simSetObjectQuaternion.htm">sim.setObjectQuaternion</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Sets the orientation of an object as quaternion. Dynamically simulated objects will implicitely be reset before the command is applied (i.e. similar to calling  <a href="regularApi/simResetDynamicObject.htm">sim.resetDynamicObject</a> just before). See also <a href="#simxGetObjectQuaternion">simxGetObjectQuaternion</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode]=simxSetObjectQuaternion(number clientID,number objectHandle,number relativeToObjectHandle,array quat,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>objectHandle</strong>: handle of the object</div>
<div><strong>relativeToObjectHandle</strong>: indicates relative to which reference frame the quaternion is specified. Specify -1 to set the absolute quaternion, sim_handle_parent to set the quaternion relative to the object's parent, or an object handle relative to whose reference frame the quaternion is specified.</div>
<div><strong>quat</strong>: the quaternion values (x, y, z, w)</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxSetObjectQuaternion">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxSetObjectQuaternion">Python</a>, <a href="remoteApiFunctionsJava.htm#simxSetObjectQuaternion">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxSetObjectQuaternion">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxSetObjectQuaternion">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxSetObjectSelection" id="simxSetObjectSelection"></a>simxSetObjectSelection</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Sets the selection state for objects. See also <a href="#simxGetObjectSelection">simxGetObjectSelection</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode]=simxSetObjectSelection(number clientID,array objectHandles,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>objectHandles</strong>: an array of object handles</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot or simx_opmode_blocking depending on the intent.
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxSetObjectSelection">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxSetObjectSelection">Python</a>, <a href="remoteApiFunctionsJava.htm#simxSetObjectSelection">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxSetObjectSelection">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxSetObjectSelection">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxSetSphericalJointMatrix" id="simxSetSphericalJointMatrix"></a>simxSetSphericalJointMatrix (regular API equivalent: <a href="regularApi/simSetSphericalJointMatrix.htm">sim.setSphericalJointMatrix</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Sets the intrinsic orientation matrix of a spherical joint object. This function cannot be used with non-spherical joints (use <a href="#simxSetJointPosition">simxSetJointPosition</a> instead). See also <a href="#simxGetJointMatrix">simxGetJointMatrix</a>..</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode]=simxSetSphericalJointMatrix(number clientID,number jointHandle,array matrix,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>jointHandle</strong>: handle of the joint</div>
<div><strong>matrix</strong>: 12 number values. See the regular API equivalent function for details</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_oneshot or 
simx_opmode_streaming
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxSetSphericalJointMatrix">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxSetSphericalJointMatrix">Python</a>, <a href="remoteApiFunctionsJava.htm#simxSetSphericalJointMatrix">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxSetSphericalJointMatrix">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxSetSphericalJointMatrix">Lua</a></td> 
</tr> 
</table> 
<br>











<h3 class=subsectionBar><a name="simxSetStringSignal" id="simxSetStringSignal"></a>simxSetStringSignal (regular API equivalent: <a href="regularApi/simSetStringSignal.htm">sim.setStringSignal</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Sets the value of a string signal. If that signal is not yet present, it is added. To pack/unpack integers/floats into/from a string, refer to <a href="#simxPackInts">simxPackInts</a>, <a href="#simxPackFloats">simxPackFloats</a>, <a href="#simxUnpackInts">simxUnpackInts</a> and <a href="#simxUnpackFloats">simxUnpackFloats</a>. See also <a href="#simxWriteStringStream">simxWriteStringStream</a>, <a href="#simxGetStringSignal">simxGetStringSignal</a>, <a href="#simxClearStringSignal">simxClearStringSignal</a>, <a href="#simxSetIntegerSignal">simxSetIntegerSignal</a> and <a href="#simxSetFloatSignal">simxSetFloatSignal</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode]=simxSetStringSignal(number clientID,string signalName,string signalValue,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>signalName</strong>: name of the signal</div>
<div><strong>signalValue</strong>: value of the signal (which may contain any value, including embedded zeros)</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxSetStringSignal">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxSetStringSignal">Python</a>, <a href="remoteApiFunctionsJava.htm#simxSetStringSignal">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxSetStringSignal">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxSetStringSignal">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxSetUIButtonLabel" id="simxSetUIButtonLabel"></a>simxSetUIButtonLabel (DEPRECATED)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>DEPRECATED. Use the <a href="customUIPlugin.htm">Qt-based custom user interfaces</a>, via <a href="#simxCallScriptFunction">simxCallScriptFunction</a> instead.</td>
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxSetUIButtonProperty" id="simxSetUIButtonProperty"></a>simxSetUIButtonProperty (DEPRECATED)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>DEPRECATED. Use the <a href="customUIPlugin.htm">Qt-based custom user interfaces</a>, via <a href="#simxCallScriptFunction">simxCallScriptFunction</a> instead.</td>
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxSetUISlider" id="simxSetUISlider"></a>simxSetUISlider (DEPRECATED)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>DEPRECATED. Use the <a href="customUIPlugin.htm">Qt-based custom user interfaces</a>, via <a href="#simxCallScriptFunction">simxCallScriptFunction</a> instead.</td>
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxSetVisionSensorImage" id="simxSetVisionSensorImage"></a>simxSetVisionSensorImage (regular API equivalent: <a href="regularApi/simSetVisionSensorImage.htm">sim.setVisionSensorImage</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Sets the image of a vision sensor (and applies any image processing filter if specified in the vision sensor dialog). The image is provided as a libpointer. Make sure the vision sensor is flagged as <strong>use external image</strong>. The <em>regular</em> use of this function is to first read the data from a vision sensor with <a href="#simxGetVisionSensorImage">simxGetVisionSensorImage</a>, do some custom filtering, then write the modified image to a passive vision sensor. The alternate use of this function is to display textures, video images, etc. by using a vision sensor object (without however making use of the vision sensor functionality), since a vision sensor can be <em>looked through</em> like camera objects. See also <a href="#simxSetVisionSensorImage2">simxSetVisionSensorImage2</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode]=simxSetVisionSensorImage(number clientID,number sensorHandle,libpointer image,number bufferSize,number options,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>sensorHandle</strong>: handle of the vision sensor</div>
<div><strong>image</strong>: the image data</div>
<div><strong>bufferSize</strong>: size of the image data</div>
<div><strong>options</strong>: image options, bit-coded:</div>
<div class=tab>bit0 set: each image pixel is a byte (greyscale image), otherwise each image pixel is a rgb byte-triplet</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxSetVisionSensorImage">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxSetVisionSensorImage">Python</a>, <a href="remoteApiFunctionsJava.htm#simxSetVisionSensorImage">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxSetVisionSensorImage">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxSetVisionSensorImage">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxSetVisionSensorImage2" id="simxSetVisionSensorImage2"></a>simxSetVisionSensorImage2 (regular API equivalent: <a href="regularApi/simSetVisionSensorImage.htm">sim.setVisionSensorImage</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Sets the image of a vision sensor (and applies any image processing filter if specified in the vision sensor dialog). The image is provided as an image array. Make sure the vision sensor is flagged as <strong>use external image</strong>. The <em>regular</em> use of this function is to first read the data from a vision sensor with <a href="#simxGetVisionSensorImage2">simxGetVisionSensorImage2</a>, do some custom filtering, then write the modified image to a passive vision sensor. The alternate use of this function is to display textures, video images, etc. by using a vision sensor object (without however making use of the vision sensor functionality), since a vision sensor can be <em>looked through</em> like camera objects. See also <a href="#simxSetVisionSensorImage">simxSetVisionSensorImage</a> which is much faster.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode]=simxSetVisionSensorImage2(number clientID,number sensorHandle,matrix image,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>sensorHandle</strong>: handle of the vision sensor</div>
<div><strong>image</strong>: the image data</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxSetVisionSensorImage">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxSetVisionSensorImage">Python</a>, <a href="remoteApiFunctionsJava.htm#simxSetVisionSensorImage">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxSetVisionSensorImage">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxSetVisionSensorImage">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxStart" id="simxStart"></a>simxStart</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Starts a communication thread with the server (i.e. V-REP). A same client may start several communication threads  (but only one communication thread for a given IP and port). This should be the very first remote API function called on the client side. Make sure to start an appropriate remote API server service on the server side, that will wait for a connection. See also <a href="#simxFinish">simxFinish</a>. This is a remote API helper function.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number clientID]=simxStart(string connectionAddress,number connectionPort,boolean waitUntilConnected,boolean doNotReconnectOnceDisconnected,number timeOutInMs,number commThreadCycleInMs)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>connectionAddress</strong>: the ip address where the server is located (i.e. V-REP)</div>
<div><strong>connectionPort</strong>: the port number where to connect. Specify a negative port number in order to use shared memory, instead of socket communication.</div>
<div><strong>waitUntilConnected</strong>: if true, then the function blocks until connected (or timed out).</div>
<div><strong>doNotReconnectOnceDisconnected</strong>: if true, then the communication thread will not attempt a second connection if a connection was lost.</div>
<div><strong>timeOutInMs</strong>:</div>
<div class=tab> if positive: the connection time-out in milliseconds for the first connection attempt. In that case, the time-out for blocking function calls is 5000 milliseconds.</div>
<div class=tab> if negative: its positive value is the time-out for blocking function calls. In that case, the connection time-out for the first connection attempt is 5000 milliseconds.</div>
<div><strong>commThreadCycleInMs</strong>: indicates how often data packets are sent back and forth. Reducing this number improves responsiveness, and a default value of 5 is recommended.</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>clientID</strong>: the client ID, or -1 if the connection to the server was not possible (i.e. a timeout was reached). A call to simxStart should always be followed at the end with a call to <a href="#simxFinish">simxFinish</a> if simxStart didn't return -1</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxStart">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxStart">Python</a>, <a href="remoteApiFunctionsJava.htm#simxStart">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxStart">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxStart">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxStartSimulation" id="simxStartSimulation"></a>simxStartSimulation (regular API equivalent: <a href="regularApi/simStartSimulation.htm">sim.startSimulation</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Requests a start of a simulation (or a resume of a paused simulation). This function is only executed by <a href="remoteApiServerSide.htm#continuousRemoteApiService">continuous remote API server services</a>. See also <a href="#simxPauseSimulation">simxPauseSimulation</a> and <a href="#simxStopSimulation">simxStopSimulation</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode]=simxStartSimulation(number clientID,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot.
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxStartSimulation">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxStartSimulation">Python</a>, <a href="remoteApiFunctionsJava.htm#simxStartSimulation">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxStartSimulation">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxStartSimulation">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxStopSimulation" id="simxStopSimulation"></a>simxStopSimulation (regular API equivalent: <a href="regularApi/simStopSimulation.htm">sim.stopSimulation</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Requests a stop of the running simulation. See also <a href="#simxStartSimulation">simxStartSimulation</a> and <a href="#simxPauseSimulation">simxPauseSimulation</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode]=simxStopSimulation(number clientID,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function is simx_opmode_oneshot.
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxStopSimulation">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxStopSimulation">Python</a>, <a href="remoteApiFunctionsJava.htm#simxStopSimulation">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxStopSimulation">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxStopSimulation">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxSynchronous" id="simxSynchronous"></a>simxSynchronous</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Enables or disables the synchronous operation mode for the remote API server service that the client is connected to. The function is blocking. While in synchronous operation mode, the client application is in charge of triggering the next simulation step. Only pre-enabled remote API server services will successfully execute this function. See also <a href="#simxSynchronousTrigger">simxSynchronousTrigger</a> and <a href="remoteApiModusOperandi.htm#synchronous">this section</a>. This is a remote API helper function.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode]=simxSynchronous(number clientID,boolean enable)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>enable</strong>: the enable state of the synchronous operation</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxSynchronous">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxSynchronous">Python</a>, <a href="remoteApiFunctionsJava.htm#simxSynchronous">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxSynchronous">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxSynchronous">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxSynchronousTrigger" id="simxSynchronousTrigger"></a>simxSynchronousTrigger</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Sends a synchronization  trigger signal to the server. The function is blocking. The server needs to be previously enabled for synchronous operation via the <a href="#simxSynchronous">simxSynchronous</a> function. The trigger signal will inform V-REP to execute the next simulation step (i.e. to call <a href="regularApi/simHandleMainScript.htm">simHandleMainScript</a>). While in synchronous operation mode, the client application is in charge of triggering the next simulation step, otherwise simulation will stall. See also <a href="remoteApiModusOperandi.htm#synchronous">this section</a>. This is a remote API helper function.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode]=simxSynchronousTrigger(number clientID)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxSynchronousTrigger">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxSynchronousTrigger">Python</a>, <a href="remoteApiFunctionsJava.htm#simxSynchronousTrigger">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxSynchronousTrigger">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxSynchronousTrigger">Lua</a></td> 
</tr> 
</table> 
<br>













<h3 class=subsectionBar><a name="simxTransferFile" id="simxTransferFile"></a>simxTransferFile</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Allows transferring a file from the client to the server. This function is used by several other functions internally (e.g. <a href="#simxLoadModel">simxLoadModel</a>). See also <a href="#simxEraseFile">simxEraseFile</a>. This is a remote API helper function.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode]=simxTransferFile(number clientID,string filePathAndName,string fileName_serverSide,number timeOut,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>filePathAndName</strong>: the local file name and path (i.e. on the client side)</div>
<div><strong>fileName_serverSide</strong>: a file name under which the transferred file will be saved on the server side. For now, do not specify a path (the file will be saved in the remote API plugin directory)</div>
<div><strong>timeOut</strong>: a timeout value in milliseconds</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_blocking
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxTransferFile">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxTransferFile">Python</a>, <a href="remoteApiFunctionsJava.htm#simxTransferFile">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxTransferFile">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxTransferFile">Lua</a></td> 
</tr> 
</table> 
<br>














<h3 class=subsectionBar><a name="simxUnpackFloats" id="simxUnpackFloats"></a>simxUnpackFloats</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Unpacks a string into an array of floats.  This is a remote API helper function. See also <a href="#simxPackFloats">simxPackFloats</a> and <a href="#simxUnpackInts">simxUnpackInts</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>Matlab synopsis </td> 
<td class=remApiTableRightCSyn>[array floatValues]=simxUnpackFloats(string packedData)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>packedData</strong>: a string that contains the packed values. Each values takes exactly 4 bytes in the string.</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values </td> 
<td class=remApiTableRightCRet>
<div><strong>floatValues</strong>: an array of numbers that were unpacked as floats</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsJava.htm#FloatWA">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxUnpackFloats">Octave</a>, <a href="remoteApiFunctionsPython.htm#simxUnpackFloats">Python</a>, <a href="remoteApiFunctionsLua.htm#simxUnpackFloats">Lua</a></td> 
</tr> 
</table> 
<br>





















<h3 class=subsectionBar><a name="simxUnpackInts" id="simxUnpackInts"></a>simxUnpackInts</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Unpacks a string into an array of integers.  This is a remote API helper function. See also <a href="#simxPackInts">simxPackInts</a> and <a href="#simxUnpackFloats">simxUnpackFloats</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis </td> 
<td class=remApiTableRightCSyn>[array intValues]=simxUnpackInts(string packedData)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>packedData</strong>: a string that contains the packed values. Each values takes exactly 4 bytes in the string.</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values </td> 
<td class=remApiTableRightCRet>
<div><strong>intValues</strong>: an array of numbers that were unpacked as integers</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsJava.htm#IntWA">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxUnpackInts">Octave</a>, <a href="remoteApiFunctionsPython.htm#simxUnpackInts">Python</a>, <a href="remoteApiFunctionsLua.htm#simxUnpackInts">Lua</a></td> 
</tr> 
</table> 
<br>















<h3 class=subsectionBar><a name="simxWriteStringStream" id="simxWriteStringStream"></a>simxWriteStringStream</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Appends a string to a string signal. If that signal is not yet present, it is added. To pack/unpack integers/floats into/from a string, refer to <a href="#simxPackInts">simxPackInts</a>, <a href="#simxPackFloats">simxPackFloats</a>, <a href="#simxUnpackInts">simxUnpackInts</a> and <a href="#simxUnpackFloats">simxUnpackFloats</a>. See also <a href="#simxReadStringStream">simxReadStringStream</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
Matlab synopsis
</td> 
<td class=remApiTableRightCSyn>[number returnCode]=simxWriteStringStream(number clientID,string signalName,string signalValueToAppend,number operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>Matlab parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>signalName</strong>: name of the signal</div>
<div><strong>signalValueToAppend</strong>: value to append to the  signal. That value may contain any value, including embedded zeros.</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
Matlab return values
</td> 
<td class=remApiTableRightCRet>
<div><strong>returnCode</strong>: a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctions.htm#simxWriteStringStream">C/C++</a>, <a href="remoteApiFunctionsPython.htm#simxWriteStringStream">Python</a>, <a href="remoteApiFunctionsJava.htm#simxWriteStringStream">Java</a>, <a href="remoteApiFunctionsOctave.htm#simxWriteStringStream">Octave</a>, <a href="remoteApiFunctionsLua.htm#simxWriteStringStream">Lua</a></td> 
</tr> 
</table> 
<br>






































<br>
<br>
</td>
</tr>
</table> 
</div>  
  
  
</body>

</html>
