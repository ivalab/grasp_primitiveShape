<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Strict//EN"><html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="Content-Language" content="en-us">
<title>B0-based remote API functions</title>
<link rel="stylesheet" type="text/css" href="../../helpFiles/style.css">
</head>
<body>
<div align="center"><table class="allEncompassingTable"><tr><td>
<h1>B0-based remote API, Matlab</h1>
<!--
<p class="infoBox">B0-based remote API functions.</p>
-->
    <h3 class="subsectionBar">
<a name="simxAddDrawingObject_cubes" id="simxAddDrawingObject_cubes"></a>simxAddDrawingObject_cubes</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Displays cubes in the scene</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxAddDrawingObject_cubes(number size, array color, array coords, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>size</strong>: The size of the cubes</div>
<div><strong>color</strong>: The RGB color of the cubes (0-255). Specify negative values for emissive color</div>
<div><strong>coords</strong>: The coordinates for the cubes to display (3 per cube)</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (number): The handle of the created drawing object</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="#simxRemoveDrawingObject">simxRemoveDrawingObject</a><br><a href="#simxAddDrawingObject_points">simxAddDrawingObject_points</a><br><a href="#simxAddDrawingObject_spheres">simxAddDrawingObject_spheres</a><br><a href="#simxAddDrawingObject_segments">simxAddDrawingObject_segments</a><br><a href="#simxAddDrawingObject_triangles">simxAddDrawingObject_triangles</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxAddDrawingObject_cubes">C++</a>, <a href="b0RemoteApi-python.htm#simxAddDrawingObject_cubes">Python</a>, <a href="b0RemoteApi-java.htm#simxAddDrawingObject_cubes">Java</a>, <a href="b0RemoteApi-lua.htm#simxAddDrawingObject_cubes">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxAddDrawingObject_points" id="simxAddDrawingObject_points"></a>simxAddDrawingObject_points</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Displays points in the scene</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxAddDrawingObject_points(number size, array color, array coords, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>size</strong>: The pixel size of the points</div>
<div><strong>color</strong>: The RGB color of the points (0-255). Specify negative values for emissive color</div>
<div><strong>coords</strong>: The coordinates for the points to display (3 per point)</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (number): The handle of the created drawing object</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="#simxRemoveDrawingObject">simxRemoveDrawingObject</a><br><a href="#simxAddDrawingObject_spheres">simxAddDrawingObject_spheres</a><br><a href="#simxAddDrawingObject_cubes">simxAddDrawingObject_cubes</a><br><a href="#simxAddDrawingObject_segments">simxAddDrawingObject_segments</a><br><a href="#simxAddDrawingObject_triangles">simxAddDrawingObject_triangles</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxAddDrawingObject_points">C++</a>, <a href="b0RemoteApi-python.htm#simxAddDrawingObject_points">Python</a>, <a href="b0RemoteApi-java.htm#simxAddDrawingObject_points">Java</a>, <a href="b0RemoteApi-lua.htm#simxAddDrawingObject_points">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxAddDrawingObject_segments" id="simxAddDrawingObject_segments"></a>simxAddDrawingObject_segments</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Displays line segments in the scene</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxAddDrawingObject_segments(number lineSize, array color, array segments, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>lineSize</strong>: The size of the segments, in pixels</div>
<div><strong>color</strong>: The RGB color of the cubes (0-255). Specify negative values for emissive color</div>
<div><strong>segments</strong>: The coordinates for the segments to display (6 per segment)</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (number): The handle of the created drawing object</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="#simxRemoveDrawingObject">simxRemoveDrawingObject</a><br><a href="#simxAddDrawingObject_points">simxAddDrawingObject_points</a><br><a href="#simxAddDrawingObject_spheres">simxAddDrawingObject_spheres</a><br><a href="#simxAddDrawingObject_cubes">simxAddDrawingObject_cubes</a><br><a href="#simxAddDrawingObject_triangles">simxAddDrawingObject_triangles</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxAddDrawingObject_segments">C++</a>, <a href="b0RemoteApi-python.htm#simxAddDrawingObject_segments">Python</a>, <a href="b0RemoteApi-java.htm#simxAddDrawingObject_segments">Java</a>, <a href="b0RemoteApi-lua.htm#simxAddDrawingObject_segments">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxAddDrawingObject_spheres" id="simxAddDrawingObject_spheres"></a>simxAddDrawingObject_spheres</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Displays spheres in the scene</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxAddDrawingObject_spheres(number size, array color, array coords, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>size</strong>: The size of the spheres</div>
<div><strong>color</strong>: The RGB color of the spheres (0-255). Specify negative values for emissive color</div>
<div><strong>coords</strong>: The coordinates for the spheres to display (3 per sphere)</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (number): The handle of the created drawing object</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="#simxRemoveDrawingObject">simxRemoveDrawingObject</a><br><a href="#simxCreateDummy">simxCreateDummy</a><br><a href="#simxAddDrawingObject_points">simxAddDrawingObject_points</a><br><a href="#simxAddDrawingObject_cubes">simxAddDrawingObject_cubes</a><br><a href="#simxAddDrawingObject_segments">simxAddDrawingObject_segments</a><br><a href="#simxAddDrawingObject_triangles">simxAddDrawingObject_triangles</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxAddDrawingObject_spheres">C++</a>, <a href="b0RemoteApi-python.htm#simxAddDrawingObject_spheres">Python</a>, <a href="b0RemoteApi-java.htm#simxAddDrawingObject_spheres">Java</a>, <a href="b0RemoteApi-lua.htm#simxAddDrawingObject_spheres">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxAddDrawingObject_triangles" id="simxAddDrawingObject_triangles"></a>simxAddDrawingObject_triangles</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Displays triangles in the scene</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxAddDrawingObject_triangles(array color, array triangles, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>color</strong>: The RGB color of the triangles (0-255). Specify negative values for emissive color</div>
<div><strong>triangles</strong>: The coordinates for the triangles to display (9 per triangle)</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (number): The handle of the created drawing object</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="#simxRemoveDrawingObject">simxRemoveDrawingObject</a><br><a href="#simxAddDrawingObject_points">simxAddDrawingObject_points</a><br><a href="#simxAddDrawingObject_spheres">simxAddDrawingObject_spheres</a><br><a href="#simxAddDrawingObject_cubes">simxAddDrawingObject_cubes</a><br><a href="#simxAddDrawingObject_segments">simxAddDrawingObject_segments</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxAddDrawingObject_triangles">C++</a>, <a href="b0RemoteApi-python.htm#simxAddDrawingObject_triangles">Python</a>, <a href="b0RemoteApi-java.htm#simxAddDrawingObject_triangles">Java</a>, <a href="b0RemoteApi-lua.htm#simxAddDrawingObject_triangles">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxAddStatusbarMessage" id="simxAddStatusbarMessage"></a>simxAddStatusbarMessage</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Adds a message to the status bar</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxAddStatusbarMessage(string msg, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>msg</strong>: The message to display</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simAddStatusbarMessage.htm">sim.addStatusbarMessage</a> (regular API)</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxAddStatusbarMessage">C++</a>, <a href="b0RemoteApi-python.htm#simxAddStatusbarMessage">Python</a>, <a href="b0RemoteApi-java.htm#simxAddStatusbarMessage">Java</a>, <a href="b0RemoteApi-lua.htm#simxAddStatusbarMessage">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxAuxiliaryConsoleClose" id="simxAuxiliaryConsoleClose"></a>simxAuxiliaryConsoleClose</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Closes an auxiliary console window</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxAuxiliaryConsoleClose(number consoleHandle, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>consoleHandle</strong>: The handle of the console window</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (number): 0 if the console doesn't exist (anymore), 1 if the console window was closed</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simAuxiliaryConsoleClose.htm">sim.auxiliaryConsoleClose</a> (regular API)<br><a href="#simxAuxiliaryConsoleOpen">simxAuxiliaryConsoleOpen</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxAuxiliaryConsoleClose">C++</a>, <a href="b0RemoteApi-python.htm#simxAuxiliaryConsoleClose">Python</a>, <a href="b0RemoteApi-java.htm#simxAuxiliaryConsoleClose">Java</a>, <a href="b0RemoteApi-lua.htm#simxAuxiliaryConsoleClose">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxAuxiliaryConsoleOpen" id="simxAuxiliaryConsoleOpen"></a>simxAuxiliaryConsoleOpen</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Opens an auxiliary console window for text display</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxAuxiliaryConsoleOpen(string title, number maxLines, number mode, array position, array size, array textColor, array backgroundColor, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>title</strong>: The title of the console window</div>
<div><strong>maxLines</strong>: The number of text lines that can be displayed and buffered</div>
<div><strong>mode</strong>: bit-coded value. Bit0 set indicates that the console window will automatically close at simulation end, bit1 set indicates that lines will be wrapped, bit2 set indicates that the user can close the console window, bit3 set indicates that the console will automatically be hidden during simulation pause, bit4 set indicates that the console will not automatically hide when the user switches to another scene</div>
<div><strong>position</strong>: The initial position of the console window (x and y value)</div>
<div><strong>size</strong>: The initial size of the console window (x and y value)</div>
<div><strong>textColor</strong>: The color of the text (rgb values, 0-255)</div>
<div><strong>backgroundColor</strong>: The background color of the window (rgb values, 0-255)</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (number): The handle of the created console window</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simAuxiliaryConsoleOpen.htm">sim.auxiliaryConsoleOpen</a> (regular API)<br><a href="#simxAuxiliaryConsolePrint">simxAuxiliaryConsolePrint</a><br><a href="#simxAuxiliaryConsoleShow">simxAuxiliaryConsoleShow</a><br><a href="#simxAuxiliaryConsoleClose">simxAuxiliaryConsoleClose</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxAuxiliaryConsoleOpen">C++</a>, <a href="b0RemoteApi-python.htm#simxAuxiliaryConsoleOpen">Python</a>, <a href="b0RemoteApi-java.htm#simxAuxiliaryConsoleOpen">Java</a>, <a href="b0RemoteApi-lua.htm#simxAuxiliaryConsoleOpen">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxAuxiliaryConsolePrint" id="simxAuxiliaryConsolePrint"></a>simxAuxiliaryConsolePrint</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Prints to an auxiliary console window</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxAuxiliaryConsolePrint(number consoleHandle, string text, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>consoleHandle</strong>: The handle of the console window</div>
<div><strong>text</strong>: The text to append, or the empty string to clear the console window</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (number): 0 if the console doesn't exist (anymore), 1 if the operation was successful</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simAuxiliaryConsolePrint.htm">sim.auxiliaryConsolePrint</a> (regular API)<br><a href="#simxAuxiliaryConsoleOpen">simxAuxiliaryConsoleOpen</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxAuxiliaryConsolePrint">C++</a>, <a href="b0RemoteApi-python.htm#simxAuxiliaryConsolePrint">Python</a>, <a href="b0RemoteApi-java.htm#simxAuxiliaryConsolePrint">Java</a>, <a href="b0RemoteApi-lua.htm#simxAuxiliaryConsolePrint">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxAuxiliaryConsoleShow" id="simxAuxiliaryConsoleShow"></a>simxAuxiliaryConsoleShow</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Shows or hides an auxiliary console window</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxAuxiliaryConsoleShow(number consoleHandle, bool showState, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>consoleHandle</strong>: The handle of the console window</div>
<div><strong>showState</strong>: The show state of the console window</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (number): 0 if the console doesn't exist (anymore), 1 if the console window's show state was changed</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simAuxiliaryConsoleShow.htm">sim.auxiliaryConsoleShow</a> (regular API)<br><a href="#simxAuxiliaryConsoleOpen">simxAuxiliaryConsoleOpen</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxAuxiliaryConsoleShow">C++</a>, <a href="b0RemoteApi-python.htm#simxAuxiliaryConsoleShow">Python</a>, <a href="b0RemoteApi-java.htm#simxAuxiliaryConsoleShow">Java</a>, <a href="b0RemoteApi-lua.htm#simxAuxiliaryConsoleShow">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxBreakForceSensor" id="simxBreakForceSensor"></a>simxBreakForceSensor</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Allows breaking a force sensor during simulation. A broken force sensor will lose its positional and orientational constraints</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxBreakForceSensor(number handle, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>handle</strong>: The handle of the force sensor</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simBreakForceSensor.htm">sim.breakForceSensor</a> (regular API)<br><a href="#simxReadForceSensor">simxReadForceSensor</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxBreakForceSensor">C++</a>, <a href="b0RemoteApi-python.htm#simxBreakForceSensor">Python</a>, <a href="b0RemoteApi-java.htm#simxBreakForceSensor">Java</a>, <a href="b0RemoteApi-lua.htm#simxBreakForceSensor">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxCallScriptFunction" id="simxCallScriptFunction"></a>simxCallScriptFunction</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Calls a script function inside of V-REP (i.e. server side)</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxCallScriptFunction(string funcAtObjName, number/string scriptType, anyType funcArgs, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>funcAtObjName</strong>: A string representing the function name and script name, e.g. myFunctionName@theScriptName. When the script is not associated with an object, then just specify the function name</div>
<div><strong>scriptType</strong>: The <a href="apiConstants.htm#scriptTypes">type of the script</a> (specified as number or string). E.g. <i>"sim.scripttype_mainscript"</i> is a valid string argument that will be evaluated on the server side. See also <a href="#simxEvaluateToInt">simxEvaluateToInt</a></div>
<div><strong>funcArgs</strong>: The function argument(s). Group several arguments inside of an array</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (?): The first return value of the called function</div>
<div><strong>item3</strong> (?): The second return value of the called function</div>
<div><strong>item4</strong> (?): etc.</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simCallScriptFunction.htm">sim.callScriptFunction</a> (regular API)</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxCallScriptFunction">C++</a>, <a href="b0RemoteApi-python.htm#simxCallScriptFunction">Python</a>, <a href="b0RemoteApi-java.htm#simxCallScriptFunction">Java</a>, <a href="b0RemoteApi-lua.htm#simxCallScriptFunction">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxCheckCollision" id="simxCheckCollision"></a>simxCheckCollision</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Checks whether two <a href="collidableObjects.htm">collidable</a> <a href="entities.htm">entities</a> are colliding</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxCheckCollision(number entity1, number/string entity2, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>entity1</strong>: The handle of the first entity</div>
<div><strong>entity2</strong>: The handle of the second entity. Can also be the <i>"sim.handle_all"</i> string, to check entity1 against all other collidable objects. See also <a href="#simxEvaluateToInt">simxEvaluateToInt</a></div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (bool): The collision state of the object</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simCheckCollision.htm">sim.checkCollision</a> (regular API)<br><a href="#simxReadCollision">simxReadCollision</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxCheckCollision">C++</a>, <a href="b0RemoteApi-python.htm#simxCheckCollision">Python</a>, <a href="b0RemoteApi-java.htm#simxCheckCollision">Java</a>, <a href="b0RemoteApi-lua.htm#simxCheckCollision">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxCheckDistance" id="simxCheckDistance"></a>simxCheckDistance</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Computes the minimum distance between two <a href="measurableObjects.htm">measurable</a> <a href="entities.htm">entities</a></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxCheckDistance(number entity1, number/string entity2, number threshold, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>entity1</strong>: The handle of the first entity</div>
<div><strong>entity2</strong>: The handle of the second entity. Can also be the <i>"sim.handle_all"</i> string, to check entity1 against all other measurable objects. See also <a href="#simxEvaluateToInt">simxEvaluateToInt</a></div>
<div><strong>threshold</strong>: If distance is bigger than the threshold, the distance is not calculated. If threshold is 0 or negative, then no threshold is used</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (number): 0 is distance is larger than the threshold, 1 otherwise</div>
<div><strong>item3</strong> (number): The minimum distance</div>
<div><strong>item4</strong> (array): The first point of the minimum distance segment</div>
<div><strong>item5</strong> (array): The second point of the minimum distance segment</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simCheckDistance.htm">sim.checkDistance</a> (regular API)<br><a href="#simxReadDistance">simxReadDistance</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxCheckDistance">C++</a>, <a href="b0RemoteApi-python.htm#simxCheckDistance">Python</a>, <a href="b0RemoteApi-java.htm#simxCheckDistance">Java</a>, <a href="b0RemoteApi-lua.htm#simxCheckDistance">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxCheckProximitySensor" id="simxCheckProximitySensor"></a>simxCheckProximitySensor</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Computes the detection state of a proximity sensor, for a specific <a href="detectableObjects.htm">detectable</a> <a href="entities.htm">entity</a></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxCheckProximitySensor(number handle, number/string entity, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>handle</strong>: The handle of the proximity sensor</div>
<div><strong>entity</strong>: The handle of the entity to detect. Can also be the <i>"sim.handle_all"</i> string, to check all detectable entities. See also <a href="#simxEvaluateToInt">simxEvaluateToInt</a></div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (number): detection state (0 or 1)</div>
<div><strong>item3</strong> (number): The distance to the detected point</div>
<div><strong>item4</strong> (array): The detected point relative to the sensor frame</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simCheckProximitySensor.htm">sim.checkProximitySensor</a> (regular API)<br><a href="#simxReadProximitySensor">simxReadProximitySensor</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxCheckProximitySensor">C++</a>, <a href="b0RemoteApi-python.htm#simxCheckProximitySensor">Python</a>, <a href="b0RemoteApi-java.htm#simxCheckProximitySensor">Java</a>, <a href="b0RemoteApi-lua.htm#simxCheckProximitySensor">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxCheckVisionSensor" id="simxCheckVisionSensor"></a>simxCheckVisionSensor</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Computes the detection state of a vision sensor, for a specific <a href="renderableObjects.htm">renderable</a> <a href="entities.htm">entity</a></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxCheckVisionSensor(number handle, number/string entity, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>handle</strong>: The handle of the vision sensor</div>
<div><strong>entity</strong>: The handle of the entity to detect. Can also be the <i>"sim.handle_all"</i> string, to check all renderable entities. See also <a href="#simxEvaluateToInt">simxEvaluateToInt</a></div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (number): detection state (0 or 1)</div>
<div><strong>item3</strong> (number): The distance to the detected point</div>
<div><strong>item4</strong> (array): The detected point relative to the sensor frame</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simCheckVisionSensor.htm">sim.checkVisionSensor</a> (regular API)<br><a href="#simxReadVisionSensor">simxReadVisionSensor</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxCheckVisionSensor">C++</a>, <a href="b0RemoteApi-python.htm#simxCheckVisionSensor">Python</a>, <a href="b0RemoteApi-java.htm#simxCheckVisionSensor">Java</a>, <a href="b0RemoteApi-lua.htm#simxCheckVisionSensor">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxClearFloatSignal" id="simxClearFloatSignal"></a>simxClearFloatSignal</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Clears a float <a href="meansOfCommunication.htm#signals">signal</a> (removes it)</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxClearFloatSignal(string sigName, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>sigName</strong>: The name of the signal</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simClearDoubleSignal.htm">sim.clearDoubleSignal</a> (regular API)<br><a href="#simxSetFloatSignal">simxSetFloatSignal</a><br><a href="#simxClearIntegerSignal">simxClearIntegerSignal</a><br><a href="#simxClearStringSignal">simxClearStringSignal</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxClearFloatSignal">C++</a>, <a href="b0RemoteApi-python.htm#simxClearFloatSignal">Python</a>, <a href="b0RemoteApi-java.htm#simxClearFloatSignal">Java</a>, <a href="b0RemoteApi-lua.htm#simxClearFloatSignal">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxClearIntegerSignal" id="simxClearIntegerSignal"></a>simxClearIntegerSignal</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Clears an int <a href="meansOfCommunication.htm#signals">signal</a> (removes it)</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxClearIntegerSignal(string sigName, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>sigName</strong>: The name of the signal</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simClearIntegerSignal.htm">sim.clearIntegerSignal</a> (regular API)<br><a href="#simxSetIntSignal">simxSetIntSignal</a><br><a href="#simxClearFloatSignal">simxClearFloatSignal</a><br><a href="#simxClearStringSignal">simxClearStringSignal</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxClearIntegerSignal">C++</a>, <a href="b0RemoteApi-python.htm#simxClearIntegerSignal">Python</a>, <a href="b0RemoteApi-java.htm#simxClearIntegerSignal">Java</a>, <a href="b0RemoteApi-lua.htm#simxClearIntegerSignal">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxClearStringSignal" id="simxClearStringSignal"></a>simxClearStringSignal</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Clears a string <a href="meansOfCommunication.htm#signals">signal</a> (removes it)</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxClearStringSignal(string sigName, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>sigName</strong>: The name of the signal</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simClearStringSignal.htm">sim.clearStringSignal</a> (regular API)<br><a href="#simxSetStringSignal">simxSetStringSignal</a><br><a href="#simxClearIntegerSignal">simxClearIntegerSignal</a><br><a href="#simxClearFloatSignal">simxClearFloatSignal</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxClearStringSignal">C++</a>, <a href="b0RemoteApi-python.htm#simxClearStringSignal">Python</a>, <a href="b0RemoteApi-java.htm#simxClearStringSignal">Java</a>, <a href="b0RemoteApi-lua.htm#simxClearStringSignal">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxCloseScene" id="simxCloseScene"></a>simxCloseScene</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Closes current scene, and switches to another open scene</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxCloseScene(string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simCloseScene.htm">sim.closeScene</a> (regular API)</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxCloseScene">C++</a>, <a href="b0RemoteApi-python.htm#simxCloseScene">Python</a>, <a href="b0RemoteApi-java.htm#simxCloseScene">Java</a>, <a href="b0RemoteApi-lua.htm#simxCloseScene">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxCopyPasteObjects" id="simxCopyPasteObjects"></a>simxCopyPasteObjects</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Duplicates objects</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxCopyPasteObjects(array objectHandles, number options, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>objectHandles</strong>: The handles of the objects to copy and paste</div>
<div><strong>options</strong>: Bit-coded. If bit0 is set (i.e. 1), then whole models will be copied</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (array): handles of the duplicates</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simCopyPasteObjects.htm">sim.copyPasteObjects</a> (regular API)<br><a href="#simxRemoveObjects">simxRemoveObjects</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxCopyPasteObjects">C++</a>, <a href="b0RemoteApi-python.htm#simxCopyPasteObjects">Python</a>, <a href="b0RemoteApi-java.htm#simxCopyPasteObjects">Java</a>, <a href="b0RemoteApi-lua.htm#simxCopyPasteObjects">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxCreateDummy" id="simxCreateDummy"></a>simxCreateDummy</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Creates a <a href="dummies.htm">dummy object</a> in the scene</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxCreateDummy(number size, array color, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>size</strong>: The size of the dummy</div>
<div><strong>color</strong>: The RGB color of the dummy (0-255). Specify negative values for emissive color</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (number): The handle of the created dummy</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simCreateDummy.htm">sim.createDummy</a> (regular API)<br><a href="#simxAddDrawingObject_spheres">simxAddDrawingObject_spheres</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxCreateDummy">C++</a>, <a href="b0RemoteApi-python.htm#simxCreateDummy">Python</a>, <a href="b0RemoteApi-java.htm#simxCreateDummy">Java</a>, <a href="b0RemoteApi-lua.htm#simxCreateDummy">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxCreatePublisher" id="simxCreatePublisher"></a>simxCreatePublisher</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Creates a custom publisher topic, and returns it</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">string simxCreatePublisher(bool dropMessages = false)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>dropMessages</strong>: Whether some messages will be dropped if a queue is forming. In that case, the freshest messages will be retained</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>The topic of the created publisher</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="#simxServiceCall">simxServiceCall</a><br><a href="#simxDefaultPublisher">simxDefaultPublisher</a><br><a href="#simxDefaultSubscriber">simxDefaultSubscriber</a><br><a href="#simxCreateSubscriber">simxCreateSubscriber</a><br><a href="#simxRemovePublisher">simxRemovePublisher</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxCreatePublisher">C++</a>, <a href="b0RemoteApi-python.htm#simxCreatePublisher">Python</a>, <a href="b0RemoteApi-java.htm#simxCreatePublisher">Java</a>, <a href="b0RemoteApi-lua.htm#simxCreatePublisher">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxCreateSubscriber" id="simxCreateSubscriber"></a>simxCreateSubscriber</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Creates a custom subscriber topic, and returns it</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">string simxCreateSubscriber(callback callBackFunc, number publishInterval = 1, bool dropMessages = false)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>callBackFunc</strong>: The callback function for the subscriber</div>
<div><strong>publishInterval</strong>: The rate (in terms of simulation loops) at which the server (i.e. V-REP) should publish the message</div>
<div><strong>dropMessages</strong>: Whether some messages will be dropped if a queue is forming. In that case, the freshest message will be retained</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>The default subscriber topic</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="#simxServiceCall">simxServiceCall</a><br><a href="#simxDefaultPublisher">simxDefaultPublisher</a><br><a href="#simxDefaultSubscriber">simxDefaultSubscriber</a><br><a href="#simxCreatePublisher">simxCreatePublisher</a><br><a href="#simxRemoveSubscriber">simxRemoveSubscriber</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxCreateSubscriber">C++</a>, <a href="b0RemoteApi-python.htm#simxCreateSubscriber">Python</a>, <a href="b0RemoteApi-java.htm#simxCreateSubscriber">Java</a>, <a href="b0RemoteApi-lua.htm#simxCreateSubscriber">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxDefaultPublisher" id="simxDefaultPublisher"></a>simxDefaultPublisher</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Returns the topic for the default publisher</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">string simxDefaultPublisher()<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>The default publisher topic</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="#simxServiceCall">simxServiceCall</a><br><a href="#simxDefaultSubscriber">simxDefaultSubscriber</a><br><a href="#simxCreatePublisher">simxCreatePublisher</a><br><a href="#simxCreateSubscriber">simxCreateSubscriber</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxDefaultPublisher">C++</a>, <a href="b0RemoteApi-python.htm#simxDefaultPublisher">Python</a>, <a href="b0RemoteApi-java.htm#simxDefaultPublisher">Java</a>, <a href="b0RemoteApi-lua.htm#simxDefaultPublisher">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxDefaultSubscriber" id="simxDefaultSubscriber"></a>simxDefaultSubscriber</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Returns the topic for the default subscriber</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">string simxDefaultSubscriber(callback callBackFunc, number publishInterval = 1)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>callBackFunc</strong>: The callback function for the subscriber</div>
<div><strong>publishInterval</strong>: The rate (in terms of simulation loops) at which the server (i.e. V-REP) should publish the message</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>The default subscriber topic</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="#simxServiceCall">simxServiceCall</a><br><a href="#simxDefaultPublisher">simxDefaultPublisher</a><br><a href="#simxCreatePublisher">simxCreatePublisher</a><br><a href="#simxCreateSubscriber">simxCreateSubscriber</a><br><a href="#simxRemoveSubscriber">simxRemoveSubscriber</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxDefaultSubscriber">C++</a>, <a href="b0RemoteApi-python.htm#simxDefaultSubscriber">Python</a>, <a href="b0RemoteApi-java.htm#simxDefaultSubscriber">Java</a>, <a href="b0RemoteApi-lua.htm#simxDefaultSubscriber">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxDisplayDialog" id="simxDisplayDialog"></a>simxDisplayDialog</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Displays a generic dialog box</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxDisplayDialog(string titleText, string mainText, number/string dialogType, string inputText, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>titleText</strong>: The title bar text</div>
<div><strong>mainText</strong>: The information text</div>
<div><strong>dialogType</strong>: The <a href="apiConstants.htm#genericDialogStyles">generic dialog style</a>. Can also be a string value, e.g. <i>"sim.dlgstyle_message"</i>. See also <a href="#simxEvaluateToInt">simxEvaluateToInt</a></div>
<div><strong>inputText</strong>: The initial text in the edit box if the dialog is an input dialog</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (number): The handle of the dialog</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simDisplayDialog.htm">sim.displayDialog</a> (regular API)<br><a href="#simxGetDialogResult">simxGetDialogResult</a><br><a href="#simxGetDialogInput">simxGetDialogInput</a><br><a href="#simxEndDialog">simxEndDialog</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxDisplayDialog">C++</a>, <a href="b0RemoteApi-python.htm#simxDisplayDialog">Python</a>, <a href="b0RemoteApi-java.htm#simxDisplayDialog">Java</a>, <a href="b0RemoteApi-lua.htm#simxDisplayDialog">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxEndDialog" id="simxEndDialog"></a>simxEndDialog</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Closes and releases resource from a previous call to <a href="#simxDisplayDialog">simxDisplayDialog</a>. Even if the dialog is not visible anymore, you should release resources by using this function</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxEndDialog(number handle, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>handle</strong>: The handle of the generic dialog</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simEndDialog.htm">sim.endDialog</a> (regular API)<br><a href="#simxDisplayDialog">simxDisplayDialog</a><br><a href="#simxGetDialogInput">simxGetDialogInput</a><br><a href="#simxGetDialogResult">simxGetDialogResult</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxEndDialog">C++</a>, <a href="b0RemoteApi-python.htm#simxEndDialog">Python</a>, <a href="b0RemoteApi-java.htm#simxEndDialog">Java</a>, <a href="b0RemoteApi-lua.htm#simxEndDialog">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxEvaluateToInt" id="simxEvaluateToInt"></a>simxEvaluateToInt</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Evaluates a Lua expression to an integer, on the server side, e.g. <i>sim.object_proximitysensor_type</i> would evaluate to <i>5</i>, <i>25+42</i> would evaluate to <i>67</i></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxEvaluateToInt(string str, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>str</strong>: The Lua expression to evaluate</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (number): the integer value of the evaluated Lua expression</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="#simxEvaluateToStr">simxEvaluateToStr</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxEvaluateToInt">C++</a>, <a href="b0RemoteApi-python.htm#simxEvaluateToInt">Python</a>, <a href="b0RemoteApi-java.htm#simxEvaluateToInt">Java</a>, <a href="b0RemoteApi-lua.htm#simxEvaluateToInt">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxEvaluateToStr" id="simxEvaluateToStr"></a>simxEvaluateToStr</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Evaluates a Lua expression to a string, on the server side, e.g. <i>string.gsub("Hello World", "World", "Paul") </i> would evaluate to <i>Hello Paul</i></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxEvaluateToStr(string str, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>str</strong>: The Lua expression to evaluate</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (string): the string value of the evaluated Lua expression</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="#simxEvaluateToInt">simxEvaluateToInt</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxEvaluateToStr">C++</a>, <a href="b0RemoteApi-python.htm#simxEvaluateToStr">Python</a>, <a href="b0RemoteApi-java.htm#simxEvaluateToStr">Java</a>, <a href="b0RemoteApi-lua.htm#simxEvaluateToStr">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxExecuteScriptString" id="simxExecuteScriptString"></a>simxExecuteScriptString</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Executes a Lua string (i.e. runs the code)</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxExecuteScriptString(string code, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>code</strong>: The string to execute</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (?): The first return value of the executed string</div>
<div><strong>item3</strong> (?): The second return value of the executed string</div>
<div><strong>item4</strong> (?): etc.</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="#simxCallScriptFunction">simxCallScriptFunction</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxExecuteScriptString">C++</a>, <a href="b0RemoteApi-python.htm#simxExecuteScriptString">Python</a>, <a href="b0RemoteApi-java.htm#simxExecuteScriptString">Java</a>, <a href="b0RemoteApi-lua.htm#simxExecuteScriptString">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxGetArrayParameter" id="simxGetArrayParameter"></a>simxGetArrayParameter</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Retrieves a <a href="apiConstants.htm#arrayParameters">array parameter</a></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxGetArrayParameter(number/string paramId, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>paramId</strong>: The parameter identifier. Can also be a string value, e.g. <i>"sim.arrayparam_gravity"</i>. See also <a href="#simxEvaluateToInt">simxEvaluateToInt</a></div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (array): The value of the parameter</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simGetArrayParameter.htm">sim.getArrayParameter</a> (regular API)<br><a href="#simxSetArrayParameter">simxSetArrayParameter</a><br><a href="#simxGetBoolParameter">simxGetBoolParameter</a><br><a href="#simxGetIntParameter">simxGetIntParameter</a><br><a href="#simxGetFloatParameter">simxGetFloatParameter</a><br><a href="#simxGetStringParameter">simxGetStringParameter</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxGetArrayParameter">C++</a>, <a href="b0RemoteApi-python.htm#simxGetArrayParameter">Python</a>, <a href="b0RemoteApi-java.htm#simxGetArrayParameter">Java</a>, <a href="b0RemoteApi-lua.htm#simxGetArrayParameter">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxGetBoolParameter" id="simxGetBoolParameter"></a>simxGetBoolParameter</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Retrieves a <a href="apiConstants.htm#booleanParameters">boolean parameter</a></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxGetBoolParameter(number/string paramId, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>paramId</strong>: The parameter identifier. Can also be a string value, e.g. <i>"sim.boolparam_proximity_sensor_handling_enabled"</i>. See also <a href="#simxEvaluateToInt">simxEvaluateToInt</a></div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (bool): The value of the parameter</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simGetBoolParameter.htm">sim.getBoolParameter</a> (regular API)<br><a href="#simxSetBoolParameter">simxSetBoolParameter</a><br><a href="#simxGetIntParameter">simxGetIntParameter</a><br><a href="#simxGetFloatParameter">simxGetFloatParameter</a><br><a href="#simxGetArrayParameter">simxGetArrayParameter</a><br><a href="#simxGetStringParameter">simxGetStringParameter</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxGetBoolParameter">C++</a>, <a href="b0RemoteApi-python.htm#simxGetBoolParameter">Python</a>, <a href="b0RemoteApi-java.htm#simxGetBoolParameter">Java</a>, <a href="b0RemoteApi-lua.htm#simxGetBoolParameter">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxGetCollectionHandle" id="simxGetCollectionHandle"></a>simxGetCollectionHandle</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Retrieves the handle of a collection</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxGetCollectionHandle(string collectionName, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>collectionName</strong>: Name of the collection. If the name is appended by a "@silentError" suffix, then no error will be output if the collection does not exist</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (number): The handle of the collection</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simGetCollectionHandle.htm">sim.getCollectionHandle</a> (regular API)</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxGetCollectionHandle">C++</a>, <a href="b0RemoteApi-python.htm#simxGetCollectionHandle">Python</a>, <a href="b0RemoteApi-java.htm#simxGetCollectionHandle">Java</a>, <a href="b0RemoteApi-lua.htm#simxGetCollectionHandle">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxGetCollisionHandle" id="simxGetCollisionHandle"></a>simxGetCollisionHandle</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Retrieves the handle of a <a href="collisionDetection.htm">collision object</a></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxGetCollisionHandle(string nameOfObject, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>nameOfObject</strong>: The name of the collision object. If the name is appended by a "@silentError" suffix, then no error will be output if the collision object does not exist</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (number): The handle of the collision object</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simGetCollisionHandle.htm">sim.getCollisionHandle</a> (regular API)<br><a href="#simxReadCollision">simxReadCollision</a><br><a href="#simxCheckCollision">simxCheckCollision</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxGetCollisionHandle">C++</a>, <a href="b0RemoteApi-python.htm#simxGetCollisionHandle">Python</a>, <a href="b0RemoteApi-java.htm#simxGetCollisionHandle">Java</a>, <a href="b0RemoteApi-lua.htm#simxGetCollisionHandle">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxGetDialogInput" id="simxGetDialogInput"></a>simxGetDialogInput</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Queries the input of a generic dialog box</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxGetDialogInput(number handle, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>handle</strong>: The handle of the generic dialog</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (string): The input text</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simGetDialogInput.htm">sim.getDialogInput</a> (regular API)<br><a href="#simxDisplayDialog">simxDisplayDialog</a><br><a href="#simxGetDialogResult">simxGetDialogResult</a><br><a href="#simxEndDialog">simxEndDialog</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxGetDialogInput">C++</a>, <a href="b0RemoteApi-python.htm#simxGetDialogInput">Python</a>, <a href="b0RemoteApi-java.htm#simxGetDialogInput">Java</a>, <a href="b0RemoteApi-lua.htm#simxGetDialogInput">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxGetDialogResult" id="simxGetDialogResult"></a>simxGetDialogResult</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Queries the result of a generic dialog box</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxGetDialogResult(number handle, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>handle</strong>: The handle of the generic dialog</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (string): The <a href="apiConstants.htm#genericDialogReturnValues">result of the dialog</a>, as a string</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simGetDialogResult.htm">sim.getDialogResult</a> (regular API)<br><a href="#simxDisplayDialog">simxDisplayDialog</a><br><a href="#simxGetDialogInput">simxGetDialogInput</a><br><a href="#simxEndDialog">simxEndDialog</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxGetDialogResult">C++</a>, <a href="b0RemoteApi-python.htm#simxGetDialogResult">Python</a>, <a href="b0RemoteApi-java.htm#simxGetDialogResult">Java</a>, <a href="b0RemoteApi-lua.htm#simxGetDialogResult">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxGetDistanceHandle" id="simxGetDistanceHandle"></a>simxGetDistanceHandle</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Retrieves the handle of a <a href="distanceCalculation.htm">distance calculation object</a></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxGetDistanceHandle(string nameOfObject, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>nameOfObject</strong>: The name of the distance calculation object. If the name is appended by a "@silentError" suffix, then no error will be output if the distance object does not exist</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (number): The handle of the distance calculation object</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simGetDistanceHandle.htm">sim.getDistanceHandle</a> (regular API)<br><a href="#simxReadDistance">simxReadDistance</a><br><a href="#simxCheckDistance">simxCheckDistance</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxGetDistanceHandle">C++</a>, <a href="b0RemoteApi-python.htm#simxGetDistanceHandle">Python</a>, <a href="b0RemoteApi-java.htm#simxGetDistanceHandle">Java</a>, <a href="b0RemoteApi-lua.htm#simxGetDistanceHandle">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxGetFloatParameter" id="simxGetFloatParameter"></a>simxGetFloatParameter</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Retrieves a <a href="apiConstants.htm#floatingParameters">float parameter</a></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxGetFloatParameter(number/string paramId, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>paramId</strong>: The parameter identifier. Can also be a string value, e.g. <i>"sim.floatparam_simulation_time_step"</i>. See also <a href="#simxEvaluateToInt">simxEvaluateToInt</a></div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (number): The value of the parameter</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simGetFloatParameter.htm">sim.getFloatParameter</a> (regular API)<br><a href="#simxSetFloatParameter">simxSetFloatParameter</a><br><a href="#simxGetBoolParameter">simxGetBoolParameter</a><br><a href="#simxGetIntParameter">simxGetIntParameter</a><br><a href="#simxGetArrayParameter">simxGetArrayParameter</a><br><a href="#simxGetStringParameter">simxGetStringParameter</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxGetFloatParameter">C++</a>, <a href="b0RemoteApi-python.htm#simxGetFloatParameter">Python</a>, <a href="b0RemoteApi-java.htm#simxGetFloatParameter">Java</a>, <a href="b0RemoteApi-lua.htm#simxGetFloatParameter">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxGetFloatSignal" id="simxGetFloatSignal"></a>simxGetFloatSignal</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Retrieves a float <a href="meansOfCommunication.htm#signals">signal</a></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxGetFloatSignal(string sigName, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>sigName</strong>: The name of the signal</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (number): The value of the signal, or nil if the signal does not exist</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simGetDoubleSignal.htm">sim.getDoubleSignal</a> (regular API)<br><a href="#simxSetFloatSignal">simxSetFloatSignal</a><br><a href="#simxClearFloatSignal">simxClearFloatSignal</a><br><a href="#simxGetIntSignal">simxGetIntSignal</a><br><a href="#simxGetStringSignal">simxGetStringSignal</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxGetFloatSignal">C++</a>, <a href="b0RemoteApi-python.htm#simxGetFloatSignal">Python</a>, <a href="b0RemoteApi-java.htm#simxGetFloatSignal">Java</a>, <a href="b0RemoteApi-lua.htm#simxGetFloatSignal">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxGetIntParameter" id="simxGetIntParameter"></a>simxGetIntParameter</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Retrieves an <a href="apiConstants.htm#integerParameters">integer parameter</a></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxGetIntParameter(number/string paramId, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>paramId</strong>: The parameter identifier. Can also be a string value, e.g. <i>"sim.intparam_program_version"</i>. See also <a href="#simxEvaluateToInt">simxEvaluateToInt</a></div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (number): The value of the parameter</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simGetInt32Parameter.htm">sim.getInt32Parameter</a> (regular API)<br><a href="#simxSetIntParameter">simxSetIntParameter</a><br><a href="#simxGetBoolParameter">simxGetBoolParameter</a><br><a href="#simxGetFloatParameter">simxGetFloatParameter</a><br><a href="#simxGetArrayParameter">simxGetArrayParameter</a><br><a href="#simxGetStringParameter">simxGetStringParameter</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxGetIntParameter">C++</a>, <a href="b0RemoteApi-python.htm#simxGetIntParameter">Python</a>, <a href="b0RemoteApi-java.htm#simxGetIntParameter">Java</a>, <a href="b0RemoteApi-lua.htm#simxGetIntParameter">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxGetIntSignal" id="simxGetIntSignal"></a>simxGetIntSignal</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Retrieves an int <a href="meansOfCommunication.htm#signals">signal</a></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxGetIntSignal(string sigName, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>sigName</strong>: The name of the signal</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (number): The value of the signal, or nil if the signal does not exist</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simGetIntegerSignal.htm">sim.getIntegerSignal</a> (regular API)<br><a href="#simxSetIntSignal">simxSetIntSignal</a><br><a href="#simxClearIntegerSignal">simxClearIntegerSignal</a><br><a href="#simxGetFloatSignal">simxGetFloatSignal</a><br><a href="#simxGetStringSignal">simxGetStringSignal</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxGetIntSignal">C++</a>, <a href="b0RemoteApi-python.htm#simxGetIntSignal">Python</a>, <a href="b0RemoteApi-java.htm#simxGetIntSignal">Java</a>, <a href="b0RemoteApi-lua.htm#simxGetIntSignal">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxGetJointForce" id="simxGetJointForce"></a>simxGetJointForce</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Retrieves the force or torque applied to a joint along/about its active axis</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxGetJointForce(number jointHandle, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>jointHandle</strong>: The handle of the joint</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (number): The force or the torque applied to the joint along/about its z-axis, or nil if no value is available yet</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simGetJointForce.htm">sim.getJointForce</a> (regular API)<br><a href="#simxSetJointForce">simxSetJointForce</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxGetJointForce">C++</a>, <a href="b0RemoteApi-python.htm#simxGetJointForce">Python</a>, <a href="b0RemoteApi-java.htm#simxGetJointForce">Java</a>, <a href="b0RemoteApi-lua.htm#simxGetJointForce">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxGetJointPosition" id="simxGetJointPosition"></a>simxGetJointPosition</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Retrieves the intrinsic position of a joint</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxGetJointPosition(number jointHandle, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>jointHandle</strong>: The handle of the joint</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (number): The position of the joint, in radians or meters</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simGetJointPosition.htm">sim.getJointPosition</a> (regular API)<br><a href="#simxSetJointPosition">simxSetJointPosition</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxGetJointPosition">C++</a>, <a href="b0RemoteApi-python.htm#simxGetJointPosition">Python</a>, <a href="b0RemoteApi-java.htm#simxGetJointPosition">Java</a>, <a href="b0RemoteApi-lua.htm#simxGetJointPosition">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxGetJointTargetPosition" id="simxGetJointTargetPosition"></a>simxGetJointTargetPosition</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Retrieves the target position of a joint</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxGetJointTargetPosition(number jointHandle, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>jointHandle</strong>: The handle of the joint</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (number): The target position of the joint, in radians or meters</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simGetJointTargetPosition.htm">sim.getJointTargetPosition</a> (regular API)<br><a href="#simxSetJointTargetPosition">simxSetJointTargetPosition</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxGetJointTargetPosition">C++</a>, <a href="b0RemoteApi-python.htm#simxGetJointTargetPosition">Python</a>, <a href="b0RemoteApi-java.htm#simxGetJointTargetPosition">Java</a>, <a href="b0RemoteApi-lua.htm#simxGetJointTargetPosition">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxGetJointTargetVelocity" id="simxGetJointTargetVelocity"></a>simxGetJointTargetVelocity</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Retrieves the target velocity of a joint</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxGetJointTargetVelocity(number jointHandle, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>jointHandle</strong>: The handle of the joint</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (number): The target velocity of the joint, in radians/s or meters/s</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simGetJointTargetVelocity.htm">sim.getJointTargetVelocity</a> (regular API)<br><a href="#simxSetJointTargetVelocity">simxSetJointTargetVelocity</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxGetJointTargetVelocity">C++</a>, <a href="b0RemoteApi-python.htm#simxGetJointTargetVelocity">Python</a>, <a href="b0RemoteApi-java.htm#simxGetJointTargetVelocity">Java</a>, <a href="b0RemoteApi-lua.htm#simxGetJointTargetVelocity">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxGetObjectChild" id="simxGetObjectChild"></a>simxGetObjectChild</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Retrieves the handle of an object's child object</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxGetObjectChild(number objectHandle, number index, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>objectHandle</strong>: The handle of the object</div>
<div><strong>index</strong>: The zero-based index of the child's position. To retrieve all children of an object, call the function by increasing the index until the return value is -1</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (number): The handle of the child, or -1 if there is no child at the given index position</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simGetObjectChild.htm">sim.simGetObjectChild</a> (regular API)<br><a href="#simxGetObjectParent">simxGetObjectParent</a><br><a href="#simxGetObjectsInTree">simxGetObjectsInTree</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxGetObjectChild">C++</a>, <a href="b0RemoteApi-python.htm#simxGetObjectChild">Python</a>, <a href="b0RemoteApi-java.htm#simxGetObjectChild">Java</a>, <a href="b0RemoteApi-lua.htm#simxGetObjectChild">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxGetObjectFloatParameter" id="simxGetObjectFloatParameter"></a>simxGetObjectFloatParameter</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Retrieves a floating point parameter of an object</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxGetObjectFloatParameter(number objectHandle, number/string parameterID, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>objectHandle</strong>: Handle of the object</div>
<div><strong>parameterID</strong>: The identifier of the parameter to retrieve, specified as number or string. See also the <a href="objectParameterIDs.htm">list of possible object parameter identifiers</a> and <a href="#simxEvaluateToInt">simxEvaluateToInt</a></div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (number): The retrieved parameter</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simGetObjectFloatParameter.htm">sim.getObjectFloatParameter</a> (regular API)<br><a href="#simxSetObjectFloatParameter">simxSetObjectFloatParameter</a><br><a href="#simxGetObjectIntParameter">simxGetObjectIntParameter</a><br><a href="#simxGetObjectStringParameter">simxGetObjectStringParameter</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxGetObjectFloatParameter">C++</a>, <a href="b0RemoteApi-python.htm#simxGetObjectFloatParameter">Python</a>, <a href="b0RemoteApi-java.htm#simxGetObjectFloatParameter">Java</a>, <a href="b0RemoteApi-lua.htm#simxGetObjectFloatParameter">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxGetObjectHandle" id="simxGetObjectHandle"></a>simxGetObjectHandle</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Retrieves the handle of an object</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxGetObjectHandle(string objectName, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>objectName</strong>: Name of object. If the name is appended by a <i>"@alt"</i> suffix, then the object handle based on the object's alternative name will be retrieved. If the name is appended by a <i>"@silentError"</i> suffix, then no error will be output if the object does not exist</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (number): The handle of the object</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simGetObjectHandle.htm">sim.getObjectHandle</a> (regular API)<br><a href="#simxGetObjects">simxGetObjects</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxGetObjectHandle">C++</a>, <a href="b0RemoteApi-python.htm#simxGetObjectHandle">Python</a>, <a href="b0RemoteApi-java.htm#simxGetObjectHandle">Java</a>, <a href="b0RemoteApi-lua.htm#simxGetObjectHandle">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxGetObjectIntParameter" id="simxGetObjectIntParameter"></a>simxGetObjectIntParameter</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Retrieves an integer parameter of an object</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxGetObjectIntParameter(number objectHandle, number/string parameterID, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>objectHandle</strong>: Handle of the object</div>
<div><strong>parameterID</strong>: The identifier of the parameter to retrieve, specified as number or string. See also the <a href="objectParameterIDs.htm">list of possible object parameter identifiers</a> and <a href="#simxEvaluateToInt">simxEvaluateToInt</a></div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (number): The retrieved parameter</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simGetObjectInt32Parameter.htm">sim.getObjectInt32Parameter</a> (regular API)<br><a href="#simxSetObjectIntParameter">simxSetObjectIntParameter</a><br><a href="#simxGetObjectFloatParameter">simxGetObjectFloatParameter</a><br><a href="#simxGetObjectStringParameter">simxGetObjectStringParameter</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxGetObjectIntParameter">C++</a>, <a href="b0RemoteApi-python.htm#simxGetObjectIntParameter">Python</a>, <a href="b0RemoteApi-java.htm#simxGetObjectIntParameter">Java</a>, <a href="b0RemoteApi-lua.htm#simxGetObjectIntParameter">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxGetObjectMatrix" id="simxGetObjectMatrix"></a>simxGetObjectMatrix</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Retrieves the transformation matrix of an object</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxGetObjectMatrix(number objectHandle, number/string relObjHandle, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>objectHandle</strong>: The handle of the object</div>
<div><strong>relObjHandle</strong>: Indicates relative to which reference frame we want the matrix. Specify -1 to retrieve the absolute matrix, <i>"sim.handle_parent"</i> to retrieve the matrix relative to the object's parent, or an object handle relative to whose reference frame you want the matrix. See also <a href="#simxEvaluateToInt">simxEvaluateToInt</a></div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (array): The (Xx,Yx,Zx,Px,Xy,Yy,Zy,Py,Xz,Yz,Zz,Pz) transformation matrix of the object</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simGetObjectMatrix.htm">sim.getObjectMatrix</a> (regular API)<br><a href="#simxSetObjectMatrix">simxSetObjectMatrix</a><br><a href="#simxGetObjectPosition">simxGetObjectPosition</a><br><a href="#simxGetObjectOrientation">simxGetObjectOrientation</a><br><a href="#simxGetObjectQuaternion">simxGetObjectQuaternion</a><br><a href="#simxGetObjectPose">simxGetObjectPose</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxGetObjectMatrix">C++</a>, <a href="b0RemoteApi-python.htm#simxGetObjectMatrix">Python</a>, <a href="b0RemoteApi-java.htm#simxGetObjectMatrix">Java</a>, <a href="b0RemoteApi-lua.htm#simxGetObjectMatrix">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxGetObjectName" id="simxGetObjectName"></a>simxGetObjectName</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Retrieves the name or alternative name of an object</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxGetObjectName(number objectHandle, bool altName, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>objectHandle</strong>: Handle of the object</div>
<div><strong>altName</strong>: Value indicating whether the regular or alternative name should be retrieved</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (string): The name or alternative name of the object</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simGetObjectName.htm">sim.getObjectName</a> (regular API)</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxGetObjectName">C++</a>, <a href="b0RemoteApi-python.htm#simxGetObjectName">Python</a>, <a href="b0RemoteApi-java.htm#simxGetObjectName">Java</a>, <a href="b0RemoteApi-lua.htm#simxGetObjectName">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxGetObjectOrientation" id="simxGetObjectOrientation"></a>simxGetObjectOrientation</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Retrieves the Euler angles orientation of an object</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxGetObjectOrientation(number objectHandle, number/string relObjHandle, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>objectHandle</strong>: The handle of the object</div>
<div><strong>relObjHandle</strong>: Indicates relative to which reference frame we want the orientation. Specify -1 to retrieve the absolute orientation, <i>"sim.handle_parent"</i> to retrieve the orientation relative to the object's parent, or an object handle relative to whose reference frame you want the orientation. See also <a href="#simxEvaluateToInt">simxEvaluateToInt</a></div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (array): The (alpha,beta,gamma) Euler angles of the object</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simGetObjectOrientation.htm">sim.getObjectOrientation</a> (regular API)<br><a href="#simxSetObjectOrientation">simxSetObjectOrientation</a><br><a href="#simxGetObjectPosition">simxGetObjectPosition</a><br><a href="#simxGetObjectQuaternion">simxGetObjectQuaternion</a><br><a href="#simxGetObjectPose">simxGetObjectPose</a><br><a href="#simxGetObjectMatrix">simxGetObjectMatrix</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxGetObjectOrientation">C++</a>, <a href="b0RemoteApi-python.htm#simxGetObjectOrientation">Python</a>, <a href="b0RemoteApi-java.htm#simxGetObjectOrientation">Java</a>, <a href="b0RemoteApi-lua.htm#simxGetObjectOrientation">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxGetObjectParent" id="simxGetObjectParent"></a>simxGetObjectParent</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Retrieves the handle of an object's parent object</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxGetObjectParent(number objectHandle, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>objectHandle</strong>: The handle of the object</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (number): The handle of the parent, or -1 if the object has no parent</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simGetObjectParent.htm">sim.simGetObjectParent</a> (regular API)<br><a href="#simxSetObjectParent">simxSetObjectParent</a><br><a href="#simxGetObjectChild">simxGetObjectChild</a><br><a href="#simxGetObjectsInTree">simxGetObjectsInTree</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxGetObjectParent">C++</a>, <a href="b0RemoteApi-python.htm#simxGetObjectParent">Python</a>, <a href="b0RemoteApi-java.htm#simxGetObjectParent">Java</a>, <a href="b0RemoteApi-lua.htm#simxGetObjectParent">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxGetObjectPose" id="simxGetObjectPose"></a>simxGetObjectPose</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Retrieves the position and quaternion of an object</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxGetObjectPose(number objectHandle, number/string relObjHandle, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>objectHandle</strong>: The handle of the object</div>
<div><strong>relObjHandle</strong>: Indicates relative to which reference frame we want the pose. Specify -1 to retrieve the absolute pose, <i>"sim.handle_parent"</i> to retrieve the pose relative to the object's parent, or an object handle relative to whose reference frame you want the pose. See also <a href="#simxEvaluateToInt">simxEvaluateToInt</a></div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (array): The (X,Y,Z,Qx,Qy,Qz,Qw) pose of the object</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="#simxSetObjectPose">simxSetObjectPose</a><br><a href="#simxGetObjectPosition">simxGetObjectPosition</a><br><a href="#simxGetObjectOrientation">simxGetObjectOrientation</a><br><a href="#simxGetObjectQuaternion">simxGetObjectQuaternion</a><br><a href="#simxGetObjectMatrix">simxGetObjectMatrix</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxGetObjectPose">C++</a>, <a href="b0RemoteApi-python.htm#simxGetObjectPose">Python</a>, <a href="b0RemoteApi-java.htm#simxGetObjectPose">Java</a>, <a href="b0RemoteApi-lua.htm#simxGetObjectPose">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxGetObjectPosition" id="simxGetObjectPosition"></a>simxGetObjectPosition</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Retrieves the position of an object</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxGetObjectPosition(number objectHandle, number/string relObjHandle, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>objectHandle</strong>: The handle of the object</div>
<div><strong>relObjHandle</strong>: Indicates relative to which reference frame we want the position. Specify -1 to retrieve the absolute position, <i>"sim.handle_parent"</i> to retrieve the position relative to the object's parent, or an object handle relative to whose reference frame you want the position. See also <a href="#simxEvaluateToInt">simxEvaluateToInt</a></div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (array): The (X,Y,Z) position of the object</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simGetObjectPosition.htm">sim.getObjectPosition</a> (regular API)<br><a href="#simxSetObjectPosition">simxSetObjectPosition</a><br><a href="#simxGetObjectOrientation">simxGetObjectOrientation</a><br><a href="#simxGetObjectQuaternion">simxGetObjectQuaternion</a><br><a href="#simxGetObjectPose">simxGetObjectPose</a><br><a href="#simxGetObjectMatrix">simxGetObjectMatrix</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxGetObjectPosition">C++</a>, <a href="b0RemoteApi-python.htm#simxGetObjectPosition">Python</a>, <a href="b0RemoteApi-java.htm#simxGetObjectPosition">Java</a>, <a href="b0RemoteApi-lua.htm#simxGetObjectPosition">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxGetObjectQuaternion" id="simxGetObjectQuaternion"></a>simxGetObjectQuaternion</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Retrieves the quaternion orientation of an object</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxGetObjectQuaternion(number objectHandle, number/string relObjHandle, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>objectHandle</strong>: The handle of the object</div>
<div><strong>relObjHandle</strong>: Indicates relative to which reference frame we want the orientation. Specify -1 to retrieve the absolute orientation, <i>"sim.handle_parent"</i> to retrieve the orientation relative to the object's parent, or an object handle relative to whose reference frame you want the orientation. See also <a href="#simxEvaluateToInt">simxEvaluateToInt</a></div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (array): The (Qx,Qy,Qz,Qw) quaternion of the object</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simGetObjectQuaternion.htm">sim.getObjectQuaternion</a> (regular API)<br><a href="#simxSetObjectOrientation">simxSetObjectOrientation</a><br><a href="#simxGetObjectPosition">simxGetObjectPosition</a><br><a href="#simxGetObjectQuaternion">simxGetObjectQuaternion</a><br><a href="#simxGetObjectPose">simxGetObjectPose</a><br><a href="#simxGetObjectMatrix">simxGetObjectMatrix</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxGetObjectQuaternion">C++</a>, <a href="b0RemoteApi-python.htm#simxGetObjectQuaternion">Python</a>, <a href="b0RemoteApi-java.htm#simxGetObjectQuaternion">Java</a>, <a href="b0RemoteApi-lua.htm#simxGetObjectQuaternion">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxGetObjectSelection" id="simxGetObjectSelection"></a>simxGetObjectSelection</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Retrieves all selected object handles</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxGetObjectSelection(string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (array): The handles of the selected objects</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simGetObjectSelection.htm">sim.getObjectSelection</a> (regular API)<br><a href="#simxSetObjectSelection">simxSetObjectSelection</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxGetObjectSelection">C++</a>, <a href="b0RemoteApi-python.htm#simxGetObjectSelection">Python</a>, <a href="b0RemoteApi-java.htm#simxGetObjectSelection">Java</a>, <a href="b0RemoteApi-lua.htm#simxGetObjectSelection">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxGetObjectStringParameter" id="simxGetObjectStringParameter"></a>simxGetObjectStringParameter</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Retrieves a string parameter of an object</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxGetObjectStringParameter(number objectHandle, number/string parameterID, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>objectHandle</strong>: Handle of the object</div>
<div><strong>parameterID</strong>: The identifier of the parameter to retrieve, specified as number or string. See also the <a href="objectParameterIDs.htm">list of possible object parameter identifiers</a> and <a href="#simxEvaluateToInt">simxEvaluateToInt</a></div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (string): The retrieved parameter</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simGetObjectStringParameter.htm">sim.getObjectStringParameter</a> (regular API)<br><a href="#simxSetObjectStringParameter">simxSetObjectStringParameter</a><br><a href="#simxGetObjectIntParameter">simxGetObjectIntParameter</a><br><a href="#simxGetObjectFloatParameter">simxGetObjectFloatParameter</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxGetObjectStringParameter">C++</a>, <a href="b0RemoteApi-python.htm#simxGetObjectStringParameter">Python</a>, <a href="b0RemoteApi-java.htm#simxGetObjectStringParameter">Java</a>, <a href="b0RemoteApi-lua.htm#simxGetObjectStringParameter">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxGetObjectVelocity" id="simxGetObjectVelocity"></a>simxGetObjectVelocity</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Reads the linear and angular velocity of an object. The velocity is a measured velocity (i.e. from one simulation step to the next)</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxGetObjectVelocity(number handle, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>handle</strong>: The handle of the object</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (array): The linear velocity</div>
<div><strong>item3</strong> (array): The angular velocity vector, i.e. its direction represents the rotation axis, its length the rotation velocity</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simGetObjectVelocity.htm">sim.getObjectVelocity</a> (regular API)</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxGetObjectVelocity">C++</a>, <a href="b0RemoteApi-python.htm#simxGetObjectVelocity">Python</a>, <a href="b0RemoteApi-java.htm#simxGetObjectVelocity">Java</a>, <a href="b0RemoteApi-lua.htm#simxGetObjectVelocity">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxGetObjects" id="simxGetObjects"></a>simxGetObjects</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Retrieves object handles from the scene</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxGetObjects(number/string objectType, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>objectType</strong>: The <a href="apiConstants.htm#sceneObjectTypes">object type</a>, or <i>"sim.handle_all"</i> to retrieve all object handles in the scene. See also <a href="#simxEvaluateToInt">simxEvaluateToInt</a></div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (array): The object handles</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simGetObjects.htm">sim.getObjects</a> (regular API)<br><a href="#simxGetObjectHandle">simxGetObjectHandle</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxGetObjects">C++</a>, <a href="b0RemoteApi-python.htm#simxGetObjects">Python</a>, <a href="b0RemoteApi-java.htm#simxGetObjects">Java</a>, <a href="b0RemoteApi-lua.htm#simxGetObjects">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxGetObjectsInTree" id="simxGetObjectsInTree"></a>simxGetObjectsInTree</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Retrieves object handles in a given hierarchy tree</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxGetObjectsInTree(number/string treeBaseHandle, string objectType, number options, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>treeBaseHandle</strong>: The handle of the object that describes the hierarchy tree, or the string <i>"sim.handle_scene"</i> for all objects in the scene. See also <a href="#simxEvaluateToInt">simxEvaluateToInt</a></div>
<div><strong>objectType</strong>: The object type to retrieve, or 'sim.handle_all' for any type of object in the tree</div>
<div><strong>options</strong>: Bit-coded. bit0 set (1): exclude the tree base from the returned array, bit1 set (2): include in the returned array only the object's first children. If <b>treeBaseHandle</b> is 'sim.handle_scene', then only parentless objects will be included</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (array): The object handles</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simGetObjectsInTree.htm">sim.simGetObjectsInTree</a> (regular API)<br><a href="#simxGetObjectChild">simxGetObjectChild</a><br><a href="#simxGetObjectParent">simxGetObjectParent</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxGetObjectsInTree">C++</a>, <a href="b0RemoteApi-python.htm#simxGetObjectsInTree">Python</a>, <a href="b0RemoteApi-java.htm#simxGetObjectsInTree">Java</a>, <a href="b0RemoteApi-lua.htm#simxGetObjectsInTree">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxGetServerTimeInMs" id="simxGetServerTimeInMs"></a>simxGetServerTimeInMs</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Retrieves the current server time, in milliseconds</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxGetServerTimeInMs(string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (number): The server time. On Windows is equivalent to the <i>TimeGetTime()</i> function, on Linux it is equivalent to the <i>gettimeofday()</i> function.</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simGetSystemTimeInMs.htm">sim.getSystemTimeInMs</a> (regular API)<br><a href="#simxGetSimulationTime">simxGetSimulationTime</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxGetServerTimeInMs">C++</a>, <a href="b0RemoteApi-python.htm#simxGetServerTimeInMs">Python</a>, <a href="b0RemoteApi-java.htm#simxGetServerTimeInMs">Java</a>, <a href="b0RemoteApi-lua.htm#simxGetServerTimeInMs">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxGetSimulationState" id="simxGetSimulationState"></a>simxGetSimulationState</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Retrieves the state of the simulation</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxGetSimulationState(string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (number): The simulation state: 0=stopped, 8=paused, 16=running</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simGetSimulationState.htm">sim.getSimulationState</a> (regular API)<br><a href="#simxGetSimulationTime">simxGetSimulationTime</a><br><a href="#simxGetServerTimeInMs">simxGetServerTimeInMs</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxGetSimulationState">C++</a>, <a href="b0RemoteApi-python.htm#simxGetSimulationState">Python</a>, <a href="b0RemoteApi-java.htm#simxGetSimulationState">Java</a>, <a href="b0RemoteApi-lua.htm#simxGetSimulationState">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxGetSimulationStepDone" id="simxGetSimulationStepDone"></a>simxGetSimulationStepDone</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Checks whether the current simulation step finished executing</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">simxGetSimulationStepDone(string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call. Recommended is <a href="#simxDefaultSubscriber">simxDefaultSubscriber</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="#simxGetSimulationStepStarted">simxGetSimulationStepStarted</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxGetSimulationStepDone">C++</a>, <a href="b0RemoteApi-python.htm#simxGetSimulationStepDone">Python</a>, <a href="b0RemoteApi-java.htm#simxGetSimulationStepDone">Java</a>, <a href="b0RemoteApi-lua.htm#simxGetSimulationStepDone">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxGetSimulationStepStarted" id="simxGetSimulationStepStarted"></a>simxGetSimulationStepStarted</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Checks whether the current simulation step finished executing</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">simxGetSimulationStepStarted(string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call. Recommended is <a href="#simxDefaultSubscriber">simxDefaultSubscriber</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="#simxGetSimulationStepDone">simxGetSimulationStepDone</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxGetSimulationStepStarted">C++</a>, <a href="b0RemoteApi-python.htm#simxGetSimulationStepStarted">Python</a>, <a href="b0RemoteApi-java.htm#simxGetSimulationStepStarted">Java</a>, <a href="b0RemoteApi-lua.htm#simxGetSimulationStepStarted">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxGetSimulationTime" id="simxGetSimulationTime"></a>simxGetSimulationTime</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Retrieves the current simulation time</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxGetSimulationTime(string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (number): The simulation time in seconds</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simGetSimulationTime.htm">sim.getSimulationTime</a> (regular API)<br><a href="#simxGetSimulationState">simxGetSimulationState</a><br><a href="#simxGetServerTimeInMs">simxGetServerTimeInMs</a><br><a href="#simxGetSimulationTimeStep">simxGetSimulationTimeStep</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxGetSimulationTime">C++</a>, <a href="b0RemoteApi-python.htm#simxGetSimulationTime">Python</a>, <a href="b0RemoteApi-java.htm#simxGetSimulationTime">Java</a>, <a href="b0RemoteApi-lua.htm#simxGetSimulationTime">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxGetSimulationTimeStep" id="simxGetSimulationTimeStep"></a>simxGetSimulationTimeStep</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Retrieves the current simulation time step</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxGetSimulationTimeStep(string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (number): The simulation time step in seconds</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simGetSimulationTimeStep.htm">sim.getSimulationTimeStep</a> (regular API)<br><a href="#simxGetSimulationTime">simxGetSimulationTime</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxGetSimulationTimeStep">C++</a>, <a href="b0RemoteApi-python.htm#simxGetSimulationTimeStep">Python</a>, <a href="b0RemoteApi-java.htm#simxGetSimulationTimeStep">Java</a>, <a href="b0RemoteApi-lua.htm#simxGetSimulationTimeStep">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxGetStringParameter" id="simxGetStringParameter"></a>simxGetStringParameter</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Retrieves a <a href="apiConstants.htm#stringParameters">string parameter</a></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxGetStringParameter(number/string paramId, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>paramId</strong>: The parameter identifier. Can also be a string value, e.g. <i>"sim.stringparam_scene_name"</i>. See also <a href="#simxEvaluateToInt">simxEvaluateToInt</a></div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (string): The value of the parameter</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simGetStringParameter.htm">sim.getStringParameter</a> (regular API)<br><a href="#simxSetStringParameter">simxSetStringParameter</a><br><a href="#simxGetBoolParameter">simxGetBoolParameter</a><br><a href="#simxGetIntParameter">simxGetIntParameter</a><br><a href="#simxGetFloatParameter">simxGetFloatParameter</a><br><a href="#simxGetArrayParameter">simxGetArrayParameter</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxGetStringParameter">C++</a>, <a href="b0RemoteApi-python.htm#simxGetStringParameter">Python</a>, <a href="b0RemoteApi-java.htm#simxGetStringParameter">Java</a>, <a href="b0RemoteApi-lua.htm#simxGetStringParameter">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxGetStringSignal" id="simxGetStringSignal"></a>simxGetStringSignal</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Retrieves a string <a href="meansOfCommunication.htm#signals">signal</a>. Such a signal represents a byte buffer</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxGetStringSignal(string sigName, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>sigName</strong>: The name of the signal</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (byteArray): The value of the signal, or nil if the signal does not exist</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simGetStringSignal.htm">sim.getStringSignal</a> (regular API)<br><a href="#simxSetStringSignal">simxSetStringSignal</a><br><a href="#simxClearStringSignal">simxClearStringSignal</a><br><a href="#simxGetIntSignal">simxGetIntSignal</a><br><a href="#simxGetFloatSignal">simxGetFloatSignal</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxGetStringSignal">C++</a>, <a href="b0RemoteApi-python.htm#simxGetStringSignal">Python</a>, <a href="b0RemoteApi-java.htm#simxGetStringSignal">Java</a>, <a href="b0RemoteApi-lua.htm#simxGetStringSignal">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxGetTimeInMs" id="simxGetTimeInMs"></a>simxGetTimeInMs</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Returns the system time in milliseconds</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">number simxGetTimeInMs()<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>The time in milliseconds</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="#simxSleep">simxSleep</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxGetTimeInMs">C++</a>, <a href="b0RemoteApi-python.htm#simxGetTimeInMs">Python</a>, <a href="b0RemoteApi-java.htm#simxGetTimeInMs">Java</a>, <a href="b0RemoteApi-lua.htm#simxGetTimeInMs">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxGetVisionSensorDepthBuffer" id="simxGetVisionSensorDepthBuffer"></a>simxGetVisionSensorDepthBuffer</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Retrieves the depth buffer of a vision sensor</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxGetVisionSensorDepthBuffer(number objectHandle, bool toMeters, bool asByteArray, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>objectHandle</strong>: The handle of the vision sensor</div>
<div><strong>toMeters</strong>: Whether depth values are expressed in terms of relative distance to the sensor's clipping planes or whether depth values are expressed in terms of distance in meters</div>
<div><strong>asByteArray</strong>: If true, then a byte array will be returned, instead of a float array, which is much faster (large float arrays might be very slow to handle with message pack, in several languages). In that case, the user is in charge of correctly decoding the byte array containing 4-byte floats, including little/big Endian conversions, etc.</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (array): The resolution of the depth buffer</div>
<div><strong>item3</strong> (array): The depth buffer. Values are in the range of 0-1 (0=on the near clipping plane, 1=on the far clipping plane). If <b>toMeters</b> was specified, then values represent the distance from the sensor's origin, in meters</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simGetVisionSensorDepthBuffer.htm">sim.getVisionSensorDepthBuffer</a> (regular API)<br><a href="#simxGetVisionSensorImage">simxGetVisionSensorImage</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxGetVisionSensorDepthBuffer">C++</a>, <a href="b0RemoteApi-python.htm#simxGetVisionSensorDepthBuffer">Python</a>, <a href="b0RemoteApi-java.htm#simxGetVisionSensorDepthBuffer">Java</a>, <a href="b0RemoteApi-lua.htm#simxGetVisionSensorDepthBuffer">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxGetVisionSensorImage" id="simxGetVisionSensorImage"></a>simxGetVisionSensorImage</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Retrieves the image of a vision sensor</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxGetVisionSensorImage(number objectHandle, bool greyScale, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>objectHandle</strong>: The handle of the vision sensor</div>
<div><strong>greyScale</strong>: Whether the image should be grey scale or color</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (array): The resolution of the image</div>
<div><strong>item3</strong> (byteArray): The image. In a grey scale image, each pixel is represented by one byte, with a color image, each pixel is represented by a RGB-byte-triplet</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simGetVisionSensorCharImage.htm">sim.getVisionSensorCharImage</a> (regular API)<br><a href="#simxSetVisionSensorImage">simxSetVisionSensorImage</a><br><a href="#simxGetVisionSensorDepthBuffer">simxGetVisionSensorDepthBuffer</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxGetVisionSensorImage">C++</a>, <a href="b0RemoteApi-python.htm#simxGetVisionSensorImage">Python</a>, <a href="b0RemoteApi-java.htm#simxGetVisionSensorImage">Java</a>, <a href="b0RemoteApi-lua.htm#simxGetVisionSensorImage">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxLoadModelFromBuffer" id="simxLoadModelFromBuffer"></a>simxLoadModelFromBuffer</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Loads a model from a buffer</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxLoadModelFromBuffer(byteArray buffer, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>buffer</strong>: The buffer representing the model to load</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (number): The handle of the model base object</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simLoadModel.htm">sim.loadModel</a> (regular API)<br><a href="#simxLoadModelFromFile">simxLoadModelFromFile</a><br><a href="#simxLoadScene">simxLoadScene</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxLoadModelFromBuffer">C++</a>, <a href="b0RemoteApi-python.htm#simxLoadModelFromBuffer">Python</a>, <a href="b0RemoteApi-java.htm#simxLoadModelFromBuffer">Java</a>, <a href="b0RemoteApi-lua.htm#simxLoadModelFromBuffer">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxLoadModelFromFile" id="simxLoadModelFromFile"></a>simxLoadModelFromFile</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Loads a model from file</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxLoadModelFromFile(string filename, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>filename</strong>: The location of the model file. The filename extension is required</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (number): The handle of the model base object</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simLoadModel.htm">sim.loadModel</a> (regular API)<br><a href="#simxLoadModelFromBuffer">simxLoadModelFromBuffer</a><br><a href="#simxLoadScene">simxLoadScene</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxLoadModelFromFile">C++</a>, <a href="b0RemoteApi-python.htm#simxLoadModelFromFile">Python</a>, <a href="b0RemoteApi-java.htm#simxLoadModelFromFile">Java</a>, <a href="b0RemoteApi-lua.htm#simxLoadModelFromFile">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxLoadScene" id="simxLoadScene"></a>simxLoadScene</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Loads a scene from file</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxLoadScene(string filename, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>filename</strong>: The location of the scene file. The filename extension is required</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (number): -1 if operation was not successful</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simLoadScene.htm">sim.loadScene</a> (regular API)<br><a href="#simxLoadModelFromFile">simxLoadModelFromFile</a><br><a href="#simxLoadModelFromBuffer">simxLoadModelFromBuffer</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxLoadScene">C++</a>, <a href="b0RemoteApi-python.htm#simxLoadScene">Python</a>, <a href="b0RemoteApi-java.htm#simxLoadScene">Java</a>, <a href="b0RemoteApi-lua.htm#simxLoadScene">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxPauseSimulation" id="simxPauseSimulation"></a>simxPauseSimulation</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Requests a pause of the running simulation</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxPauseSimulation(string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (number): 0 if the operation could not be performed. >0 in case of success</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simPauseSimulation.htm">sim.pauseSimulation</a> (regular API)<br><a href="#simxStartSimulation">simxStartSimulation</a><br><a href="#simxStopSimulation">simxStopSimulation</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxPauseSimulation">C++</a>, <a href="b0RemoteApi-python.htm#simxPauseSimulation">Python</a>, <a href="b0RemoteApi-java.htm#simxPauseSimulation">Java</a>, <a href="b0RemoteApi-lua.htm#simxPauseSimulation">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxReadCollision" id="simxReadCollision"></a>simxReadCollision</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Reads the collision state of a <a href="collisionDetection.htm">collision object</a></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxReadCollision(number handle, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>handle</strong>: The handle of the collision object</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (bool): The collision state of the object</div>
<div><strong>item3</strong> (array): handles of the colliding objects</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simReadCollision.htm">sim.readCollision</a> (regular API)<br><a href="#simxGetCollisionHandle">simxGetCollisionHandle</a><br><a href="#simxCheckCollision">simxCheckCollision</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxReadCollision">C++</a>, <a href="b0RemoteApi-python.htm#simxReadCollision">Python</a>, <a href="b0RemoteApi-java.htm#simxReadCollision">Java</a>, <a href="b0RemoteApi-lua.htm#simxReadCollision">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxReadDistance" id="simxReadDistance"></a>simxReadDistance</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Reads the distance state of a <a href="distanceCalculation.htm">distance calculation object</a></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxReadDistance(number handle, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>handle</strong>: The handle of the distance calculation object</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (number): 0 if distance was not yet computed, 1 otherwise</div>
<div><strong>item3</strong> (number): The smallest distance</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simReadDistance.htm">sim.readDistance</a> (regular API)<br><a href="#simxGetDistanceHandle">simxGetDistanceHandle</a><br><a href="#simxCheckDistance">simxCheckDistance</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxReadDistance">C++</a>, <a href="b0RemoteApi-python.htm#simxReadDistance">Python</a>, <a href="b0RemoteApi-java.htm#simxReadDistance">Java</a>, <a href="b0RemoteApi-lua.htm#simxReadDistance">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxReadForceSensor" id="simxReadForceSensor"></a>simxReadForceSensor</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Reads the force and torque applied to a force sensor (filtered values are read), and its current state ('unbroken' or 'broken')</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxReadForceSensor(number handle, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>handle</strong>: The handle of the force sensor</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (number): The sensor state (bit coded: bit0 set=force/torque data is valid, bit1 set=force sensor is broken)</div>
<div><strong>item3</strong> (array): The applied force</div>
<div><strong>item4</strong> (array): The applied torque</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simReadForceSensor.htm">sim.readForceSensor</a> (regular API)<br><a href="#simxBreakForceSensor">simxBreakForceSensor</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxReadForceSensor">C++</a>, <a href="b0RemoteApi-python.htm#simxReadForceSensor">Python</a>, <a href="b0RemoteApi-java.htm#simxReadForceSensor">Java</a>, <a href="b0RemoteApi-lua.htm#simxReadForceSensor">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxReadProximitySensor" id="simxReadProximitySensor"></a>simxReadProximitySensor</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Reads the calculation result of a proximity sensor</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxReadProximitySensor(number handle, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>handle</strong>: The handle of the proximity sensor</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (number): detection state (0 or 1)</div>
<div><strong>item3</strong> (number): The distance to the detected point</div>
<div><strong>item4</strong> (array): The detected point relative to the sensor frame</div>
<div><strong>item5</strong> (number): The detected object handle</div>
<div><strong>item6</strong> (array): The normal vector of the detected surface, relative to the sensor frame</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simReadProximitySensor.htm">sim.readProximitySensor</a> (regular API)<br><a href="#simxCheckProximitySensor">simxCheckProximitySensor</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxReadProximitySensor">C++</a>, <a href="b0RemoteApi-python.htm#simxReadProximitySensor">Python</a>, <a href="b0RemoteApi-java.htm#simxReadProximitySensor">Java</a>, <a href="b0RemoteApi-lua.htm#simxReadProximitySensor">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxReadVisionSensor" id="simxReadVisionSensor"></a>simxReadVisionSensor</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Reads the state of a vision sensor</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxReadVisionSensor(number handle, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>handle</strong>: The handle of the vision sensor</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (number): detection state (0 or 1)</div>
<div><strong>item3</strong> (array): The default auxiliary value packet. See [L[regularApi/simReadVisionSensor.htm,here] for details</div>
<div><strong>item4</strong> (array): Additional auxiliary value packet (e.g. from a filter component)</div>
<div><strong>item5</strong> (array): Etc.</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simReadVisionSensor.htm">sim.readVisionSensor</a> (regular API)<br><a href="#simxCheckVisionSensor">simxCheckVisionSensor</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxReadVisionSensor">C++</a>, <a href="b0RemoteApi-python.htm#simxReadVisionSensor">Python</a>, <a href="b0RemoteApi-java.htm#simxReadVisionSensor">Java</a>, <a href="b0RemoteApi-lua.htm#simxReadVisionSensor">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxRemoveDrawingObject" id="simxRemoveDrawingObject"></a>simxRemoveDrawingObject</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Removes a drawing object from the scene</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxRemoveDrawingObject(number handle, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>handle</strong>: The drawing object handle to remove</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simRemoveDrawingObject.htm">sim.removeDrawingObject</a> (regular API)<br><a href="#simxAddDrawingObject_points">simxAddDrawingObject_points</a><br><a href="#simxAddDrawingObject_spheres">simxAddDrawingObject_spheres</a><br><a href="#simxAddDrawingObject_cubes">simxAddDrawingObject_cubes</a><br><a href="#simxAddDrawingObject_segments">simxAddDrawingObject_segments</a><br><a href="#simxAddDrawingObject_triangles">simxAddDrawingObject_triangles</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxRemoveDrawingObject">C++</a>, <a href="b0RemoteApi-python.htm#simxRemoveDrawingObject">Python</a>, <a href="b0RemoteApi-java.htm#simxRemoveDrawingObject">Java</a>, <a href="b0RemoteApi-lua.htm#simxRemoveDrawingObject">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxRemoveObjects" id="simxRemoveObjects"></a>simxRemoveObjects</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Removes objects or models</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxRemoveObjects(array objectHandles, number options, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>objectHandles</strong>: The handles of the objects/models to remove</div>
<div><strong>options</strong>: Bit-coded. If bit0 is set (i.e. 1), then whole models will be removed. If bit1 is set (i.e. 2), then all objects and models will be removed</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (number): The number of removed objects</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simRemoveObject.htm">sim.removeObject</a> (regular API)<br><a href="regularApi/simRemoveModel.htm">sim.removeModel</a> (regular API)</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxRemoveObjects">C++</a>, <a href="b0RemoteApi-python.htm#simxRemoveObjects">Python</a>, <a href="b0RemoteApi-java.htm#simxRemoveObjects">Java</a>, <a href="b0RemoteApi-lua.htm#simxRemoveObjects">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxRemovePublisher" id="simxRemovePublisher"></a>simxRemovePublisher</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Removes or disables a custom publisher</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">simxRemovePublisher(string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>topic</strong>: The topic of the publisher</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="#simxCreatePublisher">simxCreatePublisher</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxRemovePublisher">C++</a>, <a href="b0RemoteApi-python.htm#simxRemovePublisher">Python</a>, <a href="b0RemoteApi-java.htm#simxRemovePublisher">Java</a>, <a href="b0RemoteApi-lua.htm#simxRemovePublisher">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxRemoveSubscriber" id="simxRemoveSubscriber"></a>simxRemoveSubscriber</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Removes or disables a subscriber</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">simxRemoveSubscriber(string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>topic</strong>: The topic of the subscriber</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="#simxDefaultSubscriber">simxDefaultSubscriber</a><br><a href="#simxCreateSubscriber">simxCreateSubscriber</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxRemoveSubscriber">C++</a>, <a href="b0RemoteApi-python.htm#simxRemoveSubscriber">Python</a>, <a href="b0RemoteApi-java.htm#simxRemoveSubscriber">Java</a>, <a href="b0RemoteApi-lua.htm#simxRemoveSubscriber">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxServiceCall" id="simxServiceCall"></a>simxServiceCall</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Returns the topic for service calls</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">string simxServiceCall()<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>The service call topic</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="#simxDefaultPublisher">simxDefaultPublisher</a><br><a href="#simxDefaultSubscriber">simxDefaultSubscriber</a><br><a href="#simxCreatePublisher">simxCreatePublisher</a><br><a href="#simxCreateSubscriber">simxCreateSubscriber</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxServiceCall">C++</a>, <a href="b0RemoteApi-python.htm#simxServiceCall">Python</a>, <a href="b0RemoteApi-java.htm#simxServiceCall">Java</a>, <a href="b0RemoteApi-lua.htm#simxServiceCall">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxSetArrayParameter" id="simxSetArrayParameter"></a>simxSetArrayParameter</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Sets a <a href="apiConstants.htm#arrayParameters">float parameter</a></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxSetArrayParameter(number/string paramId, array paramVal, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>paramId</strong>: The parameter identifier. Can also be a string value, e.g. <i>"sim.arrayparam_gravity"</i>. See also <a href="#simxEvaluateToInt">simxEvaluateToInt</a></div>
<div><strong>paramVal</strong>: The value of the parameter</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simSetArrayParameter.htm">sim.setArrayParameter</a> (regular API)<br><a href="#simxGetArrayParameter">simxGetArrayParameter</a><br><a href="#simxSetBoolParameter">simxSetBoolParameter</a><br><a href="#simxSetIntParameter">simxSetIntParameter</a><br><a href="#simxSetFloatParameter">simxSetFloatParameter</a><br><a href="#simxSetStringParameter">simxSetStringParameter</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxSetArrayParameter">C++</a>, <a href="b0RemoteApi-python.htm#simxSetArrayParameter">Python</a>, <a href="b0RemoteApi-java.htm#simxSetArrayParameter">Java</a>, <a href="b0RemoteApi-lua.htm#simxSetArrayParameter">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxSetBoolParameter" id="simxSetBoolParameter"></a>simxSetBoolParameter</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Sets a <a href="apiConstants.htm#booleanParameters">boolean parameter</a></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxSetBoolParameter(number/string paramId, bool paramVal, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>paramId</strong>: The parameter identifier. Can also be a string value, e.g. <i>"sim.boolparam_proximity_sensor_handling_enabled"</i>. See also <a href="#simxEvaluateToInt">simxEvaluateToInt</a></div>
<div><strong>paramVal</strong>: The value of the parameter</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simSetBoolParameter.htm">sim.setBoolParameter</a> (regular API)<br><a href="#simxGetBoolParameter">simxGetBoolParameter</a><br><a href="#simxSetIntParameter">simxSetIntParameter</a><br><a href="#simxSetFloatParameter">simxSetFloatParameter</a><br><a href="#simxSetArrayParameter">simxSetArrayParameter</a><br><a href="#simxSetStringParameter">simxSetStringParameter</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxSetBoolParameter">C++</a>, <a href="b0RemoteApi-python.htm#simxSetBoolParameter">Python</a>, <a href="b0RemoteApi-java.htm#simxSetBoolParameter">Java</a>, <a href="b0RemoteApi-lua.htm#simxSetBoolParameter">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxSetFloatParameter" id="simxSetFloatParameter"></a>simxSetFloatParameter</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Sets a <a href="apiConstants.htm#floatingParameters">float parameter</a></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxSetFloatParameter(number/string paramId, number paramVal, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>paramId</strong>: The parameter identifier. Can also be a string value, e.g. <i>"sim.floatparam_simulation_time_step"</i>. See also <a href="#simxEvaluateToInt">simxEvaluateToInt</a></div>
<div><strong>paramVal</strong>: The value of the parameter</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simSetFloatParameter.htm">sim.setFloatParameter</a> (regular API)<br><a href="#simxGetFloatParameter">simxGetFloatParameter</a><br><a href="#simxSetBoolParameter">simxSetBoolParameter</a><br><a href="#simxSetIntParameter">simxSetIntParameter</a><br><a href="#simxSetArrayParameter">simxSetArrayParameter</a><br><a href="#simxSetStringParameter">simxSetStringParameter</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxSetFloatParameter">C++</a>, <a href="b0RemoteApi-python.htm#simxSetFloatParameter">Python</a>, <a href="b0RemoteApi-java.htm#simxSetFloatParameter">Java</a>, <a href="b0RemoteApi-lua.htm#simxSetFloatParameter">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxSetFloatSignal" id="simxSetFloatSignal"></a>simxSetFloatSignal</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Sets a float <a href="meansOfCommunication.htm#signals">signal</a></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxSetFloatSignal(string sigName, number sigValue, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>sigName</strong>: The name of the signal</div>
<div><strong>sigValue</strong>: The value of the signal</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simSetDoubleSignal.htm">sim.setDoubleSignal</a> (regular API)<br><a href="#simxGetFloatSignal">simxGetFloatSignal</a><br><a href="#simxClearFloatSignal">simxClearFloatSignal</a><br><a href="#simxSetIntSignal">simxSetIntSignal</a><br><a href="#simxSetStringSignal">simxSetStringSignal</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxSetFloatSignal">C++</a>, <a href="b0RemoteApi-python.htm#simxSetFloatSignal">Python</a>, <a href="b0RemoteApi-java.htm#simxSetFloatSignal">Java</a>, <a href="b0RemoteApi-lua.htm#simxSetFloatSignal">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxSetIntParameter" id="simxSetIntParameter"></a>simxSetIntParameter</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Sets an <a href="apiConstants.htm#integerParameters">integer parameter</a></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxSetIntParameter(number/string paramId, number paramVal, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>paramId</strong>: The parameter identifier. Can also be a string value, e.g. <i>"sim.intparam_program_version"</i>. See also <a href="#simxEvaluateToInt">simxEvaluateToInt</a></div>
<div><strong>paramVal</strong>: The value of the parameter</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simSetInt32Parameter.htm">sim.setInt32Parameter</a> (regular API)<br><a href="#simxGetIntParameter">simxGetIntParameter</a><br><a href="#simxSetBoolParameter">simxSetBoolParameter</a><br><a href="#simxSetFloatParameter">simxSetFloatParameter</a><br><a href="#simxSetArrayParameter">simxSetArrayParameter</a><br><a href="#simxSetStringParameter">simxSetStringParameter</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxSetIntParameter">C++</a>, <a href="b0RemoteApi-python.htm#simxSetIntParameter">Python</a>, <a href="b0RemoteApi-java.htm#simxSetIntParameter">Java</a>, <a href="b0RemoteApi-lua.htm#simxSetIntParameter">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxSetIntSignal" id="simxSetIntSignal"></a>simxSetIntSignal</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Sets an int <a href="meansOfCommunication.htm#signals">signal</a></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxSetIntSignal(string sigName, number sigValue, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>sigName</strong>: The name of the signal</div>
<div><strong>sigValue</strong>: The value of the signal</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simSetIntegerSignal.htm">sim.setIntegerSignal</a> (regular API)<br><a href="#simxGetIntSignal">simxGetIntSignal</a><br><a href="#simxClearIntegerSignal">simxClearIntegerSignal</a><br><a href="#simxSetFloatSignal">simxSetFloatSignal</a><br><a href="#simxSetStringSignal">simxSetStringSignal</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxSetIntSignal">C++</a>, <a href="b0RemoteApi-python.htm#simxSetIntSignal">Python</a>, <a href="b0RemoteApi-java.htm#simxSetIntSignal">Java</a>, <a href="b0RemoteApi-lua.htm#simxSetIntSignal">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxSetJointForce" id="simxSetJointForce"></a>simxSetJointForce</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Sets the maximum force or torque that a joint can exert</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxSetJointForce(number jointHandle, number forceOrTorque, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>jointHandle</strong>: The handle of the joint</div>
<div><strong>forceOrTorque</strong>: The maximum force or torque that the joint can exert</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simSetJointForce.htm">sim.setJointForce</a> (regular API)<br><a href="#simxGetJointForce">simxGetJointForce</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxSetJointForce">C++</a>, <a href="b0RemoteApi-python.htm#simxSetJointForce">Python</a>, <a href="b0RemoteApi-java.htm#simxSetJointForce">Java</a>, <a href="b0RemoteApi-lua.htm#simxSetJointForce">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxSetJointPosition" id="simxSetJointPosition"></a>simxSetJointPosition</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Sets the intrinsic position of a joint</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxSetJointPosition(number jointHandle, number position, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>jointHandle</strong>: The handle of the joint</div>
<div><strong>position</strong>: The position of the joint, in radians or meters</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simSetJointPosition.htm">sim.setJointPosition</a> (regular API)<br><a href="#simxGetJointPosition">simxGetJointPosition</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxSetJointPosition">C++</a>, <a href="b0RemoteApi-python.htm#simxSetJointPosition">Python</a>, <a href="b0RemoteApi-java.htm#simxSetJointPosition">Java</a>, <a href="b0RemoteApi-lua.htm#simxSetJointPosition">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxSetJointTargetPosition" id="simxSetJointTargetPosition"></a>simxSetJointTargetPosition</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Sets the target position of a joint</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxSetJointTargetPosition(number jointHandle, number targetPos, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>jointHandle</strong>: The handle of the joint</div>
<div><strong>targetPos</strong>: The target position of the joint, in radians or meters</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simSetJointTargetPosition.htm">sim.setJointTargetPosition</a> (regular API)<br><a href="#simxGetJointTargetPosition">simxGetJointTargetPosition</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxSetJointTargetPosition">C++</a>, <a href="b0RemoteApi-python.htm#simxSetJointTargetPosition">Python</a>, <a href="b0RemoteApi-java.htm#simxSetJointTargetPosition">Java</a>, <a href="b0RemoteApi-lua.htm#simxSetJointTargetPosition">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxSetJointTargetVelocity" id="simxSetJointTargetVelocity"></a>simxSetJointTargetVelocity</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Sets the target velocity of a joint</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxSetJointTargetVelocity(number jointHandle, number targetPos, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>jointHandle</strong>: The handle of the joint</div>
<div><strong>targetPos</strong>: The target velocity of the joint, in radians/s or meters/s</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simSetJointTargetVelocity.htm">sim.setJointTargetVelocity</a> (regular API)<br><a href="#simxGetJointTargetVelocity">simxGetJointTargetVelocity</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxSetJointTargetVelocity">C++</a>, <a href="b0RemoteApi-python.htm#simxSetJointTargetVelocity">Python</a>, <a href="b0RemoteApi-java.htm#simxSetJointTargetVelocity">Java</a>, <a href="b0RemoteApi-lua.htm#simxSetJointTargetVelocity">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxSetObjectFloatParameter" id="simxSetObjectFloatParameter"></a>simxSetObjectFloatParameter</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Sets a floating point parameter of an object</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxSetObjectFloatParameter(number objectHandle, number/string parameterID, number parameter, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>objectHandle</strong>: Handle of the object</div>
<div><strong>parameterID</strong>: The identifier of the parameter to set, specified as number or string. See also the <a href="objectParameterIDs.htm">list of possible object parameter identifiers</a> and <a href="#simxEvaluateToInt">simxEvaluateToInt</a></div>
<div><strong>parameter</strong>: The desired value of the parameter</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (number): -1 in case of an error, 0 if the parameter could not be set</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simSetObjectFloatParameter.htm">sim.setObjectFloatParameter</a> (regular API)<br><a href="#simxGetObjectFloatParameter">simxGetObjectFloatParameter</a><br><a href="#simxSetObjectIntParameter">simxSetObjectIntParameter</a><br><a href="#simxSetObjectStringParameter">simxSetObjectStringParameter</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxSetObjectFloatParameter">C++</a>, <a href="b0RemoteApi-python.htm#simxSetObjectFloatParameter">Python</a>, <a href="b0RemoteApi-java.htm#simxSetObjectFloatParameter">Java</a>, <a href="b0RemoteApi-lua.htm#simxSetObjectFloatParameter">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxSetObjectIntParameter" id="simxSetObjectIntParameter"></a>simxSetObjectIntParameter</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Sets an integer parameter of an object</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxSetObjectIntParameter(number objectHandle, number/string parameterID, number parameter, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>objectHandle</strong>: Handle of the object</div>
<div><strong>parameterID</strong>: The identifier of the parameter to set, specified as number or string. See also the <a href="objectParameterIDs.htm">list of possible object parameter identifiers</a> and <a href="#simxEvaluateToInt">simxEvaluateToInt</a></div>
<div><strong>parameter</strong>: The desired value of the parameter</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (number): -1 in case of an error, 0 if the parameter could not be set</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simSetObjectInt32Parameter.htm">sim.setObjectInt32Parameter</a> (regular API)<br><a href="#simxGetObjectIntParameter">simxGetObjectIntParameter</a><br><a href="#simxSetObjectFloatParameter">simxSetObjectFloatParameter</a><br><a href="#simxSetObjectStringParameter">simxSetObjectStringParameter</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxSetObjectIntParameter">C++</a>, <a href="b0RemoteApi-python.htm#simxSetObjectIntParameter">Python</a>, <a href="b0RemoteApi-java.htm#simxSetObjectIntParameter">Java</a>, <a href="b0RemoteApi-lua.htm#simxSetObjectIntParameter">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxSetObjectMatrix" id="simxSetObjectMatrix"></a>simxSetObjectMatrix</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Sets the transformation matrix of an object. Dynamically simulated objects will implicitely be reset before the command is applied (i.e. similar to calling <a href="regularApi/simResetDynamicObject.htm">sim.resetDynamicObject</a> just before)</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxSetObjectMatrix(number objectHandle, number/string relObjHandle, array matr, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>objectHandle</strong>: The handle of the object</div>
<div><strong>relObjHandle</strong>: Indicates relative to which reference frame the matrix is specified. Specify -1 to set the absolute matrix, <i>"sim.handle_parent"</i> to set the matrix relative to the object's parent, or an object handle relative to whose reference frame the matrix is specified. See also <a href="#simxEvaluateToInt">simxEvaluateToInt</a></div>
<div><strong>matr</strong>: The desired (Xx,Yx,Zx,Px,Xy,Yy,Zy,Py,Xz,Yz,Zz,Pz) transformation matrix</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simSetObjectMatrix.htm">sim.setObjectMatrix</a> (regular API)<br><a href="#simxGetObjectMatrix">simxGetObjectMatrix</a><br><a href="#simxSetObjectPosition">simxSetObjectPosition</a><br><a href="#simxSetObjectOrientation">simxSetObjectOrientation</a><br><a href="#simxSetObjectQuaternion">simxSetObjectQuaternion</a><br><a href="#simxSetObjectPose">simxSetObjectPose</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxSetObjectMatrix">C++</a>, <a href="b0RemoteApi-python.htm#simxSetObjectMatrix">Python</a>, <a href="b0RemoteApi-java.htm#simxSetObjectMatrix">Java</a>, <a href="b0RemoteApi-lua.htm#simxSetObjectMatrix">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxSetObjectOrientation" id="simxSetObjectOrientation"></a>simxSetObjectOrientation</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Sets the orientation (in Euler angles) of an object. Dynamically simulated objects will implicitely be reset before the command is applied (i.e. similar to calling <a href="regularApi/simResetDynamicObject.htm">sim.resetDynamicObject</a> just before)</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxSetObjectOrientation(number objectHandle, number/string relObjHandle, array euler, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>objectHandle</strong>: The handle of the object</div>
<div><strong>relObjHandle</strong>: Indicates relative to which reference frame the orientation is specified. Specify -1 to set the absolute orientation, <i>"sim.handle_parent"</i> to set the orientation relative to the object's parent, or an object handle relative to whose reference frame the orientation is specified. See also <a href="#simxEvaluateToInt">simxEvaluateToInt</a></div>
<div><strong>euler</strong>: The desired (alpha,beta,gamma) Euler-angle orientation</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simSetObjectOrientation.htm">sim.setObjectOrientation</a> (regular API)<br><a href="#simxGetObjectOrientation">simxGetObjectOrientation</a><br><a href="#simxSetObjectPosition">simxSetObjectPosition</a><br><a href="#simxSetObjectQuaternion">simxSetObjectQuaternion</a><br><a href="#simxSetObjectPose">simxSetObjectPose</a><br><a href="#simxSetObjectMatrix">simxSetObjectMatrix</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxSetObjectOrientation">C++</a>, <a href="b0RemoteApi-python.htm#simxSetObjectOrientation">Python</a>, <a href="b0RemoteApi-java.htm#simxSetObjectOrientation">Java</a>, <a href="b0RemoteApi-lua.htm#simxSetObjectOrientation">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxSetObjectParent" id="simxSetObjectParent"></a>simxSetObjectParent</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Gives an object a new parent object</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxSetObjectParent(number objectHandle, number parentHandle, bool assembly, bool keepInPlace, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>objectHandle</strong>: The handle of the object</div>
<div><strong>parentHandle</strong>: handle of the object that will become parent, or -1 if the object should become parentless</div>
<div><strong>assembly</strong>: true if the two objects can be assembled via a predefined assembly transformation (refer to the assembling option in the object common properties). In that case, <b>parentHandle</b> can't be -1, and <b>keepInPlace</b> should be set to false</div>
<div><strong>keepInPlace</strong>: indicates whether the object's absolute position and orientation should remain same</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (number): -1 if the operation was not successful</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simSetObjectParent.htm">sim.simSetObjectParent</a> (regular API)<br><a href="#simxGetObjectParent">simxGetObjectParent</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxSetObjectParent">C++</a>, <a href="b0RemoteApi-python.htm#simxSetObjectParent">Python</a>, <a href="b0RemoteApi-java.htm#simxSetObjectParent">Java</a>, <a href="b0RemoteApi-lua.htm#simxSetObjectParent">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxSetObjectPose" id="simxSetObjectPose"></a>simxSetObjectPose</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Sets the pose (position + quaternion) of an object. Dynamically simulated objects will implicitely be reset before the command is applied (i.e. similar to calling <a href="regularApi/simResetDynamicObject.htm">sim.resetDynamicObject</a> just before)</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxSetObjectPose(number objectHandle, number/string relObjHandle, array pose, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>objectHandle</strong>: The handle of the object</div>
<div><strong>relObjHandle</strong>: Indicates relative to which reference frame the pose is specified. Specify -1 to set the absolute pose, <i>"sim.handle_parent"</i> to set the pose relative to the object's parent, or an object handle relative to whose reference frame the pose is specified. See also <a href="#simxEvaluateToInt">simxEvaluateToInt</a></div>
<div><strong>pose</strong>: The desired (X,Y,Z,Qx,Qy,Qz,Qw) pose</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="#simxGetObjectPose">simxGetObjectPose</a><br><a href="#simxSetObjectPosition">simxSetObjectPosition</a><br><a href="#simxSetObjectOrientation">simxSetObjectOrientation</a><br><a href="#simxSetObjectQuaternion">simxSetObjectQuaternion</a><br><a href="#simxSetObjectMatrix">simxSetObjectMatrix</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxSetObjectPose">C++</a>, <a href="b0RemoteApi-python.htm#simxSetObjectPose">Python</a>, <a href="b0RemoteApi-java.htm#simxSetObjectPose">Java</a>, <a href="b0RemoteApi-lua.htm#simxSetObjectPose">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxSetObjectPosition" id="simxSetObjectPosition"></a>simxSetObjectPosition</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Sets the position of an object. Dynamically simulated objects will implicitely be reset before the command is applied (i.e. similar to calling <a href="regularApi/simResetDynamicObject.htm">sim.resetDynamicObject</a> just before)</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxSetObjectPosition(number objectHandle, number/string relObjHandle, array position, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>objectHandle</strong>: The handle of the object</div>
<div><strong>relObjHandle</strong>: Indicates relative to which reference frame the position is specified. Specify -1 to set the absolute position, <i>"sim.handle_parent"</i> to set the position relative to the object's parent, or an object handle relative to whose reference frame the position is specified. See also <a href="#simxEvaluateToInt">simxEvaluateToInt</a></div>
<div><strong>position</strong>: The desired (X,Y,Z) position</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simSetObjectPosition.htm">sim.setObjectPosition</a> (regular API)<br><a href="#simxGetObjectPosition">simxGetObjectPosition</a><br><a href="#simxSetObjectOrientation">simxSetObjectOrientation</a><br><a href="#simxSetObjectQuaternion">simxSetObjectQuaternion</a><br><a href="#simxSetObjectPose">simxSetObjectPose</a><br><a href="#simxSetObjectMatrix">simxSetObjectMatrix</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxSetObjectPosition">C++</a>, <a href="b0RemoteApi-python.htm#simxSetObjectPosition">Python</a>, <a href="b0RemoteApi-java.htm#simxSetObjectPosition">Java</a>, <a href="b0RemoteApi-lua.htm#simxSetObjectPosition">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxSetObjectQuaternion" id="simxSetObjectQuaternion"></a>simxSetObjectQuaternion</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Sets the quaternion orientation of an object. Dynamically simulated objects will implicitely be reset before the command is applied (i.e. similar to calling <a href="regularApi/simResetDynamicObject.htm">sim.resetDynamicObject</a> just before)</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxSetObjectQuaternion(number objectHandle, number/string relObjHandle, array quat, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>objectHandle</strong>: The handle of the object</div>
<div><strong>relObjHandle</strong>: Indicates relative to which reference frame the orientation is specified. Specify -1 to set the absolute orientation, <i>"sim.handle_parent"</i> to set the orientation relative to the object's parent, or an object handle relative to whose reference frame the orientation is specified. See also <a href="#simxEvaluateToInt">simxEvaluateToInt</a></div>
<div><strong>quat</strong>: The desired (Qx,Qy,Qz,Qw) quaternion orientation</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simSetObjectQuaternion.htm">sim.setObjectQuaternion</a> (regular API)<br><a href="#simxGetObjectQuaternion">simxGetObjectQuaternion</a><br><a href="#simxSetObjectPosition">simxSetObjectPosition</a><br><a href="#simxSetObjectOrientation">simxSetObjectOrientation</a><br><a href="#simxSetObjectPose">simxSetObjectPose</a><br><a href="#simxSetObjectMatrix">simxSetObjectMatrix</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxSetObjectQuaternion">C++</a>, <a href="b0RemoteApi-python.htm#simxSetObjectQuaternion">Python</a>, <a href="b0RemoteApi-java.htm#simxSetObjectQuaternion">Java</a>, <a href="b0RemoteApi-lua.htm#simxSetObjectQuaternion">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxSetObjectSelection" id="simxSetObjectSelection"></a>simxSetObjectSelection</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Sets the object selection state</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxSetObjectSelection(array selection, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>selection</strong>: The handles of the objects to be selected</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (number): -1 if operation was not successful</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simRemoveObjectFromSelection.htm">sim.removeObjectFromSelection</a> (regular API)<br><a href="regularApi/simAddObjectToSelection.htm">sim.addObjectToSelection</a> (regular API)<br><a href="#simxGetObjectSelection">simxGetObjectSelection</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxSetObjectSelection">C++</a>, <a href="b0RemoteApi-python.htm#simxSetObjectSelection">Python</a>, <a href="b0RemoteApi-java.htm#simxSetObjectSelection">Java</a>, <a href="b0RemoteApi-lua.htm#simxSetObjectSelection">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxSetObjectStringParameter" id="simxSetObjectStringParameter"></a>simxSetObjectStringParameter</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Sets a string parameter of an object</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxSetObjectStringParameter(number objectHandle, number/string parameterID, string parameter, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>objectHandle</strong>: Handle of the object</div>
<div><strong>parameterID</strong>: The identifier of the parameter to set, specified as number or string. See also the <a href="objectParameterIDs.htm">list of possible object parameter identifiers</a> and <a href="#simxEvaluateToInt">simxEvaluateToInt</a></div>
<div><strong>parameter</strong>: The desired value of the parameter</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (number): -1 in case of an error, 0 if the parameter could not be set</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simSetObjectStringParameter.htm">sim.setObjectStringParameter</a> (regular API)<br><a href="#simxGetObjectStringParameter">simxGetObjectStringParameter</a><br><a href="#simxSetObjectIntParameter">simxSetObjectIntParameter</a><br><a href="#simxSetObjectFloatParameter">simxSetObjectFloatParameter</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxSetObjectStringParameter">C++</a>, <a href="b0RemoteApi-python.htm#simxSetObjectStringParameter">Python</a>, <a href="b0RemoteApi-java.htm#simxSetObjectStringParameter">Java</a>, <a href="b0RemoteApi-lua.htm#simxSetObjectStringParameter">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxSetStringParameter" id="simxSetStringParameter"></a>simxSetStringParameter</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Sets a <a href="apiConstants.htm#stringParameters">string parameter</a></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxSetStringParameter(number/string paramId, string paramVal, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>paramId</strong>: The parameter identifier. Can also be a string value, e.g. <i>"sim.stringparam_scene_name"</i>. See also <a href="#simxEvaluateToInt">simxEvaluateToInt</a></div>
<div><strong>paramVal</strong>: The value of the parameter</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simSetStringParameter.htm">sim.setStringParameter</a> (regular API)<br><a href="#simxGetStringParameter">simxGetStringParameter</a><br><a href="#simxSetBoolParameter">simxSetBoolParameter</a><br><a href="#simxSetIntParameter">simxSetIntParameter</a><br><a href="#simxSetFloatParameter">simxSetFloatParameter</a><br><a href="#simxSetArrayParameter">simxSetArrayParameter</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxSetStringParameter">C++</a>, <a href="b0RemoteApi-python.htm#simxSetStringParameter">Python</a>, <a href="b0RemoteApi-java.htm#simxSetStringParameter">Java</a>, <a href="b0RemoteApi-lua.htm#simxSetStringParameter">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxSetStringSignal" id="simxSetStringSignal"></a>simxSetStringSignal</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Sets a string <a href="meansOfCommunication.htm#signals">signal</a>. Such a signal represents a byte buffer</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxSetStringSignal(string sigName, byteArray sigValue, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>sigName</strong>: The name of the signal</div>
<div><strong>sigValue</strong>: The value of the signal</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simSetStringSignal.htm">sim.setStringSignal</a> (regular API)<br><a href="#simxGetStringSignal">simxGetStringSignal</a><br><a href="#simxClearStringSignal">simxClearStringSignal</a><br><a href="#simxSetIntSignal">simxSetIntSignal</a><br><a href="#simxSetFloatSignal">simxSetFloatSignal</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxSetStringSignal">C++</a>, <a href="b0RemoteApi-python.htm#simxSetStringSignal">Python</a>, <a href="b0RemoteApi-java.htm#simxSetStringSignal">Java</a>, <a href="b0RemoteApi-lua.htm#simxSetStringSignal">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxSetVisionSensorImage" id="simxSetVisionSensorImage"></a>simxSetVisionSensorImage</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Applies an image of a vision sensor</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxSetVisionSensorImage(number objectHandle, bool greyScale, byteArray img, string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>objectHandle</strong>: The handle of the vision sensor</div>
<div><strong>greyScale</strong>: Whether the provided image is grey scale or color</div>
<div><strong>img</strong>: The image that must be provided in the same resolution as the vision sensor. In a grey scale image, each pixel is represented by one byte, with a color image, each pixel is represented by a RGB-byte-triplet</div>
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simSetVisionSensorCharImage.htm">sim.setVisionSensorCharImage</a> (regular API)<br><a href="#simxGetVisionSensorImage">simxGetVisionSensorImage</a><br><a href="#simxGetVisionSensorDepthBuffer">simxGetVisionSensorDepthBuffer</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxSetVisionSensorImage">C++</a>, <a href="b0RemoteApi-python.htm#simxSetVisionSensorImage">Python</a>, <a href="b0RemoteApi-java.htm#simxSetVisionSensorImage">Java</a>, <a href="b0RemoteApi-lua.htm#simxSetVisionSensorImage">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxSleep" id="simxSleep"></a>simxSleep</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Waits for a certain duration</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">simxSleep(number durationInMs)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>durationInMs</strong>: The sleep time in milliseconds</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="#simxGetTimeInMs">simxGetTimeInMs</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxSleep">C++</a>, <a href="b0RemoteApi-python.htm#simxSleep">Python</a>, <a href="b0RemoteApi-java.htm#simxSleep">Java</a>, <a href="b0RemoteApi-lua.htm#simxSleep">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxSpin" id="simxSpin"></a>simxSpin</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Handles all callbacks for subscribers that have messages waiting, in a loop (i.e. does not return)</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">simxSpin()<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="#simxSpinOnce">simxSpinOnce</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxSpin">C++</a>, <a href="b0RemoteApi-python.htm#simxSpin">Python</a>, <a href="b0RemoteApi-java.htm#simxSpin">Java</a>, <a href="b0RemoteApi-lua.htm#simxSpin">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxSpinOnce" id="simxSpinOnce"></a>simxSpinOnce</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Calls all callbacks for subscribers that have messages waiting, then returns</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">simxSpinOnce()<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="#simxSpin">simxSpin</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxSpinOnce">C++</a>, <a href="b0RemoteApi-python.htm#simxSpinOnce">Python</a>, <a href="b0RemoteApi-java.htm#simxSpinOnce">Java</a>, <a href="b0RemoteApi-lua.htm#simxSpinOnce">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxStartSimulation" id="simxStartSimulation"></a>simxStartSimulation</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Requests a start of a simulation (or a resume of a paused simulation)</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxStartSimulation(string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (number): 0 if the operation could not be performed. >0 in case of success</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simStartSimulation.htm">sim.startSimulation</a> (regular API)<br><a href="#simxStopSimulation">simxStopSimulation</a><br><a href="#simxPauseSimulation">simxPauseSimulation</a><br><a href="#simxSynchronousTrigger">simxSynchronousTrigger</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxStartSimulation">C++</a>, <a href="b0RemoteApi-python.htm#simxStartSimulation">Python</a>, <a href="b0RemoteApi-java.htm#simxStartSimulation">Java</a>, <a href="b0RemoteApi-lua.htm#simxStartSimulation">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxStopSimulation" id="simxStopSimulation"></a>simxStopSimulation</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Requests a stop of the running simulation</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">array simxStopSimulation(string topic)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>topic</strong>: The <a href="#topics">topic or communication channel</a> to use for executing the function call</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
<div>An array that contains:</div><div><strong>item1</strong> (bool): Whether the function was successfully called on the server side</div>
<div><strong>item2</strong> (number): 0 if the operation could not be performed. >0 in case of success</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="regularApi/simStopSimulation.htm">sim.stopSimulation</a> (regular API)<br><a href="#simxStartSimulation">simxStartSimulation</a><br><a href="#simxPauseSimulation">simxPauseSimulation</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxStopSimulation">C++</a>, <a href="b0RemoteApi-python.htm#simxStopSimulation">Python</a>, <a href="b0RemoteApi-java.htm#simxStopSimulation">Java</a>, <a href="b0RemoteApi-lua.htm#simxStopSimulation">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxSynchronous" id="simxSynchronous"></a>simxSynchronous</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Enables/disables the V-REP synchronous mode during simulation. In synchonous mode, each simulation step will require an external trigger signal in order to be run</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">simxSynchronous(bool enable)<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
<div><strong>enable</strong>: The enable state of the synchonous mode</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="#simxSynchronousTrigger">simxSynchronousTrigger</a><br><a href="#simxGetSimulationStepDone">simxGetSimulationStepDone</a><br><a href="#simxGetSimulationStepStarted">simxGetSimulationStepStarted</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxSynchronous">C++</a>, <a href="b0RemoteApi-python.htm#simxSynchronous">Python</a>, <a href="b0RemoteApi-java.htm#simxSynchronous">Java</a>, <a href="b0RemoteApi-lua.htm#simxSynchronous">Lua</a></div></td>
</tr>
</table>
<br>

    <h3 class="subsectionBar">
<a name="simxSynchronousTrigger" id="simxSynchronousTrigger"></a>simxSynchronousTrigger</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">Description</td>
<td class="apiTableRightDescr">Triggers next simulation step, if the V-REP synchronous mode was previously enabled</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCSyn">synopsis</td>
<td class="remApiTableRightCSyn">simxSynchronousTrigger()<br></td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Parameters</td>
<td class="remApiTableRightCParam">
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCRet">return</td>
<td class="remApiTableRightCRet">
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">See also</td>
<td class="remApiTableRightCParam">
<div>
<a href="#simxSynchronous">simxSynchronous</a><br><a href="#simxGetSimulationStepDone">simxGetSimulationStepDone</a><br><a href="#simxGetSimulationStepStarted">simxGetSimulationStepStarted</a></div>
</td>
</tr>
<tr class="apiTableTr">
<td class="remApiTableLeftCParam">Other languages</td>
<td class="remApiTableRightCParam">
<div><a href="b0RemoteApi-cpp.htm#simxSynchronousTrigger">C++</a>, <a href="b0RemoteApi-python.htm#simxSynchronousTrigger">Python</a>, <a href="b0RemoteApi-java.htm#simxSynchronousTrigger">Java</a>, <a href="b0RemoteApi-lua.htm#simxSynchronousTrigger">Lua</a></div></td>
</tr>
</table>
<br>

<h3 class="subsectionBar">
<a name="topics" id="topics"></a>Topics / Communication channels</h3>
<pre class=lightGreyBox>
<a href="#simxServiceCall">simxServiceCall</a>
<a href="#simxDefaultPublisher">simxDefaultPublisher</a>
<a href="#simxDefaultSubscriber">simxDefaultSubscriber</a>
<a href="#simxCreatePublisher">simxCreatePublisher</a>
<a href="#simxCreateSubscriber">simxCreateSubscriber</a>
</pre>
<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>
<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>
</td></tr></table></div></body>
</html>
