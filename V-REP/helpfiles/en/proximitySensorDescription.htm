<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Strict//EN">
<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<title>Proximity sensor types and mode of operation</title>
<link rel="stylesheet" type="text/css" href="../style.css">
</head>

<body>

<div align="center">
<table class=allEncompassingTable >
 <tr>
  <td >
<p><a href="../index.html" TARGET="_top"><img src="images/homeImg.png"></a></p>



<h1>Proximity sensor types and mode of operation</h1>


<p><a href="proximitySensors.htm">Proximity sensors</a> come in 6 different types and can be customized to a large extent:
</p>

<li><strong>Ray-type</strong>: the ray-type proximity sensor is ideally suited for very simple modeling of a proximity sensor, or for modeling of a laser range finder. They are the fastest proximity sensors.
</li>

<li><strong>Randomized ray-type</strong>: the randomized ray-type proximity sensor operates as a ray-type sensor that randomly sweeps a cone volume. It has a similar appearance as the cone-type proximity sensor.<br>
</li>

<li><strong>Pyramid-type</strong>: the pyramid-type proximity sensor is ideally suited for simple modeling of a proximity sensor with a detection volume that is rectangular. They are very fast.<br>
</li>

<li><strong>Cylinder-type</strong>: the cylinder-type proximity sensor is ideally suited for simple modeling of a proximity sensor with a detection volume that is revolute. They are very fast.<br>
</li>

<li><strong>Disk-type</strong>: the disk-type proximity sensor allows precisely modeling of a proximity sensor with a revolute-scanning detection volume. Depending on the selected precision and operation mode, they can be a little bit more calculation intensive.<br>
</li>

<li><strong>Cone-type</strong>: the cone-type proximity sensor allows for the best and most precise modeling of most proximity sensors. Depending on the selected precision and operation mode, they can be a little bit more calculation intensive.<br>
</li>

<p align=center><img src="images/proximitySensorDescription1.jpg"></p>
<p class=imageLabel>[Ray-type, pyramid-type, cylinder-type, disk-type and cone- or randomized ray-type proximity sensors]</p>
<br>

<p>Proximity sensors operate in a geometrically exact manner: they perform an exact distance calculation between their sensing point (small sphere) and any <a href="detectableObjects.htm">detectable</a> <a href="entities.htm">entity</a> that interferes with its detection volume (they don't perform a simple collision detection between the sensing volume edges like most other simulation software, but an exact distance calculation within the detection volume). Each proximity sensor will compute following minimum distance:</p>

<p align=center>
Sensing point &lt;-- --&gt; (detectable entity &#8745; detection volume)
</p>

<p align=center><img src="images/proximitySensorDescription2.jpg"></p>
<p class=imageLabel>[Minimum distance calculation between sensing point and (detectable entity &#8745; detection volume)]</p>
<br>

<p>Calculation results of proximity sensors can be recorded by graph objects. Refer to <a href="graphs.htm">graphs</a> and <a href="dataStreamTypes.htm">graph data streams types</a> for more information about how to record proximity sensor data.<br>
</p>



<br>
<h3 class=recommendedTopics>Recommended topics</h3>
<li><a href="proximitySensors.htm">Proximity sensors</a></li>
<li><a href="proximitySensorPropertiesDialog.htm">Proximity sensor properties</a></li>
<li><a href="detectableObjects.htm">Detectable objects</a></li>

<br>
<br>


 </tr>
</table> 
</div>  
  
  
</body>

</html>
