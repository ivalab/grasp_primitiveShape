<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Strict//EN">
<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<title>simReadDistance</title>
<link rel="stylesheet" type="text/css" href="../../style.css">
</head>

<body>

<div align="center">
<table class=allEncompassingTable >
 <tr>
  <td >
<p><a href="../../index.html" TARGET="_top"><img src="../images/homeImg.png"></a></p>

<h1><a href="../apiOverview.htm">Regular API</a> function</h1>
<h3 class=subsectionBar><a name="simReadDistance" id="simReadDistance"></a>simReadDistance / sim.readDistance</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Reads the distance of a registered distance object. This function doesn't perform distance measurement, it merely reads the result from a previous call to <a href="simHandleDistance.htm">sim.handleDistance</a> (sim.handleDistance is called in the default main script). See also <a href="simResetDistance.htm">sim.resetDistance</a> and <a href="simCheckDistance.htm">sim.checkDistance</a>.<br></td>
</tr> 
<tr class=apiTableTr> 
<td class=apiTableLeftCSyn>
C synopsis
</td> 
<td class=apiTableRightCSyn>simInt simReadDistance(simInt distanceObjectHandle,simFloat* smallestDistance)<br></td> 
</tr> 
<tr class=apiTableTr> 
<td class=apiTableLeftCParam>C parameters</td> 
<td class=apiTableRightCParam>
<div><strong>distanceObjectHandle</strong>: handle of the distance object</div>
<div><strong>smallestDistance</strong>: smallest distance (valid only if return value is different from -1)</div>
<div></div></td> 
</tr> 
<tr class=apiTableTr> 
<td class=apiTableLeftCRet>
C return value
</td> 
<td class=apiTableRightCRet>
<div>different from -1 if distance was read, -1 in case of an error.<br>
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=apiTableLeftLSyn>
Lua synopsis
</td> 
<td class=apiTableRightLSyn>number result,number smallestDistance=sim.readDistance(number distanceObjectHandle)<br></td> 
</tr> 
<tr class=apiTableTr> 
<td class=apiTableLeftLParam>Lua parameters</td> 
<td class=apiTableRightLParam>
<div>Same as C-function</div>
<div></div></td> 
</tr> 
<tr class=apiTableTr> 
<td class=apiTableLeftLRet>
Lua return values
</td> 
<td class=apiTableRightLRet>
<div></div>
<div><strong>result</strong>: 1 if distance was read, -1 in case of an error, and 0 if <a href="simHandleDistance.htm">sim.handleDistance</a> was never called, or if <a href="simResetDistance.htm">sim.resetDistance</a> was previously called.<br>
</div>
<div><strong>smallestDistance</strong>: the smallest distance. Is nil if result is not 1</div>
<div></div></td> 
</tr> 

<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>
Remote API equiv.
</td> 
<td class=remApiTableRightCParam>
<div>B0-based remote API: <a href="../b0RemoteApi-cpp.htm#simxReadDistance">simxReadDistance</a></div>
<div>Legacy remote API: <a href="../remoteApiFunctions.htm#simxReadDistance">simxReadDistance</a></div>
</td> 
</tr> 

</table> 

<br>
<p><a href="../apiFunctions.htm">All regular API functions on one page</a></p>
<br>
<br>
</td>
</tr>
</table>
</div>
</body>
</html>
