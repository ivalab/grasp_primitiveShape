<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Strict//EN">
<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<title>SDF importer plugin</title>
<link rel="stylesheet" type="text/css" href="../style.css">
</head>

<body>

<div align="center">
<table class=allEncompassingTable >
 <tr>
  <td >
<p><a href="../index.html" TARGET="_top"><img src="images/homeImg.png"></a></p>



<h1>SDF importer plugin</h1>

<p>The SDF  file format (*.sdf) is supported for import operations via a plugin: <em><a href="https://github.com/CoppeliaRobotics/v_repExtSDF" target="_blank">v_repExtSDF</a></em>. If the  SDF plugin was correctly loaded,  you can access the import operation and dialog via [Menu bar --&gt; Plugins --&gt; SDF import...]:</p>

<p align=center><img src="images/sdfDlg.jpg"></p>
<p class=imageLabel>[SDF plugin dialog]</p>
<br>

<li><strong>Ignore missing required values (SDF parser)</strong>: ignores required elements that are missing (if some format specifications are not respected).
</li>

<li><strong>Assign collision links to layer 9</strong>: hides collision links in layer 9 (layer 9 is off by default).
</li>

<li><strong>Assign joints to layer 10</strong>: hides joints in layer 10 (layer 10 is off by default).
</li>

<li><strong>Convex decompose non-convex collision links</strong>: decomposes non-convex respondable shapes into convex shapes. This item should always be checked, since convex shapes perform faster and are more stable during dynamic collision response calculations.
</li>

<li><strong>Show convex decomposition dialog</strong>: allows to adjust the way how the convex decomposition operates.
</li>

<li><strong>Create visual links if none</strong>: creates an artificial visual element if the link doesn't define one.
</li>

<li><strong>Center model above ground</strong>: centers the imported model above the ground.
</li>

<li><strong>Prepare model definition if feasable</strong>: tags the root object as &quot;model base&quot; and adapts the other objects accordingly (e.g. clicking an object in the model will select the whole model instead of an individual object).
</li>

<li><strong>Alternate local respondable masks</strong>: when checked, alternates the local collision masks so that adjacent respondable shapes won't react to collision. If unckecked, then all respondable shapes will only react to collision with objects outside of the model.
</li>

<li><strong>Enable position control for revolute and prismatic joints</strong>: if checked, then revolute and prismatic joints will be in position control mode. Joint force/torque and upper regulation velocity are taken from the SDF file.</li>

<li><strong>Import</strong>: triggers the import operation.
</li>

<p>Following API functions are also supported:</p>

<h3 class=subsectionBarTab><a name="simExtSDF_dump" id="simExtSDF_dump"></a><a name="simSDF.dump" id="simSDF.dump"></a>simSDF.dump</h3>
<table class=apiTableTab>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>
Inspect the structure of a SDF file. Can be useful for tracking bugs.</td>
</tr> 
<tr class=apiTableTr> 
<td class=apiTableLeftLSyn>
Lua synopsis
</td> 
<td class=apiTableRightLSyn>simSDF.dump(string fileName)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=apiTableLeftLParam>Lua parameters</td> 
<td class=apiTableRightLParam>
<div><strong>fileName</strong>: SDF file path</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=apiTableLeftLRet>
Lua return values
</td> 
<td class=apiTableRightLRet>
<div>-</div></td> 
</tr> 
</table> 
<br>



<h3 class=subsectionBarTab><a name="simExtSDF_import" id="simExtSDF_import"></a><a name="simSDF.import" id="simSDF.import"></a>simSDF.import</h3>
<table class=apiTableTab>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>
Import a SDF file into the current scene.</td>
</tr> 
<tr class=apiTableTr> 
<td class=apiTableLeftLSyn>
Lua synopsis
</td> 
<td class=apiTableRightLSyn>simSDF.import(string fileName, bool ignoreMissingValues = false, bool hideCollisionLinks = true, bool hideJoints = true, bool convexDecompose = true, bool showConvexDecompositionDlg = false, bool createVisualIfNone = true, bool centerModel = true, bool prepareModel = true, bool noSelfCollision = true, bool positionCtrl = true)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=apiTableLeftLParam>Lua parameters</td> 
<td class=apiTableRightLParam>
<div>See dialog items above for parameter details</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=apiTableLeftLRet>
Lua return values
</td> 
<td class=apiTableRightLRet>
<div>-</div></td> 
</tr> 
</table> 
<br>








<br>
<br>

 </tr>
</table> 
</div>  
  
  
</body>

</html>
